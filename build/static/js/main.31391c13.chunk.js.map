{"version":3,"sources":["logo.svg","pages/profilepage.js","pages/noticepage.js","pages/favoritepage.js","pages/uploadpage.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","useStyles","makeStyles","body","padding","ProfilePage","props","NoticePage","FavoritePage","UploadPage","require","config","deferredPrompt","API_KEY","process","window","addEventListener","e","console","log","alert","prompt","userChoice","then","choiceResult","outcome","footer","position","left","bottom","width","display","justifyContent","bottomMenu","imageContainer","flexDirection","flexWrap","marginBottom","foodImg","backgroundColor","height","margin","borderRadius","ImageContainer","classes","className","data","title","Feed","useState","undefined","images","setImages","setRecipes","useEffect","someFetcher","recpiesRef","db","collection","removeImg","listId","a","get","snapshot","images_array","recipe_docs","forEach","doc","push","key","id","removeFunction","catch","err","App","React","value","setValue","redirect","setRedirect","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","firebase","initializeApp","firestore","initFirebase","handleChange","event","newValue","to","mainContainer","onClick","exact","path","component","BottomNavigation","onChange","BottomNavigationAction","label","icon","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.31391c13.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.25bf045c.svg\";","import React, {useState, useEffect} from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    padding: 15\r\n  }\r\n});\r\n\r\nfunction ProfilePage(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  // console.log(props)\r\n\r\n  return (\r\n\r\n    <div>\r\n    <h1>Hey you</h1>\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default ProfilePage;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    padding: 15\r\n  }\r\n});\r\n\r\nfunction NoticePage(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  // console.log(props)\r\n\r\n  return (\r\n\r\n    <div>\r\n    <h1>Dina notiser</h1>\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default NoticePage;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    padding: 15\r\n  }\r\n});\r\n\r\nfunction FavoritePage(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  // console.log(props)\r\n\r\n  return (\r\n\r\n    <div>\r\n    <h1>Dina listor</h1>\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default FavoritePage;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    padding: 15\r\n  }\r\n});\r\n\r\nfunction UploadPage(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  // console.log(props)\r\n\r\n  return (\r\n\r\n    <div>\r\n    <h1>Upload</h1>\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default UploadPage;\r\n","import React, {useState, useEffect} from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch, Redirect } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport logo from './logo.svg';\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nimport ProfilePage from './pages/profilepage';\nimport NoticePage from './pages/noticepage';\nimport FavoritePage from './pages/favoritepage';\nimport UploadPage from './pages/uploadpage';\n// import Feed from './pages/feedpage';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport PublishIcon from '@material-ui/icons/PublishRounded';\nimport NotificationsActiveRoundedIcon from '@material-ui/icons/NotificationsActiveRounded';\nimport LoyaltyRoundedIcon from '@material-ui/icons/LoyaltyRounded';\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\n\nrequire('dotenv').config();\n//\nconst API_KEY = process.env.REACT_APP_FIREBASE_API_KEY;\n\nlet deferredPrompt;\n\n\n\nwindow.addEventListener('beforeinstallprompt', (e) => {\n  // Stash the event so it can be triggered later.\n  deferredPrompt = e;\n\n  console.log(\"beforeinstallprompt\")\n\nalert(\"Heello\")\n\n  deferredPrompt.prompt();\n  // Update UI notify the user they can add to home screen\n  // showInstallPromotion();\n  deferredPrompt.userChoice\n    .then((choiceResult) => {\n      if (choiceResult.outcome === 'accepted') {\n        console.log('User accepted the A2HS prompt');\n      } else {\n        console.log('User dismissed the A2HS prompt');\n      }\n      deferredPrompt = null;\n  });\n\n});\n\nconst useStyles = makeStyles({\n  body: {\n    padding: 15\n  },\n  footer: {\n    position: 'fixed',\n    left: 0,\n    bottom: 0,\n    width: 100 + '%',\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  bottomMenu: {\n    width: 500,\n  },\n  imageContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    marginBottom: 50,\n\n  },\n  foodImg: {\n    backgroundColor: 'pink',\n    height: 100,\n    width: 100,\n    margin: 5,\n    borderRadius: 20\n  },\n\n});\n\nfunction ImageContainer(props) {\n\n  const classes = useStyles();\n\n  console.log(props)\n  // <button onClick={() => props.removeFunction(props.listId) }>del</button>\n\n  return (\n\n    <div>\n\n      <div className={classes.foodImg}>\n\n      </div>\n      {props.data.title}\n    </div>\n\n  );\n\n}\n\n\nfunction Feed() {\n\n  const [images, setImages] = useState(undefined);\n  const [recipes, setRecipes] = useState(undefined);\n  const [docs, setDocs] = useState(undefined);\n\n  useEffect(() => {\n    someFetcher();\n  }, []);\n\n  const classes = useStyles();\n  let recpiesRef = db.collection('recipes');\n\n  const removeImg = (listId) => {\n\n    console.log(\"remove \" + listId +  \" from parent component \")\n\n  }\n\n  const someFetcher = async () => {\n\n    recpiesRef.get()\n      .then(snapshot => {\n\n        let images_array = [];\n        let recipe_docs = [];\n\n        snapshot.forEach(doc => {\n          images_array.push(<ImageContainer key={doc.id} listId={doc.id} data={doc.data()} removeFunction={removeImg}/>);\n          recipe_docs.push(doc.data());\n          //docs_array.push(doc)\n        })\n\n        setImages(images_array);\n        setRecipes(recipe_docs);\n\n      })\n      .catch(err => {\n        console.log('Error getting documents', err);\n    });\n\n  }\n\n  // <button onClick={() => setCount(count + 1)}>Click me</button>\n\n  return (\n    <div>\n\n      <h1>Nya recept</h1>\n\n      <div className={classes.imageContainer}>{images}</div>\n\n    </div>\n  );\n\n}\n\nlet db = undefined;\nfunction initFirebase() {\n\n  console.log(\"run initFirebase\")\n\n  const firebaseConfig = {\n    apiKey: API_KEY, // \"AIzaSyAq0vTBf0o5MckjHcCOJiJ_DRK8v_UZY88\",\n    authDomain: \"campuskost-firebase.firebaseapp.com\",\n    databaseURL: \"https://campuskost-firebase.firebaseio.com\",\n    projectId: \"campuskost-firebase\",\n    storageBucket: \"campuskost-firebase.appspot.com\",\n    messagingSenderId: \"477692438735\",\n    appId: \"1:477692438735:web:2e6dce163d7f7ce8baafba\",\n    measurementId: \"G-MDB52ZHJER\"\n  };\n\n  firebase.initializeApp(firebaseConfig);\n  const db = firebase.firestore();\n\n  return db;\n}\n\n\nfunction App() {\n\n  const [value, setValue] = React.useState('');\n  const [redirect, setRedirect] = React.useState(false);\n\n  // let history = useHistory();\n\n\n  if(db === undefined)\n  {\n    db = initFirebase();\n  }\n\n  const classes = useStyles();\n\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n    setRedirect(true);\n    // history.push('/' + newValue );\n\n  };\n\n  return (\n    <div className={classes.body}>\n\n      <Router>\n\n      {redirect ? <Redirect to={\"/\" + value} /> : null }\n\n      <div className={classes.mainContainer}>\n\n      <button value=\"profile\" onClick={handleChange}>Profil</button>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Feed/>\n          </Route>\n\n          <Route path=\"/profile\" component={ProfilePage} />\n          <Route path=\"/upload\" component={UploadPage} />\n          <Route path=\"/notices\" component={NoticePage} />\n          <Route path=\"/saved\" component={FavoritePage} />\n        </Switch>\n\n      </div>\n      <div className={classes.footer}>\n        <BottomNavigation value={value} onChange={handleChange} className={classes.bottomMenu}>\n          <BottomNavigationAction label=\"Flöde\" value=\"\" icon={<HomeRoundedIcon />} />\n          <BottomNavigationAction label=\"Ladda up\" value=\"upload\" icon={<PublishIcon />} />\n          <BottomNavigationAction label=\"Notiser\" value=\"notices\" icon={<NotificationsActiveRoundedIcon />} />\n          <BottomNavigationAction label=\"Sparat\" value=\"saved\" icon={<LoyaltyRoundedIcon />} />\n        </BottomNavigation>\n      </div>\n\n      </Router>\n    </div>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}