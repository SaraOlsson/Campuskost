{"version":3,"sources":["store.js","pages/feedpage.js","pages/profilepage.js","pages/noticepage.js","pages/favoritepage.js","pages/uploadpage.js","pages/recipepage.js","pages/login.js","App.js","serviceWorker.js","index.js"],"names":["combineReducers","testReducers","state","num","action","type","step","uploadReducer","title","userReducer","signedIn","ImageContainer","props","classes","useStyles","to","data","className","foodImg","makeStyles","imageContainer","display","flexDirection","flexWrap","justifyContent","marginBottom","backgroundColor","height","width","margin","borderRadius","FeedPage","useState","images_array","i","push","key","listId","user","default_content","images","undefined","useEffect","db","collection","body","padding","ProfilePage","React","useSelector","console","log","onClick","firebase","auth","signOut","name","B","style","fontWeight","children","NoticeListItem","noticeText","recipe","ListItem","ListItemAvatar","Avatar","ListItemText","primary","secondary","time","ListItemSecondaryAction","IconButton","edge","aria-label","NoticePage","List","dense","FavoritePage","ValidCheck","Grid","item","xs","FormControlLabel","disabled","control","Checkbox","checked","color","nomargin","buttontext","textTransform","UploadPage","setTitle","labelWidth","setLabelWidth","labelRef","useRef","ingredients","desc","valid","setValid","current","offsetWidth","container","spacing","justify","alignItems","FormControl","variant","InputLabel","ref","htmlFor","OutlinedInput","value","onChange","event","target","length","Button","startIcon","RecipePage","match","params","Login","email","setEmail","password","setPassword","signedInStatus","setSignedInStatus","signContext","setSignContext","dispatch","useDispatch","onAuthStateChanged","displayName","emailVerified","photoURL","isAnonymous","uid","providerData","placeholder","evt","currentUser","alert","signInWithEmailAndPassword","catch","error","errorCode","code","errorMessage","message","createUserWithEmailAndPassword","sendEmailVerification","then","id","require","config","deferredPrompt","API_KEY","process","window","addEventListener","e","prompt","userChoice","choiceResult","outcome","ProfileBtn","text","btn","profileBtn","handleChange","jsx_content","footer","position","left","bottom","headerrow","bottomMenu","App","setValue","redirect","setRedirect","state_user","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","firestore","initFirebase","newValue","button_value","mainContainer","exact","path","component","BottomNavigation","BottomNavigationAction","label","icon","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","store","createStore","reducer","rootElement","document","getElementById","ReactDOM","render","URL","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.c2da58d9.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\nfunction testreducer(state = { num: 0 }, action) {\r\n  switch (action.type) {\r\n    case \"INCREMENT\":\r\n      return {\r\n        ...state,\r\n        num: state.num + action.step\r\n      };\r\n    case \"DECREMENT\":\r\n      return {\r\n        ...state,\r\n        num: state.num - action.step\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction uploadReducer(state = { title: \"title\" }, action) {\r\n  switch (action.type) {\r\n    case \"SETTITLE\":\r\n      return {\r\n        ...state,\r\n        title: action.title\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction userReducer(state = { signedIn: false }, action) {\r\n  switch (action.type) {\r\n    case \"SIGNIN\":\r\n      return {\r\n        ...state,\r\n        signedIn: true\r\n      };\r\n    case \"SIGNOUT\":\r\n      return {\r\n        ...state,\r\n        signedIn: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n// export default reducer;\r\n\r\nexport default combineReducers({\r\n  testReducers: testreducer,\r\n  uploadReducer: uploadReducer,\r\n  userReducer: userReducer\r\n});\r\n","import React, {useState, useEffect} from 'react';\r\nimport { BrowserRouter as Link} from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction FeedPage(props) {\r\n\r\n  const [images, setImages] = useState(default_content());\r\n  const [recipes, setRecipes] = useState(undefined);\r\n  const [docs, setDocs] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    // someFetcher();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  let recpiesRef = props.db.collection('recipes');\r\n\r\n  function default_content() {\r\n    let images_array = [];\r\n    for(let i = 0; i < 3; i++)\r\n      images_array.push(<ImageContainer key={i} listId={i} data={{title: \"Pannkaka\", user: \"Sara\"}}/>);\r\n    return images_array;\r\n  }\r\n\r\n  const someFetcher = async () => {\r\n\r\n    recpiesRef.get()\r\n      .then(snapshot => {\r\n\r\n        let images_array = [];\r\n        let recipe_docs = [];\r\n\r\n        snapshot.forEach(doc => {\r\n          images_array.push(<ImageContainer key={doc.id} listId={doc.id} data={doc.data()}/>);\r\n          recipe_docs.push(doc.data());\r\n        })\r\n\r\n        setImages(images_array);\r\n        setRecipes(recipe_docs);\r\n\r\n      })\r\n      .catch(err => {\r\n        console.log('Error getting documents', err);\r\n    });\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Nya recept!</h1>\r\n      <div className={classes.imageContainer}>{images}</div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nfunction ImageContainer(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Link to={\"/recipe/\" + props.data.title } >\r\n      <div>\r\n      <div className={classes.foodImg}></div>\r\n      {props.data.title}\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  imageContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    marginBottom: 50,\r\n\r\n  },\r\n  foodImg: {\r\n    backgroundColor: 'pink',\r\n    height: 100,\r\n    width: 100,\r\n    margin: 5,\r\n    borderRadius: 20\r\n  },\r\n});\r\n\r\nexport default FeedPage;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { BrowserRouter as Link, Redirect} from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nconst useMountEffect = (fun) => useEffect(fun, []);\r\n\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    padding: 15\r\n  }\r\n});\r\n// () =>\r\nfunction ProfilePage(props) {\r\n\r\n  const [signedIn, setSignedIn] = React.useState(false);\n  const [redirect, setRedirect] = React.useState(false);\n\n  const classes = useStyles();\n  const state = useSelector(state => state.userReducer); // subscribe to the redux store\n  console.log(state)\n\r\n  function handleSignOut() {\r\n\r\n    firebase.auth().signOut();\r\n    setRedirect(true);\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n      {!state.signedIn ? <Redirect to={\"/\"} /> : null }\r\n\r\n      <h1>Hey you</h1>\r\n      {state.signedIn === false && <p> Hey you're not signed in. Things won't work here (redirect back) </p>  }\r\n      <button onClick={ () => firebase.auth().signOut() } name=\"signout\"> Logga ut </button>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default ProfilePage;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport '../style/GlobalCssButton.css';\r\n// import * as ui from '../meterialuiimports';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemAvatar from '@material-ui/core/ListItemAvatar';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport FolderIcon from '@material-ui/icons/Folder';\r\nimport ForwardIcon from '@material-ui/icons/Forward';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\n\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    padding: 15\r\n  }\r\n});\r\n\r\nfunction generate(element) {\r\n  return [0, 1, 2].map(value =>\r\n    React.cloneElement(element, {\r\n      key: value,\r\n    }),\r\n  );\r\n}\r\n\r\n/*\r\n\r\n<ListItemText\r\n  primary= { props.user + \" följer nu dig\" }\r\n  secondary={true ? props.time : null}\r\n/>*/\r\n\r\nconst B = (props) => <span style={{fontWeight: 'bold'}}>{props.children}</span>\r\n\r\n\r\nfunction NoticeListItem(props) {\r\n\r\n  let noticeText;\r\n\r\n  switch (props.type) {\r\n    case \"FOLLOWS\":\r\n      noticeText = <span><B>{props.user}</B> följer nu dig.</span>;\r\n      break;\r\n    case \"TIPS\":\r\n      noticeText = <span><B>{props.user}</B> tipsar dig om att laga <B>{props.recipe}</B>.</span>;\r\n      break;\r\n    case \"TESTED\":\r\n      noticeText = <span><B>{props.user}</B> har testat ditt recept <B>{props.recipe}</B>.</span>;\r\n    default:\r\n\r\n  }\r\n\r\n  // if(props.type === \"FOLLOWS\")\r\n  //  noticeText = <span><B>{props.user}</B> följer nu dig.</span>;\r\n\r\n  return (\r\n\r\n    <ListItem>\r\n      <ListItemAvatar>\r\n        <Avatar>\r\n            <PersonIcon />\r\n        </Avatar>\r\n      </ListItemAvatar>\r\n\r\n      <ListItemText\r\n        primary= { noticeText }\r\n        secondary={true ? props.time : null}\r\n      />\r\n\r\n      <ListItemSecondaryAction>\r\n        <IconButton edge=\"end\" aria-label=\"delete\">\r\n          <ForwardIcon />\r\n        </IconButton>\r\n      </ListItemSecondaryAction>\r\n    </ListItem>\r\n\r\n  );\r\n\r\n}\r\n\r\nfunction NoticePage(props) {\r\n\r\n  const classes = useStyles();\r\n  // console.log(props)\r\n\r\n  return (\r\n\r\n    <div>\r\n    <h3>Dina notiser</h3>\r\n\r\n    <List dense={true}>\r\n      <NoticeListItem type=\"FOLLOWS\" user=\"Vegokocken\" time=\"1 h\"/>\r\n      <NoticeListItem type=\"TIPS\" user=\"DelicatoKing\" recipe=\"Linsgryta\" time=\"3 h\"/>\r\n      <NoticeListItem type=\"TESTED\" user=\"PastaMaster\" recipe=\"Korvstroganoff\" time=\"2 dgr\"/>\r\n    </List>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\n/*\r\n\r\n<ListItem>\r\n  <ListItemAvatar>\r\n    <Avatar>\r\n        <PersonIcon />\r\n    </Avatar>\r\n  </ListItemAvatar>\r\n  <ListItemText\r\n    primary=\"Single-line item\"\r\n    secondary={true ? 'Secondary text' : null}\r\n  />\r\n  <ListItemSecondaryAction>\r\n    <IconButton edge=\"end\" aria-label=\"delete\">\r\n      <ForwardIcon />\r\n    </IconButton>\r\n  </ListItemSecondaryAction>\r\n</ListItem>\r\n\r\n*/\r\n\r\n\r\nexport default NoticePage;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    padding: 15\r\n  }\r\n});\r\n\r\nfunction FavoritePage(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  // console.log(props)\r\n\r\n  return (\r\n\r\n    <div>\r\n    <h1>Dina listor</h1>\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default FavoritePage;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport '../style/GlobalCssButton.css';\r\n\r\nimport FilledInput from '@material-ui/core/FilledInput';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Input from '@material-ui/core/Input';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport OutlinedInput from '@material-ui/core/OutlinedInput';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\n\r\nfunction UploadPage(props) {\r\n\r\n  const [title, setTitle] = React.useState('');\r\n  const [labelWidth, setLabelWidth] = React.useState(0);\r\n  const labelRef = React.useRef(null);\r\n\r\n  const [valid, setValid] = React.useState({\r\n    title: false,\r\n    ingredients: false,\r\n    desc: false\r\n  });\r\n\r\n  const classes = useStyles();\r\n  //const dispatch = useDispatch(); // be able to dispatch\r\n  //const state = useSelector(state => state.testReducers); // subscribe to the redux store // testReducers\r\n  //const state = useSelector(state => state.uploadReducer);\r\n  //console.log(state)\r\n\r\n  React.useEffect(() => {\r\n    setLabelWidth(labelRef.current.offsetWidth);\r\n  }, []);\r\n\r\n  /*\r\n  const titleDisp = (evt) => {\r\n    dispatch({\r\n      type: \"SETTITLE\",\r\n      title: evt.target.value\r\n    })\r\n  } */\r\n\r\n  const handleChange = event => {\r\n\r\n    let value = event.target.value;\r\n    setTitle(value);\r\n    setValid({ ...valid, [\"title\"]: value.length > 2 ? true : false });\r\n\r\n  };\r\n\r\n  const addIngredients = () => {\r\n    setValid({ ...valid, [\"ingredients\"]: true });\r\n  };\r\n\r\n  const addDesc = () => {\r\n    setValid({ ...valid, [\"desc\"]: true });\r\n  };\r\n\r\n  return (\r\n\r\n    <div>\r\n      <h2>Ladda upp recept</h2>\r\n\r\n      <form>\r\n\r\n      <Grid\r\n        container\r\n        spacing={1}\r\n        justify=\"center\"\r\n        alignItems=\"center\"\r\n      >\r\n\r\n        <ValidCheck checked={valid.title} xs={2}/>\r\n\r\n        <Grid item xs={9}>\r\n        <FormControl variant=\"outlined\">\r\n          <InputLabel ref={labelRef} htmlFor=\"component-outlined\"> Rubrik </InputLabel>\r\n          <OutlinedInput\r\n            value={title}\r\n            onChange={handleChange}\r\n            labelWidth={labelWidth}\r\n          />\r\n        </FormControl>\r\n        </Grid>\r\n\r\n        <ValidCheck checked={valid.ingredients} xs={2}/>\r\n        <Grid item xs={9}> <Button onClick={addIngredients} variant=\"contained\" color=\"primary\" className={classes.buttontext}>\r\n          Lägg till ingredienser\r\n        </Button> </Grid>\r\n\r\n        <ValidCheck checked={valid.desc} xs={2}/>\r\n        <Grid item xs={9}> <Button onClick={addDesc} variant=\"contained\" color=\"primary\" className={classes.buttontext}>\r\n          Lägg till beskrivning\r\n        </Button> </Grid>\r\n\r\n\r\n        <Grid item xs={5}>\r\n        <Button\r\n          variant=\"contained\"\r\n          color=\"primary\"\r\n          startIcon={<CloudUploadIcon />}\r\n        >\r\n          Upload\r\n        </Button>\r\n        </Grid>\r\n\r\n      </Grid>\r\n\r\n      </form>\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nfunction ValidCheck(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Grid item xs={props.xs}>\r\n    <FormControlLabel disabled\r\n      control={\r\n        <Checkbox\r\n          checked={props.checked}\r\n          color=\"primary\"\r\n          className= {classes.nomargin}\r\n        />}\r\n    />\r\n    </Grid>\r\n  );\r\n}\r\n\r\n// material ui design\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    padding: 15\r\n  },\r\n  buttontext: {\r\n    textTransform: 'unset'\r\n  },\r\n  nomargin: {\r\n    margin: 0\r\n  }\r\n});\r\n\r\nexport default UploadPage;\r\n","import React, {useState, useEffect} from 'react';\r\n// import { recipeFetch } from '../actions/RecipeActions';\r\n\r\nfunction RecipePage(props) {\r\n\r\n  // console.log(props)\r\n\r\n  return (\r\n\r\n    <div>\r\n    <h1>Recept: {props.match.params.recipe}</h1>\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default RecipePage;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\n\r\nfunction Login(props) {\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [signedInStatus, setSignedInStatus] = useState(\"Ej inloggad\");\r\n  const [signContext, setSignContext ] = useState(\"Logga in\");\r\n\r\n  const dispatch = useDispatch(); // be able to dispatch\r\n  // const state = useSelector(state => state.userReducer); // subscribe to the redux store\r\n  // console.log(state)\r\n\r\n\r\n  // init app only once\r\n  useEffect(() => {\r\n    initApp();\r\n  }, []);\r\n\r\n  /**\r\n   * Handles the sign in button press.\r\n   */\r\n  function toggleSignIn() {\r\n\r\n    console.log(\"toggleSignIn\")\r\n\r\n    // sign out if signed in\r\n    if (firebase.auth().currentUser) {\r\n      firebase.auth().signOut();\r\n    } else {\r\n\r\n      if (email.length < 4) {\r\n        alert('Ogiltig mailadress, måste innehålla mer än 4 tecken.');\r\n        return;\r\n      }\r\n      if (password.length < 4) {\r\n        alert('Ogiltigt lösenord, måste innehålla mer än 4 tecken.');\r\n        return;\r\n      }\r\n      // Sign in with email and pass.\r\n      // [START authwithemail]\r\n      firebase.auth().signInWithEmailAndPassword(email, password).catch(function(error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // [START_EXCLUDE]\r\n        if (errorCode === 'auth/wrong-password') {\r\n          alert('fel lösenord.');\r\n        } else {\r\n          alert(errorMessage);\r\n        }\r\n        console.log(error);\r\n\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * Handles the sign up button press.\r\n   */\r\n  function handleSignUp() {\r\n\r\n    console.log(\"handleSignUp\")\r\n\r\n    if (email.length < 4) {\r\n      alert('Ogiltig mailadress, måste innehålla mer än 4 tecken');\r\n      return;\r\n    }\r\n    if (password.length < 4) {\r\n      alert('Ogiltigt lösenord, måste innehålla mer än 4 tecken');\r\n      return;\r\n    }\r\n    // Sign in with email and pass.\r\n    firebase.auth().createUserWithEmailAndPassword(email, password).catch(function(error) {\r\n      // Handle Errors here.\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n\r\n      if (errorCode == 'auth/weak-password') {\r\n        alert('Lösenordet är för svagt.');\r\n      } else {\r\n        alert(errorMessage);\r\n      }\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  function sendEmailVerification() {\r\n\r\n      firebase.auth().currentUser.sendEmailVerification().then(function() {\r\n        // Email Verification sent!\r\n        alert('Email Verification Sent!');\r\n\r\n      });\r\n  }\r\n\r\n  /**\r\n   * initApp handles setting up UI event listeners and registering Firebase auth listeners:\r\n   *  - firebase.auth().onAuthStateChanged: This listener is called when the user is signed in or\r\n   *    out, and that is where we update the UI.\r\n   */\r\n  function initApp() {\r\n\r\n    console.log(\"initApp\")\r\n\r\n    // Listening for auth state changes.\r\n    firebase.auth().onAuthStateChanged(function(user) {\r\n\r\n      if (user) {\r\n        // User is signed in.\r\n        var displayName = user.displayName;\r\n        var email = user.email;\r\n        var emailVerified = user.emailVerified;\r\n        var photoURL = user.photoURL;\r\n        var isAnonymous = user.isAnonymous;\r\n        var uid = user.uid;\r\n        var providerData = user.providerData;\r\n\r\n        // console.log('user json: ')\r\n        //console.log(JSON.stringify(user, null, '  '))\r\n\r\n        setSignedInStatus('Inloggad');\r\n        setSignContext('Logga ut');\r\n\r\n        dispatch({\r\n          type: \"SIGNIN\",\r\n          signedIn: \"\"\r\n        })\r\n\r\n\r\n      } else {\r\n        // User is signed out.\r\n        setSignedInStatus('Ej inloggad');\r\n        setSignContext('Logga in');\r\n\r\n        dispatch({\r\n          type: \"SIGNOUT\",\r\n          signedIn: \"\"\r\n        })\r\n      }\r\n\r\n    });\r\n    // [END authstatelistener]\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n    <p>Ange email and lösenord för att logga in eller skapa ett konto</p>\r\n\r\n         <input type=\"text\" name=\"email\" placeholder=\"Email\" onChange={evt => setEmail(evt.target.value)}/>\r\n         &nbsp;&nbsp;&nbsp;\r\n         <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={evt => setPassword(evt.target.value)}/>\r\n\r\n         <br/><br/>\r\n         <button onClick={toggleSignIn} name=\"signin\"> {signContext} </button>\r\n         &nbsp;&nbsp;&nbsp;\r\n         <button onClick={handleSignUp} name=\"signup\">Skapa konto</button>\r\n         &nbsp;&nbsp;&nbsp;\r\n         <button onClick={sendEmailVerification} name=\"verify\">Verifiera konto</button>\r\n\r\n         <span id=\"quickstart-sign-in-status\"> &nbsp; {signedInStatus} </span>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\n/*\r\n\r\n<!--\r\n<button id=\"quickstart-verify-email\" onClick={handleChange} name=\"verify-email\">Send Email Verification</button>\r\n&nbsp;&nbsp;&nbsp;\r\n<button id=\"quickstart-password-reset\" onClick={handleChange} name=\"verify-email\">Send Password Reset Email</button> --> */\r\n\r\nexport default Login;\r\n","import React, {useState, useEffect} from 'react';\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Link, Switch, Redirect } from \"react-router-dom\";\n// import { useHistory } from \"react-router-dom\";\nimport { incrementdispatch } from './actions/RecipeActions';\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nimport FeedPage from './pages/feedpage';\nimport ProfilePage from './pages/profilepage';\nimport NoticePage from './pages/noticepage';\nimport FavoritePage from './pages/favoritepage';\nimport UploadPage from './pages/uploadpage';\nimport RecipePage from './pages/recipepage';\nimport Login from './pages/login';\n// import Feed from './pages/feedpage';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nimport PublishIcon from '@material-ui/icons/PublishRounded';\nimport NotificationsActiveRoundedIcon from '@material-ui/icons/NotificationsActiveRounded';\nimport LoyaltyRoundedIcon from '@material-ui/icons/LoyaltyRounded';\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nrequire('dotenv').config();\n//\nconst API_KEY = process.env.REACT_APP_FIREBASE_API_KEY;\n\n// for PWA - needed?\nlet deferredPrompt;\nwindow.addEventListener('beforeinstallprompt', (e) => {\n  // Stash the event so it can be triggered later.\n  deferredPrompt = e;\n  deferredPrompt.prompt();\n\n  // Update UI notify the user they can add to home screen\n  deferredPrompt.userChoice\n    .then((choiceResult) => {\n      if (choiceResult.outcome === 'accepted') {\n        console.log('User accepted the A2HS prompt');\n      } else {\n        console.log('User dismissed the A2HS prompt');\n      }\n      deferredPrompt = null;\n  });\n\n});\n\nlet db = undefined;\nfunction initFirebase() {\n\n  console.log(\"run initFirebase\")\n\n  const firebaseConfig = {\n    apiKey: API_KEY, // \"AIzaSyAq0vTBf0o5MckjHcCOJiJ_DRK8v_UZY88\",\n    authDomain: \"campuskost-firebase.firebaseapp.com\",\n    databaseURL: \"https://campuskost-firebase.firebaseio.com\",\n    projectId: \"campuskost-firebase\",\n    storageBucket: \"campuskost-firebase.appspot.com\",\n    messagingSenderId: \"477692438735\",\n    appId: \"1:477692438735:web:2e6dce163d7f7ce8baafba\",\n    measurementId: \"G-MDB52ZHJER\"\n  };\n\n  firebase.initializeApp(firebaseConfig);\n  const db = firebase.firestore();\n\n  return db;\n}\n\nfunction ProfileBtn (props) {\n\n  const classes = useStyles();\n\n  console.log(props)\n\n  let text = (props.signedIn === true) ? \"profile\" : \"login\";\n  let btn = (\n    <div className={classes.profileBtn}>\n      <button value={text} onClick={(e) => props.handleChange(e)}>{text}</button>\n    </div> );\n\n  let jsx_content = props.signedIn ? <Link to={\"/profile\"}><AccountCircleIcon/></Link> : btn;\n\n  return (<div>{jsx_content} </div>);\n\n}\n\nfunction App() {\n\n  // const [signedIn, setSignedIn] = React.useState(false);\n  const [value, setValue] = React.useState('');\n  const [redirect, setRedirect] = React.useState(false);\n\n  const classes = useStyles();\n  const dispatch = useDispatch(); // be able to dispatch\n  const state_user = useSelector(state => state.userReducer); // subscribe to the redux store\n  console.log(state_user)\n\n  // start auth listener\n  useEffect(() => {\n\n    firebase.auth().onAuthStateChanged(user => {\n      dispatch({ type: user ? \"SIGNIN\" : \"SIGNOUT\" })\n    });\n\n  }, []);\n\n  if(db === undefined) // init firebase once\n    db = initFirebase();\n\n  const handleChange = (event, newValue) => {\n\n    setRedirect(true);\n    let button_value = event.target.value;\n    if(button_value != undefined)\n      setValue(button_value);\n    else\n      setValue(newValue);\n\n  };\n\n\n  return (\n    <div className={classes.body}>\n\n      <Router>\n\n      {redirect ? <Redirect to={\"/\" + value} /> : null }\n\n      <div className={classes.mainContainer}>\n\n        <div className={classes.headerrow}>\n        <ProfileBtn signedIn={state_user.signedIn} handleChange={handleChange}/>\n        </div>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <FeedPage db={db}/>\n          </Route>\n\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/profile\" component={ProfilePage} />\n          <Route path=\"/upload\" component={UploadPage} />\n          <Route path=\"/notices\" component={NoticePage} />\n          <Route path=\"/saved\" component={FavoritePage} />\n          <Route path=\"/recipe/:recipe\" component={RecipePage} />\n\n        </Switch>\n\n      </div>\n      <div className={classes.footer}>\n        <BottomNavigation value={value} onChange={handleChange} className={classes.bottomMenu}>\n          <BottomNavigationAction label=\"Flöde\" value=\"\" icon={<HomeRoundedIcon />} />\n          <BottomNavigationAction label=\"Ladda up\" value=\"upload\" icon={<PublishIcon />} />\n          <BottomNavigationAction label=\"Notiser\" value=\"notices\" icon={<NotificationsActiveRoundedIcon />} />\n          <BottomNavigationAction label=\"Sparat\" value=\"saved\" icon={<LoyaltyRoundedIcon />} />\n        </BottomNavigation>\n      </div>\n\n      </Router>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles({\n  body: {\n    padding: 15\n  },\n  footer: {\n    position: 'fixed',\n    left: 0,\n    bottom: 0,\n    width: 100 + '%',\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  headerrow: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  profileBtn: {\n    color: 'green'\n  },\n  bottomMenu: {\n    width: 500,\n  }\n\n});\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducer from \"./store.js\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer);\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}