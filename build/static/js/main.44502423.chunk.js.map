{"version":3,"sources":["store.js","pages/profilepage.js","pages/noticepage.js","pages/favoritepage.js","pages/uploadpage.js","pages/recipepage.js","pages/login.js","App.js","serviceWorker.js","index.js"],"names":["reducer","state","num","action","type","step","useStyles","makeStyles","body","padding","ProfilePage","props","React","useState","signedIn","redirect","console","log","to","onClick","firebase","auth","signOut","name","NoticePage","FavoritePage","UploadPage","counter","useSelector","dispatch","useDispatch","RecipePage","match","params","recipe","Login","email","setEmail","password","setPassword","signedInStatus","setSignedInStatus","signContext","setSignContext","useEffect","onAuthStateChanged","user","displayName","emailVerified","photoURL","isAnonymous","uid","providerData","JSON","stringify","placeholder","onChange","evt","target","value","currentUser","length","alert","signInWithEmailAndPassword","catch","error","errorCode","code","errorMessage","message","createUserWithEmailAndPassword","sendEmailVerification","then","id","require","config","deferredPrompt","API_KEY","process","window","addEventListener","e","prompt","userChoice","choiceResult","outcome","footer","position","left","bottom","width","display","justifyContent","bottomMenu","imageContainer","flexDirection","flexWrap","marginBottom","foodImg","backgroundColor","height","margin","borderRadius","ImageContainer","classes","data","title","className","Feed","undefined","images","setImages","setRecipes","someFetcher","recpiesRef","db","collection","removeImg","listId","a","get","snapshot","images_array","recipe_docs","forEach","doc","push","key","removeFunction","err","App","setSignedIn","setValue","setRedirect","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","firestore","initFirebase","handleChange","event","newValue","button_value","profile_or_login","mainContainer","exact","path","component","BottomNavigation","BottomNavigationAction","label","icon","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","store","createStore","rootElement","document","getElementById","ReactDOM","render","URL","href","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"8zBAiBeA,MAjBf,WAA8C,IAA7BC,EAA4B,uDAApB,CAAEC,IAAK,GAAKC,EAAQ,uCAC3C,OAAQA,EAAOC,MACb,IAAK,YACH,OAAO,EAAP,GACKH,EADL,CAEEC,IAAKD,EAAMC,IAAMC,EAAOE,OAE5B,IAAK,YACH,OAAO,EAAP,GACKJ,EADL,CAEEC,IAAKD,EAAMC,IAAMC,EAAOE,OAE5B,QACE,OAAOJ,I,sGCHPK,EAAYC,YAAW,CAC3BC,KAAM,CACJC,QAAS,MAwDEC,MApDf,SAAqBC,GAAQ,IAAD,EAEMC,IAAMC,UAAS,GAFrB,mBAEnBC,EAFmB,aAGMF,IAAMC,UAAS,IAHrB,mBAGnBE,EAHmB,KAkC1B,OAlC0B,KA4B1BC,QAAQC,IAAI,aAAeH,GAEXR,IAMd,6BAECS,EAAW,kBAAC,IAAD,CAAUG,GAAI,MAAU,KAEpC,wCAEc,IAAbJ,GAAsB,iGAEvB,4BAAQK,QAAU,kBAAMC,IAASC,OAAOC,WAAYC,KAAK,WAAzD,gBCxDEjB,EAAYC,YAAW,CAC3BC,KAAM,CACJC,QAAS,MAqBEe,MAjBf,SAAoBb,GAKlB,OAHgBL,IAKd,6BACA,8CCdEA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,QAAS,MAoBEgB,MAhBf,SAAsBd,GAMpB,OAJgBL,IAMd,6BACA,6CCdEA,EAAYC,YAAW,CAC3BC,KAAM,CACJC,QAAS,MAoCEiB,MAhCf,SAAoBf,GAEFL,IAAhB,IAEMqB,EAAUC,aAAY,SAAA3B,GAAK,OAAIA,KAC/B4B,EAAWC,cAIjB,OAEE,6BACA,sCAEA,4BAAKH,EAAQzB,KACb,4BACAiB,QAAS,kBACPU,EAAS,CACPzB,KAAM,YACNC,KAAM,MAJV,0BCTW0B,MAdf,SAAoBpB,GAIlB,OAEE,6BACA,uCAAaA,EAAMqB,MAAMC,OAAOC,UC0JrBC,MA7Jf,SAAexB,GAAQ,IAAD,EAEME,mBAAS,IAFf,mBAEbuB,EAFa,KAENC,EAFM,OAGYxB,mBAAS,IAHrB,mBAGbyB,EAHa,KAGHC,EAHG,OAIwB1B,mBAAS,eAJjC,mBAIb2B,EAJa,KAIGC,EAJH,OAKmB5B,mBAAS,YAL5B,mBAKb6B,EALa,KAKAC,EALA,KA8HpB,OAtHAC,qBAAU,WAuFR5B,QAAQC,IAAI,WAGZG,IAASC,OAAOwB,oBAAmB,SAASC,GAEtCA,GAEgBA,EAAKC,YACXD,EAAKV,MACGU,EAAKE,cACVF,EAAKG,SACFH,EAAKI,YACbJ,EAAKK,IACIL,EAAKM,aAExBpC,QAAQC,IAAI,eACZD,QAAQC,IAAIoC,KAAKC,UAAUR,EAAM,KAAM,OAEvCL,EAAkB,YAClBE,EAAe,cAIfF,EAAkB,eAClBE,EAAe,kBA7GlB,IAsHD,6BACA,mGAEK,2BAAOvC,KAAK,OAAOmB,KAAK,QAAQgC,YAAY,QAAQC,SAAU,SAAAC,GAAG,OAAIpB,EAASoB,EAAIC,OAAOC,UAH9F,eAKK,2BAAOvD,KAAK,WAAWmB,KAAK,WAAWgC,YAAY,WAAWC,SAAU,SAAAC,GAAG,OAAIlB,EAAYkB,EAAIC,OAAOC,UAEtG,6BAAK,6BACL,4BAAQxC,QAzHf,WAKE,GAHAH,QAAQC,IAAI,gBAGRG,IAASC,OAAOuC,YAClBxC,IAASC,OAAOC,cACX,CAEL,GAAIc,EAAMyB,OAAS,EAEjB,YADAC,MAAM,iEAGR,GAAIxB,EAASuB,OAAS,EAEpB,YADAC,MAAM,mEAKR1C,IAASC,OAAO0C,2BAA2B3B,EAAOE,GAAU0B,OAAM,SAASC,GAEzE,IAAIC,EAAYD,EAAME,KAClBC,EAAeH,EAAMI,QAEP,wBAAdH,EACFJ,MAAM,oBAENA,MAAMM,GAERpD,QAAQC,IAAIgD,QA4FoB1C,KAAK,UAApC,IAA+CmB,EAA/C,KARL,eAUK,4BAAQvB,QAtFf,WAEEH,QAAQC,IAAI,gBAERmB,EAAMyB,OAAS,EACjBC,MAAM,gEAGJxB,EAASuB,OAAS,EACpBC,MAAM,kEAIR1C,IAASC,OAAOiD,+BAA+BlC,EAAOE,GAAU0B,OAAM,SAASC,GAE7E,IAAIC,EAAYD,EAAME,KAClBC,EAAeH,EAAMI,QAER,sBAAbH,EACFJ,MAAM,qCAENA,MAAMM,GAERpD,QAAQC,IAAIgD,OA+DsB1C,KAAK,UAApC,eAVL,eAYK,4BAAQJ,QA7Df,WAEIC,IAASC,OAAOuC,YAAYW,wBAAwBC,MAAK,WAEvDV,MAAM,gCAyDmCvC,KAAK,UAA7C,mBAEA,0BAAMkD,GAAG,6BAAT,SAA8CjC,EAA9C,O,oFCxHTkC,EAAQ,IAAUC,SAElB,IAEIC,EAFEC,EAAUC,0CAIhBC,OAAOC,iBAAiB,uBAAuB,SAACC,IAE9CL,EAAiBK,GACFC,SAGfN,EAAeO,WACZX,MAAK,SAACY,GACwB,aAAzBA,EAAaC,QACfrE,QAAQC,IAAI,iCAEZD,QAAQC,IAAI,kCAEd2D,EAAiB,WAKvB,IAAMtE,EAAYC,YAAW,CAC3BC,KAAM,CACJC,QAAS,IAEX6E,OAAQ,CACNC,SAAU,QACVC,KAAM,EACNC,OAAQ,EACRC,MAAO,OACPC,QAAS,OACTC,eAAgB,UAElBC,WAAY,CACVH,MAAO,KAETI,eAAgB,CACdH,QAAS,OACTI,cAAe,MACfC,SAAU,OACVJ,eAAgB,SAChBK,aAAc,IAGhBC,QAAS,CACPC,gBAAiB,OACjBC,OAAQ,IACRV,MAAO,IACPW,OAAQ,EACRC,aAAc,MAKlB,SAASC,EAAe5F,GAEtB,IAAM6F,EAAUlG,IAEhB,OAEE,kBAAC,IAAD,CAAMY,GAAI,WAAaP,EAAM8F,KAAKC,OAClC,6BAEE,yBAAKC,UAAWH,EAAQN,UAGvBvF,EAAM8F,KAAKC,QAQlB,SAASE,IAAQ,IAAD,EAEc/F,wBAASgG,GAFvB,mBAEPC,EAFO,KAECC,EAFD,OAGgBlG,wBAASgG,GAHzB,mBAGEG,GAHF,aAIUnG,wBAASgG,GAJnB,6BAMdjE,qBAAU,WACRqE,MACC,IAEH,IAAMT,EAAUlG,IACZ4G,EAAaC,EAAGC,WAAW,WAEzBC,EAAY,SAACC,GACjBtG,QAAQC,IAAI,UAAYqG,EAAU,4BAG9BL,EAAW,uCAAG,sBAAAM,EAAA,sDAElBL,EAAWM,MACRhD,MAAK,SAAAiD,GAEJ,IAAIC,EAAe,GACfC,EAAc,GAElBF,EAASG,SAAQ,SAAAC,GACfH,EAAaI,KAAK,kBAACvB,EAAD,CAAgBwB,IAAKF,EAAIpD,GAAI6C,OAAQO,EAAIpD,GAAIgC,KAAMoB,EAAIpB,OAAQuB,eAAgBX,KACjGM,EAAYG,KAAKD,EAAIpB,WAIvBM,EAAUW,GACVV,EAAWW,MAGZ3D,OAAM,SAAAiE,GACLjH,QAAQC,IAAI,0BAA2BgH,MAnBzB,2CAAH,qDA0BjB,OACE,6BAEE,2CAEA,yBAAKtB,UAAWH,EAAQV,gBAAiBgB,IAO/C,IAAIK,OAAKN,EAwJMqB,MAlIf,WAAgB,IAAD,EAEmBtH,IAAMC,UAAS,GAFlC,mBAENC,EAFM,KAEIqH,EAFJ,OAGavH,IAAMC,SAAS,IAH5B,mBAGN8C,EAHM,KAGCyE,EAHD,OAImBxH,IAAMC,UAAS,GAJlC,mBAINE,EAJM,KAIIsH,EAJJ,KAObzF,qBAAU,WACRxB,IAASC,OAAOwB,oBAAmB,SAAAC,GAG7BqF,IAFErF,QASP,SAEO+D,IAAPM,IAEDA,EA3CJ,WAEEnG,QAAQC,IAAI,oBAEZ,IAAMqH,EAAiB,CACrBC,OAAQ1D,EACR2D,WAAY,sCACZC,YAAa,6CACbC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,gBAMjB,OAHA1H,IAAS2H,cAAcT,GACZlH,IAAS4H,YA2BbC,IAGP,IAAMzC,EAAUlG,IAEV4I,EAAe,SAACC,EAAOC,GAE3Bf,GAAY,GACZ,IAAIgB,EAAeF,EAAMzF,OAAOC,MAE9ByE,OADiBvB,GAAhBwC,EACQA,EAEAD,IAKbpI,QAAQC,IAAI,aAAeH,GAE3B,IAAIwI,GAAiC,IAAbxI,EAAqB,UAAY,QAoBzD,OAlBAE,QAAQC,IAAI,qBAAuBqI,GACnCtI,QAAQC,IAAI,UAAY0C,GAkBtB,yBAAKgD,UAAWH,EAAQhG,MAEtB,kBAAC,IAAD,KAECO,EAAW,kBAAC,IAAD,CAAUG,GAAI,IAAMyC,IAAY,KAE5C,yBAAKgD,UAAWH,EAAQ+C,eAEtB,4BAAQ5F,MAAO2F,EAAkBnI,QAAS,SAAC8D,GAAD,OAAOiE,EAAajE,KAAKqE,GAGnE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOE,OAAK,EAACC,KAAK,KAChB,kBAAC7C,EAAD,OAGF,kBAAC,IAAD,CAAO6C,KAAK,SAASC,UAAWvH,IAChC,kBAAC,IAAD,CAAOsH,KAAK,WAAWC,UAAWhJ,IAClC,kBAAC,IAAD,CAAO+I,KAAK,UAAUC,UAAWhI,IACjC,kBAAC,IAAD,CAAO+H,KAAK,WAAWC,UAAWlI,IAClC,kBAAC,IAAD,CAAOiI,KAAK,SAASC,UAAWjI,IAChC,kBAAC,IAAD,CAAOgI,KAAK,kBAAkBC,UAAW3H,MAM7C,yBAAK4E,UAAWH,EAAQlB,QACtB,kBAACqE,EAAA,EAAD,CAAkBhG,MAAOA,EAAOH,SAAU0F,EAAcvC,UAAWH,EAAQX,YACzE,kBAAC+D,EAAA,EAAD,CAAwBC,MAAM,WAAQlG,MAAM,GAAGmG,KAAM,kBAAC,IAAD,QACrD,kBAACF,EAAA,EAAD,CAAwBC,MAAM,WAAWlG,MAAM,SAASmG,KAAM,kBAAC,IAAD,QAC9D,kBAACF,EAAA,EAAD,CAAwBC,MAAM,UAAUlG,MAAM,UAAUmG,KAAM,kBAAC,IAAD,QAC9D,kBAACF,EAAA,EAAD,CAAwBC,MAAM,SAASlG,MAAM,QAAQmG,KAAM,kBAAC,IAAD,aCzQ/DC,EAAcC,QACW,cAA7BjF,OAAOkF,SAASC,UAEe,UAA7BnF,OAAOkF,SAASC,UAEhBnF,OAAOkF,SAASC,SAASlI,MACvB,2DAsCN,SAASmI,EAAgBC,EAAOzF,GAC9B0F,UAAUC,cACPC,SAASH,GACT5F,MAAK,SAAAgG,GACJA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiBzK,QACfoK,UAAUC,cAAcO,YAI1B7J,QAAQC,IACN,iHAKE0D,GAAUA,EAAOmG,UACnBnG,EAAOmG,SAASN,KAMlBxJ,QAAQC,IAAI,sCAGR0D,GAAUA,EAAOoG,WACnBpG,EAAOoG,UAAUP,WAO5BxG,OAAM,SAAAC,GACLjD,QAAQiD,MAAM,4CAA6CA,MCvFjE,IAAM+G,EAAQC,YAAYjL,GAEpBkL,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,kBAAC,IAAD,CAAUN,MAAOA,GACf,kBAAC,EAAD,OAEFE,GDMK,SAAkBvG,GACvB,GAA6C,kBAAmB0F,UAAW,CAGzE,GADkB,IAAIkB,IAAIzG,GAAwBC,OAAOkF,SAASuB,MACpDC,SAAW1G,OAAOkF,SAASwB,OAIvC,OAGF1G,OAAOC,iBAAiB,QAAQ,WAC9B,IAAMoF,EAAK,UAAMtF,GAAN,sBAEPiF,IAgEV,SAAiCK,EAAOzF,GAEtC+G,MAAMtB,GACH5F,MAAK,SAAAmH,GAEJ,IAAMC,EAAcD,EAASE,QAAQrE,IAAI,gBAEnB,MAApBmE,EAASG,QACO,MAAfF,IAA8D,IAAvCA,EAAYG,QAAQ,cAG5C1B,UAAUC,cAAc0B,MAAMxH,MAAK,SAAAgG,GACjCA,EAAayB,aAAazH,MAAK,WAC7BO,OAAOkF,SAASiC,eAKpB/B,EAAgBC,EAAOzF,MAG1BX,OAAM,WACLhD,QAAQC,IACN,oEArFAkL,CAAwB/B,EAAOzF,GAI/B0F,UAAUC,cAAc0B,MAAMxH,MAAK,WACjCxD,QAAQC,IACN,iHAMJkJ,EAAgBC,EAAOzF,OCzB/B2F,K","file":"static/js/main.44502423.chunk.js","sourcesContent":["function reducer(state = { num: 0 }, action) {\r\n  switch (action.type) {\r\n    case \"INCREMENT\":\r\n      return {\r\n        ...state,\r\n        num: state.num + action.step\r\n      };\r\n    case \"DECREMENT\":\r\n      return {\r\n        ...state,\r\n        num: state.num - action.step\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default reducer;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { BrowserRouter as Link, Redirect} from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nconst useMountEffect = (fun) => useEffect(fun, []);\r\n\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    padding: 15\r\n  }\r\n});\r\n// () =>\r\nfunction ProfilePage(props) {\r\n\r\n  const [signedIn, setSignedIn] = React.useState(false);\n  const [redirect, setRedirect] = React.useState(false);\n\r\n  /*\r\n  function auth_user() {\r\n    firebase.auth().onAuthStateChanged(user => {\r\n            if (user)  {\r\n              // console.log(\"user signed in\")\r\n              setSignedIn(true);\r\n            }\r\n            else {\r\n              // console.log(\"user NOT signed in\")\r\n              setSignedIn(false);\r\n            }\r\n    });\r\n  } */\r\n\r\n  //useMountEffect(auth_user); // function will run only once after it has mounted.\r\n\r\n  function handleSignOut() {\r\n\r\n    firebase.auth().signOut();\r\n    //setRedirect(true);\r\n\r\n  }\r\n  // () => firebase.auth().signOut()\r\n  console.log(\"signedIn: \" + signedIn)\r\n\r\n  const classes = useStyles();\r\n\r\n  // console.log(props)\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n    {redirect ? <Redirect to={\"/\"} /> : null }\r\n\r\n    <h1>Hey you</h1>\r\n\r\n    {signedIn === false && <p> Hey you're not signed in. Things won't work here (redirect back) </p>  }\r\n\r\n    <button onClick={ () => firebase.auth().signOut() } name=\"signout\"> Logga ut </button>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default ProfilePage;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    padding: 15\r\n  }\r\n});\r\n\r\nfunction NoticePage(props) {\r\n\r\n  const classes = useStyles();\r\n  // console.log(props)\r\n\r\n  return (\r\n\r\n    <div>\r\n    <h1>Dina notiser</h1>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default NoticePage;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    padding: 15\r\n  }\r\n});\r\n\r\nfunction FavoritePage(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  // console.log(props)\r\n\r\n  return (\r\n\r\n    <div>\r\n    <h1>Dina listor</h1>\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default FavoritePage;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    padding: 15\r\n  }\r\n});\r\n\r\nfunction UploadPage(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  const counter = useSelector(state => state);\r\n  const dispatch = useDispatch();\r\n\r\n  // console.log(props)\r\n\r\n  return (\r\n\r\n    <div>\r\n    <h1>Upload</h1>\r\n\r\n    <h1>{counter.num}</h1>\r\n    <button\r\n    onClick={() =>\r\n      dispatch({\r\n        type: \"INCREMENT\",\r\n        step: 1\r\n      })\r\n    }\r\n   >\r\n   Redux increment test\r\n   </button>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default UploadPage;\r\n","import React, {useState, useEffect} from 'react';\r\n// import { recipeFetch } from '../actions/RecipeActions';\r\n\r\nfunction RecipePage(props) {\r\n\r\n  // console.log(props)\r\n\r\n  return (\r\n\r\n    <div>\r\n    <h1>Recept: {props.match.params.recipe}</h1>\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default RecipePage;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\n\r\nfunction Login(props) {\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [signedInStatus, setSignedInStatus] = useState(\"Ej inloggad\");\r\n  const [signContext, setSignContext ] = useState(\"Logga in\");\r\n\r\n  // init app only once\r\n  useEffect(() => {\r\n    initApp();\r\n  }, []);\r\n\r\n  /**\r\n   * Handles the sign in button press.\r\n   */\r\n  function toggleSignIn() {\r\n\r\n    console.log(\"toggleSignIn\")\r\n\r\n    // sign out if signed in\r\n    if (firebase.auth().currentUser) {\r\n      firebase.auth().signOut();\r\n    } else {\r\n\r\n      if (email.length < 4) {\r\n        alert('Ogiltig mailadress, måste innehålla mer än 4 tecken.');\r\n        return;\r\n      }\r\n      if (password.length < 4) {\r\n        alert('Ogiltigt lösenord, måste innehålla mer än 4 tecken.');\r\n        return;\r\n      }\r\n      // Sign in with email and pass.\r\n      // [START authwithemail]\r\n      firebase.auth().signInWithEmailAndPassword(email, password).catch(function(error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // [START_EXCLUDE]\r\n        if (errorCode === 'auth/wrong-password') {\r\n          alert('fel lösenord.');\r\n        } else {\r\n          alert(errorMessage);\r\n        }\r\n        console.log(error);\r\n\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * Handles the sign up button press.\r\n   */\r\n  function handleSignUp() {\r\n\r\n    console.log(\"handleSignUp\")\r\n\r\n    if (email.length < 4) {\r\n      alert('Ogiltig mailadress, måste innehålla mer än 4 tecken');\r\n      return;\r\n    }\r\n    if (password.length < 4) {\r\n      alert('Ogiltigt lösenord, måste innehålla mer än 4 tecken');\r\n      return;\r\n    }\r\n    // Sign in with email and pass.\r\n    firebase.auth().createUserWithEmailAndPassword(email, password).catch(function(error) {\r\n      // Handle Errors here.\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n\r\n      if (errorCode == 'auth/weak-password') {\r\n        alert('Lösenordet är för svagt.');\r\n      } else {\r\n        alert(errorMessage);\r\n      }\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  function sendEmailVerification() {\r\n\r\n      firebase.auth().currentUser.sendEmailVerification().then(function() {\r\n        // Email Verification sent!\r\n        alert('Email Verification Sent!');\r\n\r\n      });\r\n  }\r\n\r\n  /**\r\n   * initApp handles setting up UI event listeners and registering Firebase auth listeners:\r\n   *  - firebase.auth().onAuthStateChanged: This listener is called when the user is signed in or\r\n   *    out, and that is where we update the UI.\r\n   */\r\n  function initApp() {\r\n\r\n    console.log(\"initApp\")\r\n\r\n    // Listening for auth state changes.\r\n    firebase.auth().onAuthStateChanged(function(user) {\r\n\r\n      if (user) {\r\n        // User is signed in.\r\n        var displayName = user.displayName;\r\n        var email = user.email;\r\n        var emailVerified = user.emailVerified;\r\n        var photoURL = user.photoURL;\r\n        var isAnonymous = user.isAnonymous;\r\n        var uid = user.uid;\r\n        var providerData = user.providerData;\r\n\r\n        console.log('user json: ')\r\n        console.log(JSON.stringify(user, null, '  '))\r\n\r\n        setSignedInStatus('Inloggad');\r\n        setSignContext('Logga ut');\r\n\r\n      } else {\r\n        // User is signed out.\r\n        setSignedInStatus('Ej inloggad');\r\n        setSignContext('Logga in');\r\n      }\r\n\r\n    });\r\n    // [END authstatelistener]\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n    <p>Ange email and lösenord för att logga in eller skapa ett konto</p>\r\n\r\n         <input type=\"text\" name=\"email\" placeholder=\"Email\" onChange={evt => setEmail(evt.target.value)}/>\r\n         &nbsp;&nbsp;&nbsp;\r\n         <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={evt => setPassword(evt.target.value)}/>\r\n\r\n         <br/><br/>\r\n         <button onClick={toggleSignIn} name=\"signin\"> {signContext} </button>\r\n         &nbsp;&nbsp;&nbsp;\r\n         <button onClick={handleSignUp} name=\"signup\">Skapa konto</button>\r\n         &nbsp;&nbsp;&nbsp;\r\n         <button onClick={sendEmailVerification} name=\"verify\">Verifiera konto</button>\r\n\r\n         <span id=\"quickstart-sign-in-status\"> &nbsp; {signedInStatus} </span>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\n/*\r\n\r\n<!--\r\n<button id=\"quickstart-verify-email\" onClick={handleChange} name=\"verify-email\">Send Email Verification</button>\r\n&nbsp;&nbsp;&nbsp;\r\n<button id=\"quickstart-password-reset\" onClick={handleChange} name=\"verify-email\">Send Password Reset Email</button> --> */\r\n\r\nexport default Login;\r\n","import React, {useState, useEffect} from 'react';\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Link, Switch, Redirect } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { incrementdispatch } from './actions/RecipeActions';\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nimport ProfilePage from './pages/profilepage';\nimport NoticePage from './pages/noticepage';\nimport FavoritePage from './pages/favoritepage';\nimport UploadPage from './pages/uploadpage';\nimport RecipePage from './pages/recipepage';\nimport Login from './pages/login';\n// import Feed from './pages/feedpage';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nimport PublishIcon from '@material-ui/icons/PublishRounded';\nimport NotificationsActiveRoundedIcon from '@material-ui/icons/NotificationsActiveRounded';\nimport LoyaltyRoundedIcon from '@material-ui/icons/LoyaltyRounded';\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\n\nrequire('dotenv').config();\n//\nconst API_KEY = process.env.REACT_APP_FIREBASE_API_KEY;\n\nlet deferredPrompt;\n\nwindow.addEventListener('beforeinstallprompt', (e) => {\n  // Stash the event so it can be triggered later.\n  deferredPrompt = e;\n  deferredPrompt.prompt();\n\n  // Update UI notify the user they can add to home screen\n  deferredPrompt.userChoice\n    .then((choiceResult) => {\n      if (choiceResult.outcome === 'accepted') {\n        console.log('User accepted the A2HS prompt');\n      } else {\n        console.log('User dismissed the A2HS prompt');\n      }\n      deferredPrompt = null;\n  });\n\n});\n\nconst useStyles = makeStyles({\n  body: {\n    padding: 15\n  },\n  footer: {\n    position: 'fixed',\n    left: 0,\n    bottom: 0,\n    width: 100 + '%',\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  bottomMenu: {\n    width: 500,\n  },\n  imageContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    marginBottom: 50,\n\n  },\n  foodImg: {\n    backgroundColor: 'pink',\n    height: 100,\n    width: 100,\n    margin: 5,\n    borderRadius: 20\n  },\n\n});\n\nfunction ImageContainer(props) {\n\n  const classes = useStyles();\n\n  return (\n\n    <Link to={\"/recipe/\" + props.data.title } >\n    <div>\n\n      <div className={classes.foodImg}>\n\n      </div>\n      {props.data.title}\n    </div>\n    </Link>\n\n  );\n}\n\n\nfunction Feed() {\n\n  const [images, setImages] = useState(undefined);\n  const [recipes, setRecipes] = useState(undefined);\n  const [docs, setDocs] = useState(undefined);\n\n  useEffect(() => {\n    someFetcher();\n  }, []);\n\n  const classes = useStyles();\n  let recpiesRef = db.collection('recipes');\n\n  const removeImg = (listId) => {\n    console.log(\"remove \" + listId +  \" from parent component \")\n  }\n\n  const someFetcher = async () => {\n\n    recpiesRef.get()\n      .then(snapshot => {\n\n        let images_array = [];\n        let recipe_docs = [];\n\n        snapshot.forEach(doc => {\n          images_array.push(<ImageContainer key={doc.id} listId={doc.id} data={doc.data()} removeFunction={removeImg}/>);\n          recipe_docs.push(doc.data());\n          //docs_array.push(doc)\n        })\n\n        setImages(images_array);\n        setRecipes(recipe_docs);\n\n      })\n      .catch(err => {\n        console.log('Error getting documents', err);\n    });\n\n  }\n\n  // <button onClick={() => setCount(count + 1)}>Click me</button>\n\n  return (\n    <div>\n\n      <h1>Nya recept!</h1>\n\n      <div className={classes.imageContainer}>{images}</div>\n\n    </div>\n  );\n\n}\n\nlet db = undefined;\nfunction initFirebase() {\n\n  console.log(\"run initFirebase\")\n\n  const firebaseConfig = {\n    apiKey: API_KEY, // \"AIzaSyAq0vTBf0o5MckjHcCOJiJ_DRK8v_UZY88\",\n    authDomain: \"campuskost-firebase.firebaseapp.com\",\n    databaseURL: \"https://campuskost-firebase.firebaseio.com\",\n    projectId: \"campuskost-firebase\",\n    storageBucket: \"campuskost-firebase.appspot.com\",\n    messagingSenderId: \"477692438735\",\n    appId: \"1:477692438735:web:2e6dce163d7f7ce8baafba\",\n    measurementId: \"G-MDB52ZHJER\"\n  };\n\n  firebase.initializeApp(firebaseConfig);\n  const db = firebase.firestore();\n\n  return db;\n}\n\nfunction App() {\n\n  const [signedIn, setSignedIn] = React.useState(false);\n  const [value, setValue] = React.useState('');\n  const [redirect, setRedirect] = React.useState(false);\n\n  // start auth listener\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(user => {\n        if (user)  {\n          // console.log(\"user signed in\")\n          setSignedIn(true);\n        }\n        else {\n          // console.log(\"user NOT signed in\")\n          setSignedIn(false);\n        }\n      });\n  }, []);\n\n  if(db === undefined)\n  {\n    db = initFirebase();\n  }\n\n  const classes = useStyles();\n\n  const handleChange = (event, newValue) => {\n\n    setRedirect(true);\n    let button_value = event.target.value;\n    if(button_value != undefined)\n      setValue(button_value);\n    else\n      setValue(newValue);\n\n  };\n\n\n  console.log(\"signedIn: \" + signedIn)\n\n  let profile_or_login = (signedIn === true) ? \"profile\" : \"login\";\n\n  console.log(\"profile_or_login: \" + profile_or_login)\n  console.log(\"value: \" + value)\n\n  let data_obj = {\n    title: \"Pannkaka\",\n    user: \"sarol\"\n  };\n\n  /*\n\n  <button\n  onClick={() => incrementdispatch }\n  >\n  Increment\n </button>\n\n */\n\n  return (\n    <div className={classes.body}>\n\n      <Router>\n\n      {redirect ? <Redirect to={\"/\" + value} /> : null }\n\n      <div className={classes.mainContainer}>\n\n        <button value={profile_or_login} onClick={(e) => handleChange(e)}>{profile_or_login}</button>\n\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Feed/>\n          </Route>\n\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/profile\" component={ProfilePage} />\n          <Route path=\"/upload\" component={UploadPage} />\n          <Route path=\"/notices\" component={NoticePage} />\n          <Route path=\"/saved\" component={FavoritePage} />\n          <Route path=\"/recipe/:recipe\" component={RecipePage} />\n\n\n        </Switch>\n\n      </div>\n      <div className={classes.footer}>\n        <BottomNavigation value={value} onChange={handleChange} className={classes.bottomMenu}>\n          <BottomNavigationAction label=\"Flöde\" value=\"\" icon={<HomeRoundedIcon />} />\n          <BottomNavigationAction label=\"Ladda up\" value=\"upload\" icon={<PublishIcon />} />\n          <BottomNavigationAction label=\"Notiser\" value=\"notices\" icon={<NotificationsActiveRoundedIcon />} />\n          <BottomNavigationAction label=\"Sparat\" value=\"saved\" icon={<LoyaltyRoundedIcon />} />\n        </BottomNavigation>\n      </div>\n\n      </Router>\n    </div>\n  );\n}\n\n// <Route path=\"/abc\" component={TestWidget} />\n// <Route path=\"/abc\" render={()=><TestWidget num=\"2\" someProp={100}/>}/>\n/*\n<Link to={{\n   pathname: '/abc',\n   state: data_obj\n }}>\n Superlinkis </Link>\n\nfunction TestWidget(props) {\n\n  const _props = props.location.state;\n\n  console.log(_props.title)\n\n  return (\n\n    <div>\n    <h1>TestWidget, {_props.title} av  {_props.user}</h1>\n    </div>\n\n  );\n\n} */\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducer from \"./store.js\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer);\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}