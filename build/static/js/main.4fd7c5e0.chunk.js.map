{"version":3,"sources":["firebase.js","services/authentication.js","services/theming.js","components/LaunchScreen/LaunchScreen.js","components/Bar/Bar.js","components/EmptyState/EmptyState.js","components/HomeContent/HomeContent.js","components/NotFoundContent/NotFoundContent.js","components/Router/Router.js","components/AuthProviderList/AuthProviderList.js","constraints.js","components/SignUpDialog/SignUpDialog.js","components/SignInDialog/SignInDialog.js","components/AccountTab/AccountTab.js","components/AppearanceTab/AppearanceTab.js","components/LinksTab/LinksTab.js","components/SecurityTab/SecurityTab.js","components/SettingsDialog/SettingsDialog.js","components/DeleteAccountDialog/DeleteAccountDialog.js","components/AlertDialog/AlertDialog.js","components/DialogHost/DialogHost.js","components/App/App.js","serviceWorker.js","index.js"],"names":["firebase","apiKey","process","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","analytics","auth","firestore","storage","avatarFileTypes","authentication","fields","Promise","resolve","reject","firstName","lastName","username","emailAddress","password","currentUser","createUserWithEmailAndPassword","then","value","user","uid","reference","collection","doc","set","logEvent","method","catch","reason","signInWithEmailAndPassword","providerId","provider","OAuthProvider","signInWithPopup","linkWithPopup","unlink","providerData","find","authProvider","signOut","sendPasswordResetEmail","avatar","includes","type","size","ref","child","put","uploadTaskSnapshot","getDownloadURL","updateProfile","photoURL","delete","update","updateEmail","updatePassword","lastPasswordChange","FieldValue","serverTimestamp","sendEmailVerification","colors","red","id","name","import","pink","purple","deepPurple","indigo","blue","lightBlue","cyan","teal","green","lightGreen","lime","yellow","amber","orange","deepOrange","brown","gray","blueGray","types","light","dark","getColor","colorId","_","camelCase","getType","typeId","defaultPrimaryColor","defaultSecondaryColor","defaultType","defaultTheme","createMuiTheme","palette","primary","secondary","primaryColor","secondaryColor","theming","isDefaultTheme","theme","createTheme","changeTheme","changePrimaryColor","changeSecondaryColor","changeType","resetTheme","LaunchScreen","Box","position","top","left","CircularProgress","Component","Bar","props","getNameInitials","userData","displayName","charAt","openMenu","event","anchorEl","currentTarget","setState","menu","closeMenu","handleSettingsClick","onSettingsClick","handleSignOutClick","onSignOutClick","state","this","performingAction","signedIn","onSignUpClick","onSignInClick","AppBar","color","Toolbar","variant","flexGrow","Typography","IconButton","disabled","onClick","Avatar","alt","src","Menu","open","Boolean","onClose","MenuItem","mr","Button","defaultProps","EmptyState","classes","icon","title","description","button","className","center","withStyles","transform","textAlign","HomeContent","emptyStateIcon","Fab","href","rel","target","buttonIcon","fontSize","spacing","marginTop","marginRight","NotFoundContent","component","Link","to","Router","basename","REACT_APP_BASENAME","path","exact","AuthProviderList","gutterBottom","onAuthProviderClick","authProviders","main","contrastText","Grid","grid","container","direction","map","key","item","fullWidth","startIcon","marginBottom","constraints","presence","allowEmpty","length","minimum","maximum","email","message","emailAddressConfirmation","equality","attribute","passwordConfirmation","initialState","errors","SignUpDialog","signUp","validate","dialogProps","code","openSnackbar","finally","signInWithAuthProvider","handleKeyPress","altKey","ctrlKey","metaKey","shiftKey","handleExited","handleFirstNameChange","handleLastNameChange","handleUsernameChange","handleEmailAddressChange","handleEmailAddressConfirmationChange","handlePasswordChange","handlePasswordConfirmationChange","Dialog","maxWidth","onKeyPress","onExited","DialogTitle","Hidden","smDown","DialogContent","dialogContent","xs","Divider","divider","orientation","TextField","autoComplete","error","helperText","label","placeholder","required","onChange","mdUp","DialogActions","overflowY","margin","SignInDialog","resetPassword","signIn","xsDown","smUp","profileCompletion","securityRating","showingField","avatarUrl","loadingAvatar","sentVerificationEmail","AccountTab","uploadAvatar","changeAvatar","calculateProfileCompletion","removeAvatar","URL","revokeObjectURL","callback","emailVerified","forEach","field","Math","floor","calculateSecurityRating","metadata","creationTime","moment","toDate","diff","showField","fieldId","hideFields","changeFirstName","changeLastName","changeUsername","changeEmailAddress","verifyEmailAddress","deleteAccount","changeField","handleKeyDown","handleAvatarChange","files","createObjectURL","onDeleteAccountClick","root","mb","alignItems","Badge","badge","badgeContent","Tooltip","sizeSmall","small","loadingBadge","Fade","style","transitionDelay","in","unmountOnExit","thickness","nameInitials","hidden","accept","htmlFor","List","disablePadding","ListItem","ListItemIcon","autoFocus","onBlur","onKeyDown","ListItemText","ListItemSecondaryAction","clone","lastSignInTime","format","mt","paddingTop","right","marginLeft","width","height","cursor","minHeight","AppearanceTab","handlePrimaryColorChange","handleSecondaryColorChange","handleTypeChange","handleResetClick","FormControl","InputLabel","Select","native","Object","keys","LinksTab","linkAuthProvider","unlinkAuthProvider","authProviderData","identifier","phoneNumber","SecurityTab","changePassword","tabs","SettingsDialog","handleTabChange","selectedTab","handleIndexChange","index","disableTypography","closeButton","Tabs","overflow","indicatorColor","textColor","tab","Tab","scrollButtons","onChangeIndex","display","DeleteAccountDialog","DialogContentText","AlertDialog","contentText","dismissiveAction","confirmingAction","acknowledgementAction","console","noTitlePadding","DialogHost","dialogs","signUpDialog","signInDialog","settingsDialog","deleteAccountDialog","signOutDialog","fullScreen","App","openDialog","dialogId","dialog","undefined","closeDialog","autoHideDuration","snackbar","readingTime","time","closeSnackbar","clearMessage","ready","CssBaseline","Snackbar","mounted","removeAuthStateChangedObserver","onAuthStateChanged","removeReferenceListener","onSnapshot","snapshot","exists","data","isLocalhost","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","log","onUpdate","onSuccess","ReactDOM","render","document","getElementById","origin","addEventListener","fetch","response","contentType","headers","get","status","indexOf","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.4fd7c5e0.chunk.js","sourcesContent":["import * as firebase from 'firebase/app';\r\n\r\nimport 'firebase/analytics';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\nimport 'firebase/storage';\r\nimport 'firebase/performance';\r\n\r\nfirebase.initializeApp({\r\n  apiKey: process.env.REACT_APP_FIREBASE_API_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_AUTH_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE_URL,\r\n  projectId: process.env.REACT_APP_FIREBASE_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_MESSAGING_SENDER_ID,\r\n  appId: process.env.REACT_APP_FIREBASE_APP_ID,\r\n  measurementId: process.env.REACT_APP_FIREBASE_MEASUREMENT_ID\r\n});\r\n\r\nexport default firebase;\r\nexport const analytics = firebase.analytics();\r\nexport const auth = firebase.auth();\r\nexport const firestore = firebase.firestore();\r\nexport const storage = firebase.storage();\r\nexport const performance = firebase.performance();\r\n","import firebase, { analytics, auth, firestore, storage } from '../firebase';\r\n\r\nconst avatarFileTypes = [\r\n  'image/gif',\r\n  'image/jpeg',\r\n  'image/png',\r\n  'image/webp',\r\n  'image/svg+xml'\r\n];\r\n\r\nconst authentication = {};\r\n\r\nauthentication.signUp = (fields) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!fields) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const firstName = fields.firstName;\r\n    const lastName = fields.lastName;\r\n    const username = fields.username;\r\n    const emailAddress = fields.emailAddress;\r\n    const password = fields.password;\r\n\r\n    if (!firstName || !lastName || !username || !emailAddress || !password) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const currentUser = auth.currentUser;\r\n\r\n    if (currentUser) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    auth.createUserWithEmailAndPassword(emailAddress, password).then((value) => {\r\n      const user = value.user;\r\n\r\n      if (!user) {\r\n        reject();\r\n\r\n        return;\r\n      }\r\n\r\n      const uid = user.uid;\r\n\r\n      if (!uid) {\r\n        reject();\r\n\r\n        return;\r\n      }\r\n\r\n      const reference = firestore.collection('users').doc(uid);\r\n\r\n      if (!reference) {\r\n        reject();\r\n\r\n        return;\r\n      }\r\n\r\n      reference.set({\r\n        firstName: firstName,\r\n        lastName: lastName,\r\n        username: username\r\n      }).then((value) => {\r\n        analytics.logEvent('sign_up', {\r\n          method: 'password'\r\n        });\r\n\r\n        resolve(value);\r\n      }).catch((reason) => {\r\n        reject(reason);\r\n      });\r\n    }).catch((reason) => {\r\n      reject(reason);\r\n    });\r\n  });\r\n};\r\n\r\nauthentication.signIn = (emailAddress, password) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!emailAddress || !password) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const currentUser = auth.currentUser;\r\n\r\n    if (currentUser) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    auth.signInWithEmailAndPassword(emailAddress, password).then((value) => {\r\n      analytics.logEvent('login', {\r\n        method: 'password'\r\n      });\r\n\r\n      resolve(value);\r\n    }).catch((reason) => {\r\n      reject(reason);\r\n    });\r\n  });\r\n};\r\n\r\nauthentication.signInWithAuthProvider = (providerId) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!providerId) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const provider = new firebase.auth.OAuthProvider(providerId);\r\n\r\n    if (!provider) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const currentUser = auth.currentUser;\r\n\r\n    if (currentUser) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    auth.signInWithPopup(provider).then((value) => {\r\n      analytics.logEvent('login', {\r\n        method: providerId\r\n      });\r\n\r\n      resolve(value);\r\n    }).catch((reason) => {\r\n      reject(reason);\r\n    });\r\n  });\r\n};\r\n\r\nauthentication.linkAuthProvider = (providerId) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!providerId) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const provider = new firebase.auth.OAuthProvider(providerId);\r\n\r\n    if (!provider) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const currentUser = auth.currentUser;\r\n\r\n    if (!currentUser) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    currentUser.linkWithPopup(provider).then((value) => {\r\n      analytics.logEvent('link_auth_provider', {\r\n        value: providerId\r\n      });\r\n\r\n      resolve(value);\r\n    }).catch((reason) => {\r\n      reject(reason);\r\n    });\r\n  });\r\n};\r\n\r\nauthentication.unlinkAuthProvider = (providerId) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!providerId) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const currentUser = auth.currentUser;\r\n\r\n    if (!currentUser) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    currentUser.unlink(providerId).then((value) => {\r\n      analytics.logEvent('unlink_auth_provider', {\r\n        value: providerId\r\n      });\r\n\r\n      resolve(value);\r\n    }).catch((reason) => {\r\n      reject(reason);\r\n    });\r\n  });\r\n};\r\n\r\nauthentication.authProviderData = (providerId) => {\r\n  if (!providerId) {\r\n    return;\r\n  }\r\n\r\n  const currentUser = auth.currentUser;\r\n\r\n  if (!currentUser) {\r\n    return;\r\n  }\r\n\r\n  const providerData = currentUser.providerData;\r\n\r\n  if (!providerData) {\r\n    return;\r\n  }\r\n\r\n  return providerData.find(authProvider => authProvider.providerId === providerId);\r\n};\r\n\r\nauthentication.signOut = () => {\r\n  return new Promise((resolve, reject) => {\r\n    const currentUser = auth.currentUser;\r\n\r\n    if (!currentUser) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    auth.signOut().then((value) => {\r\n      analytics.logEvent('sign_out');\r\n\r\n      resolve(value);\r\n    }).catch((reason) => {\r\n      reject(reason);\r\n    });\r\n  });\r\n};\r\n\r\nauthentication.resetPassword = (emailAddress) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!emailAddress) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const currentUser = auth.currentUser;\r\n\r\n    if (currentUser) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    auth.sendPasswordResetEmail(emailAddress).then((value) => {\r\n      analytics.logEvent('reset_password');\r\n\r\n      resolve(value);\r\n    }).catch((reason) => {\r\n      reject(reason);\r\n    });\r\n  });\r\n};\r\n\r\nauthentication.changeAvatar = (avatar) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!avatar) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    if (!avatarFileTypes.includes(avatar.type)) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    if (avatar.size > (20 * 1024 * 1024)) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const currentUser = auth.currentUser;\r\n\r\n    if (!currentUser) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const uid = currentUser.uid;\r\n\r\n    if (!uid) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const reference = storage.ref().child('images').child('avatars').child(uid);\r\n\r\n    if (!reference) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    reference.put(avatar).then((uploadTaskSnapshot) => {\r\n      reference.getDownloadURL().then((value) => {\r\n        currentUser.updateProfile({\r\n          photoURL: value\r\n        }).then((value) => {\r\n          analytics.logEvent('change_avatar');\r\n\r\n          resolve(value);\r\n        }).catch((reason) => {\r\n          reject(reason);\r\n        });\r\n      }).catch((reason) => {\r\n        reject(reason);\r\n      });\r\n    }).catch((reason) => {\r\n      reject(reason);\r\n    });\r\n  });\r\n};\r\n\r\nauthentication.removeAvatar = () => {\r\n  return new Promise((resolve, reject) => {\r\n    const currentUser = auth.currentUser;\r\n\r\n    if (!currentUser) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const uid = currentUser.uid;\r\n\r\n    if (!uid) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    currentUser.updateProfile({\r\n      photoURL: null\r\n    }).then((value) => {\r\n      const reference = storage.ref().child('images').child('avatars').child(uid);\r\n\r\n      if (!reference) {\r\n        reject();\r\n\r\n        return;\r\n      }\r\n\r\n      reference.delete().then((value) => {\r\n        analytics.logEvent('remove_avatar');\r\n\r\n        resolve(value);\r\n      }).catch((reason) => {\r\n        reject(reason);\r\n      });\r\n    }).catch((reason) => {\r\n      reject(reason);\r\n    });\r\n  });\r\n};\r\n\r\nauthentication.changeFirstName = (firstName) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!firstName) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const currentUser = auth.currentUser;\r\n\r\n    if (!currentUser) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const uid = currentUser.uid;\r\n\r\n    if (!uid) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const reference = firestore.collection('users').doc(uid);\r\n\r\n    if (!reference) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    reference.update({\r\n      firstName: firstName\r\n    }).then((value) => {\r\n      analytics.logEvent('change_first_name');\r\n\r\n      resolve(value);\r\n    }).catch((reason) => {\r\n      reject(reason);\r\n    });\r\n  });\r\n};\r\n\r\nauthentication.changeLastName = (lastName) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!lastName) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const currentUser = auth.currentUser;\r\n\r\n    if (!currentUser) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const uid = currentUser.uid;\r\n\r\n    if (!uid) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const reference = firestore.collection('users').doc(uid);\r\n\r\n    if (!reference) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    reference.update({\r\n      lastName: lastName\r\n    }).then((value) => {\r\n      analytics.logEvent('change_last_name');\r\n\r\n      resolve(value);\r\n    }).catch((reason) => {\r\n      reject(reason);\r\n    });\r\n  });\r\n};\r\n\r\nauthentication.changeUsername = (username) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!username) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const currentUser = auth.currentUser;\r\n\r\n    if (!currentUser) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const uid = currentUser.uid;\r\n\r\n    if (!uid) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const reference = firestore.collection('users').doc(uid);\r\n\r\n    if (!reference) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    reference.update({\r\n      username: username\r\n    }).then((value) => {\r\n      analytics.logEvent('change_username');\r\n\r\n      resolve(value);\r\n    }).catch((reason) => {\r\n      reject(reason);\r\n    });\r\n  });\r\n};\r\n\r\nauthentication.changeEmailAddress = (emailAddress) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!emailAddress) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const currentUser = auth.currentUser;\r\n\r\n    if (!currentUser) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const uid = currentUser.uid;\r\n\r\n    if (!uid) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    currentUser.updateEmail(emailAddress).then((value) => {\r\n      analytics.logEvent('change_email_address');\r\n\r\n      resolve(value);\r\n    }).catch((reason) => {\r\n      reject(reason);\r\n    });\r\n  });\r\n};\r\n\r\nauthentication.changePassword = (password) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!password) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const currentUser = auth.currentUser;\r\n\r\n    if (!currentUser) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const uid = currentUser.uid;\r\n\r\n    if (!uid) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    currentUser.updatePassword(password).then((value) => {\r\n      const reference = firestore.collection('users').doc(uid);\r\n\r\n      if (!reference) {\r\n        reject();\r\n\r\n        return;\r\n      }\r\n\r\n      reference.update({\r\n        lastPasswordChange: firebase.firestore.FieldValue.serverTimestamp()\r\n      }).then((value) => {\r\n        analytics.logEvent('change_password');\r\n\r\n        resolve(value);\r\n      }).catch((reason) => {\r\n        reject(reason);\r\n      });\r\n    }).catch((reason) => {\r\n      reject(reason);\r\n    });\r\n  });\r\n};\r\n\r\nauthentication.verifyEmailAddress = () => {\r\n  return new Promise((resolve, reject) => {\r\n    const currentUser = auth.currentUser;\r\n\r\n    if (!currentUser) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    currentUser.sendEmailVerification().then((value) => {\r\n      analytics.logEvent('verify_email_address');\r\n\r\n      resolve(value);\r\n    }).catch((reason) => {\r\n      reject(reason);\r\n    });\r\n  });\r\n};\r\n\r\nauthentication.deleteAccount = () => {\r\n  return new Promise((resolve, reject) => {\r\n    const currentUser = auth.currentUser;\r\n\r\n    if (!currentUser) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    currentUser.delete().then((value) => {\r\n      analytics.logEvent('delete_account');\r\n\r\n      resolve(value);\r\n    }).catch((reason) => {\r\n      reject(reason);\r\n    });\r\n  });\r\n};\r\n\r\nexport default authentication;\r\n","import _ from 'lodash';\r\n\r\nimport { createMuiTheme } from '@material-ui/core/styles';\r\n\r\nimport red from '@material-ui/core/colors/red';\r\nimport pink from '@material-ui/core/colors/pink';\r\nimport purple from '@material-ui/core/colors/purple';\r\nimport deepPurple from '@material-ui/core/colors/deepPurple';\r\nimport indigo from '@material-ui/core/colors/indigo';\r\nimport blue from '@material-ui/core/colors/blue';\r\nimport lightBlue from '@material-ui/core/colors/lightBlue';\r\nimport cyan from '@material-ui/core/colors/cyan';\r\nimport teal from '@material-ui/core/colors/teal';\r\nimport green from '@material-ui/core/colors/green';\r\nimport lightGreen from '@material-ui/core/colors/lightGreen';\r\nimport lime from '@material-ui/core/colors/lime';\r\nimport yellow from '@material-ui/core/colors/yellow';\r\nimport amber from '@material-ui/core/colors/amber';\r\nimport orange from '@material-ui/core/colors/orange';\r\nimport deepOrange from '@material-ui/core/colors/deepOrange';\r\nimport brown from '@material-ui/core/colors/brown';\r\nimport gray from '@material-ui/core/colors/grey';\r\nimport blueGray from '@material-ui/core/colors/blueGrey';\r\n\r\nimport firebase, { analytics, auth, firestore } from '../firebase';\r\n\r\nconst colors = {\r\n  red: {\r\n    id: 'red',\r\n    name: 'Red',\r\n    import: red\r\n  },\r\n\r\n  pink: {\r\n    id: 'pink',\r\n    name: 'Pink',\r\n    import: pink\r\n  },\r\n\r\n  purple: {\r\n    id: 'purple',\r\n    name: 'Purple',\r\n    import: purple\r\n  },\r\n\r\n  deepPurple: {\r\n    id: 'deep-purple',\r\n    name: 'Deep Purple',\r\n    import: deepPurple\r\n  },\r\n\r\n  indigo: {\r\n    id: 'indigo',\r\n    name: 'Indigo',\r\n    import: indigo\r\n  },\r\n\r\n  blue: {\r\n    id: 'blue',\r\n    name: 'Blue',\r\n    import: blue\r\n  },\r\n\r\n  lightBlue: {\r\n    id: 'light-blue',\r\n    name: 'Light Blue',\r\n    import: lightBlue\r\n  },\r\n\r\n  cyan: {\r\n    id: 'cyan',\r\n    name: 'Cyan',\r\n    import: cyan\r\n  },\r\n\r\n  teal: {\r\n    id: 'teal',\r\n    name: 'Teal',\r\n    import: teal\r\n  },\r\n\r\n  green: {\r\n    id: 'green',\r\n    name: 'Green',\r\n    import: green\r\n  },\r\n\r\n  lightGreen: {\r\n    id: 'light-green',\r\n    name: 'Light Green',\r\n    import: lightGreen\r\n  },\r\n\r\n  lime: {\r\n    id: 'lime',\r\n    name: 'Lime',\r\n    import: lime\r\n  },\r\n\r\n  yellow: {\r\n    id: 'yellow',\r\n    name: 'Yellow',\r\n    import: yellow\r\n  },\r\n\r\n  amber: {\r\n    id: 'amber',\r\n    name: 'Amber',\r\n    import: amber\r\n  },\r\n\r\n  orange: {\r\n    id: 'orange',\r\n    name: 'Orange',\r\n    import: orange\r\n  },\r\n\r\n  deepOrange: {\r\n    id: 'deep-orange',\r\n    name: 'Deep Orange',\r\n    import: deepOrange\r\n  },\r\n\r\n  brown: {\r\n    id: 'brown',\r\n    name: 'Brown',\r\n    import: brown\r\n  },\r\n\r\n  gray: {\r\n    id: 'gray',\r\n    name: 'Gray',\r\n    import: gray\r\n  },\r\n\r\n  blueGray: {\r\n    id: 'blue-gray',\r\n    name: 'Blue Gray',\r\n    import: blueGray\r\n  }\r\n};\r\n\r\nconst types = {\r\n  light: {\r\n    id: 'light',\r\n    name: 'Light'\r\n  },\r\n\r\n  dark: {\r\n    id: 'dark',\r\n    name: 'Dark'\r\n  }\r\n};\r\n\r\nconst getColor = (colorId) => {\r\n  if (!colorId) {\r\n    return null;\r\n  }\r\n\r\n  colorId = _.camelCase(colorId);\r\n\r\n  return colors[colorId];\r\n};\r\n\r\nconst getType = (typeId) => {\r\n  if (!typeId) {\r\n    return null;\r\n  }\r\n\r\n  return types[typeId];\r\n};\r\n\r\nconst defaultPrimaryColor = getColor(process.env.REACT_APP_THEME_PRIMARY_COLOR);\r\nconst defaultSecondaryColor = getColor(process.env.REACT_APP_THEME_SECONDARY_COLOR);\r\nconst defaultType = getType(process.env.REACT_APP_THEME_TYPE);\r\n\r\nconst defaultTheme = createMuiTheme({\r\n  palette: {\r\n    primary: defaultPrimaryColor.import,\r\n    secondary: defaultSecondaryColor.import,\r\n    type: defaultType.id\r\n  },\r\n\r\n  primaryColor: defaultPrimaryColor,\r\n  secondaryColor: defaultSecondaryColor,\r\n  type: defaultType\r\n});\r\n\r\nconst theming = {};\r\n\r\ntheming.colors = colors;\r\ntheming.types = types;\r\n\r\ntheming.defaultPrimaryColor = defaultPrimaryColor;\r\ntheming.defaultSecondaryColor = defaultSecondaryColor;\r\ntheming.defaultType = defaultType;\r\n\r\ntheming.defaultTheme = defaultTheme;\r\n\r\n/**\r\n * Returns whether a theme is the default theme.\r\n * @param theme\r\n * @returns {boolean}\r\n */\r\ntheming.isDefaultTheme = (theme) => {\r\n  if (!theme) {\r\n    return false;\r\n  }\r\n\r\n  if (theme.primaryColor.id === defaultPrimaryColor.id &&\r\n      theme.secondaryColor.id === defaultSecondaryColor.id &&\r\n      theme.type.id === defaultType.id) {\r\n    return true;\r\n  }\r\n\r\n  return false;\r\n};\r\n\r\n/**\r\n * Creates a Material-UI theme from a JSON theme object.\r\n * @param theme\r\n * @returns {null|Theme}\r\n */\r\ntheming.createTheme = (theme) => {\r\n  if (!theme) {\r\n    return null;\r\n  }\r\n\r\n  let primaryColor = theme.primaryColor;\r\n  let secondaryColor = theme.secondaryColor;\r\n  let type = theme.type;\r\n\r\n  if (!primaryColor || !secondaryColor || !type) {\r\n    return null;\r\n  }\r\n\r\n  primaryColor = getColor(primaryColor);\r\n  secondaryColor = getColor(secondaryColor);\r\n  type = getType(type);\r\n\r\n  if (!primaryColor || !secondaryColor || !type) {\r\n    return null;\r\n  }\r\n\r\n  theme = createMuiTheme({\r\n    palette: {\r\n      primary: primaryColor.import,\r\n      secondary: secondaryColor.import,\r\n      type: type.id\r\n    },\r\n\r\n    primaryColor: primaryColor,\r\n    secondaryColor: secondaryColor,\r\n    type: type\r\n  });\r\n\r\n  return theme;\r\n};\r\n\r\n/**\r\n * Changes the theme for the current user.\r\n * @param theme\r\n * @returns {Promise<unknown>}\r\n */\r\ntheming.changeTheme = (theme) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!theme) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    let primaryColor = theme.primaryColor;\r\n    let secondaryColor = theme.secondaryColor;\r\n    let type = theme.type;\r\n\r\n    if (!primaryColor || !secondaryColor || !type) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    primaryColor = getColor(primaryColor);\r\n    secondaryColor = getColor(secondaryColor);\r\n    type = getType(type);\r\n\r\n    if (!primaryColor || !secondaryColor || !type) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const currentUser = auth.currentUser;\r\n\r\n    if (!currentUser) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const uid = currentUser.uid;\r\n\r\n    if (!uid) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const reference = firestore.collection('users').doc(uid);\r\n\r\n    if (!reference) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    reference.update({\r\n      theme: {\r\n        primaryColor: primaryColor.id,\r\n        secondaryColor: secondaryColor.id,\r\n        type: type.id\r\n      }\r\n    }).then((value) => {\r\n      analytics.logEvent('change_theme', {\r\n        value: {\r\n          primaryColor: primaryColor.id,\r\n          secondaryColor: secondaryColor.id,\r\n          type: type.id\r\n        }\r\n      });\r\n\r\n      resolve(value);\r\n    }).catch((reason) => {\r\n      reject(reason);\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * Changes the primary color for the current user.\r\n * @param primaryColor\r\n * @returns {Promise<unknown>}\r\n */\r\ntheming.changePrimaryColor = (primaryColor) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!primaryColor) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    primaryColor = getColor(primaryColor);\r\n\r\n    if (!primaryColor) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const currentUser = auth.currentUser;\r\n\r\n    if (!currentUser) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const uid = currentUser.uid;\r\n\r\n    if (!uid) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const reference = firestore.collection('users').doc(uid);\r\n\r\n    if (!reference) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    reference.update({\r\n      'theme.primaryColor': primaryColor.id\r\n    }).then((value) => {\r\n      analytics.logEvent('change_primary_color', {\r\n        value: primaryColor.id\r\n      });\r\n\r\n      resolve(value);\r\n    }).catch((reason) => {\r\n      reject(reason);\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * Changes the secondary color for the current user.\r\n * @param secondaryColor\r\n * @returns {Promise<unknown>}\r\n */\r\ntheming.changeSecondaryColor = (secondaryColor) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!secondaryColor) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    secondaryColor = getColor(secondaryColor);\r\n\r\n    if (!secondaryColor) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const currentUser = auth.currentUser;\r\n\r\n    if (!currentUser) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const uid = currentUser.uid;\r\n\r\n    if (!uid) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const reference = firestore.collection('users').doc(uid);\r\n\r\n    if (!reference) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    reference.update({\r\n      'theme.secondaryColor': secondaryColor.id\r\n    }).then((value) => {\r\n      analytics.logEvent('change_secondary_color', {\r\n        value: secondaryColor.id\r\n      });\r\n\r\n      resolve(value);\r\n    }).catch((reason) => {\r\n      reject(reason);\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * Changes the type for the current user.\r\n * @param type\r\n * @returns {Promise<unknown>}\r\n */\r\ntheming.changeType = (type) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (!type) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    type = getType(type);\r\n\r\n    if (!type) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const currentUser = auth.currentUser;\r\n\r\n    if (!currentUser) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const uid = currentUser.uid;\r\n\r\n    if (!uid) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const reference = firestore.collection('users').doc(uid);\r\n\r\n    if (!reference) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    reference.update({\r\n      'theme.type': type.id\r\n    }).then((value) => {\r\n      analytics.logEvent('change_type', {\r\n        value: type.id\r\n      });\r\n\r\n      resolve(value);\r\n    }).catch((reason) => {\r\n      reject(reason);\r\n    });\r\n  });\r\n};\r\n\r\n/**\r\n * Resets the theme for the current user.\r\n * @returns {Promise<unknown>}\r\n */\r\ntheming.resetTheme = () => {\r\n  return new Promise((resolve, reject) => {\r\n    const currentUser = auth.currentUser;\r\n\r\n    if (!currentUser) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const uid = currentUser.uid;\r\n\r\n    if (!uid) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    const reference = firestore.collection('users').doc(uid);\r\n\r\n    if (!reference) {\r\n      reject();\r\n\r\n      return;\r\n    }\r\n\r\n    reference.update({\r\n      theme: firebase.firestore.FieldValue.delete()\r\n    }).then((value) => {\r\n      analytics.logEvent('reset_theme');\r\n\r\n      resolve(value);\r\n    }).catch((reason) => {\r\n      reject(reason);\r\n    });\r\n  });\r\n};\r\n\r\nexport default theming;\r\n","import React, {Component} from 'react';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\nclass LaunchScreen extends Component {\r\n  render() {\r\n    return (\r\n      <Box position=\"absolute\" top=\"50%\" left=\"50%\">\r\n        <CircularProgress />\r\n      </Box>\r\n    );\r\n  }\r\n}\r\n\r\nLaunchScreen.propTypes = {};\r\n\r\nexport default LaunchScreen;\r\n","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport Menu from '@material-ui/core/Menu';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nclass Bar extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      menu: {\r\n        anchorEl: null\r\n      }\r\n    };\r\n  }\r\n\r\n  getNameInitials = () => {\r\n    const { user, userData } = this.props;\r\n\r\n    const firstName = userData.firstName;\r\n    const lastName = userData.lastName;\r\n    const username = userData.username;\r\n    const displayName = user.displayName;\r\n\r\n    if (firstName && lastName) {\r\n      return firstName.charAt(0) + lastName.charAt(0);\r\n    } else if (firstName) {\r\n      return firstName.charAt(0)\r\n    } else if (lastName) {\r\n      return lastName.charAt(0);\r\n    } else if (username) {\r\n      return username.charAt(0);\r\n    } else if (displayName) {\r\n      return displayName.charAt(0);\r\n    } else {\r\n      return 'NN';\r\n    }\r\n  };\r\n\r\n  openMenu = (event) => {\r\n    const anchorEl = event.currentTarget;\r\n\r\n    this.setState({\r\n      menu: {\r\n        anchorEl\r\n      }\r\n    });\r\n  };\r\n\r\n  closeMenu = () => {\r\n    this.setState({\r\n      menu: {\r\n        anchorEl: null\r\n      }\r\n    });\r\n  };\r\n\r\n  handleSettingsClick = () => {\r\n    this.closeMenu();\r\n    this.props.onSettingsClick();\r\n  };\r\n\r\n  handleSignOutClick = () => {\r\n    this.closeMenu();\r\n    this.props.onSignOutClick();\r\n  };\r\n\r\n  render() {\r\n    // Properties\r\n    const { performingAction, signedIn, user } = this.props;\r\n\r\n    // Events\r\n    const { onSignUpClick, onSignInClick } = this.props;\r\n\r\n    const { menu } = this.state;\r\n\r\n    return (\r\n      <AppBar color=\"primary\" position=\"static\">\r\n        <Toolbar variant=\"regular\">\r\n          <Box flexGrow={1}>\r\n            <Typography color=\"inherit\" variant=\"h6\">{process.env.REACT_APP_NAME}</Typography>\r\n          </Box>\r\n\r\n          {signedIn &&\r\n            <>\r\n              <IconButton color=\"inherit\" disabled={performingAction} onClick={this.openMenu}>\r\n                {user.photoURL &&\r\n                  <Avatar alt=\"Avatar\" src={user.photoURL} />\r\n                }\r\n\r\n                {!user.photoURL &&\r\n                  <Avatar alt=\"Avatar\">\r\n                    {this.getNameInitials()}\r\n                  </Avatar>\r\n                }\r\n              </IconButton>\r\n\r\n              <Menu anchorEl={menu.anchorEl} open={Boolean(menu.anchorEl)} onClose={this.closeMenu}>\r\n                <MenuItem disabled={performingAction} onClick={this.handleSettingsClick}>Settings</MenuItem>\r\n                <MenuItem disabled={performingAction} onClick={this.handleSignOutClick}>Sign out</MenuItem>\r\n              </Menu>\r\n            </>\r\n          }\r\n\r\n          {!signedIn &&\r\n            <>\r\n              <Box mr={1}>\r\n                <Button color=\"secondary\" disabled={performingAction} variant=\"contained\" onClick={onSignUpClick}>Sign Up</Button>\r\n              </Box>\r\n\r\n              <Button color=\"secondary\" disabled={performingAction} variant=\"contained\" onClick={onSignInClick}>Sign In</Button>\r\n            </>\r\n          }\r\n        </Toolbar>\r\n      </AppBar>\r\n    );\r\n  }\r\n}\r\n\r\nBar.defaultProps = {\r\n  performingAction: false,\r\n  signedIn: false\r\n};\r\n\r\nBar.propTypes = {\r\n  // Properties\r\n  performingAction: PropTypes.bool.isRequired,\r\n  signedIn: PropTypes.bool.isRequired,\r\n  user: PropTypes.object,\r\n  userData: PropTypes.object,\r\n\r\n  // Events\r\n  onSettingsClick: PropTypes.func.isRequired,\r\n  onSignOutClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default Bar;\r\n","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst styles = {\r\n  center: {\r\n    position: 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    textAlign: 'center'\r\n  }\r\n};\r\n\r\nclass EmptyState extends Component {\r\n  render() {\r\n    // Styling\r\n    const { classes } = this.props;\r\n\r\n    // Properties\r\n    const { icon, title, description, button } = this.props;\r\n\r\n    return (\r\n      <div className={classes.center}>\r\n        {icon}\r\n        {title && <Typography color=\"textSecondary\" variant=\"h4\">{title}</Typography>}\r\n        {description && <Typography color=\"textSecondary\" variant=\"subtitle1\">{description}</Typography>}\r\n        {button}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nEmptyState.propTypes = {\r\n  // Styling\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  // Properties\r\n  icon: PropTypes.element,\r\n  title: PropTypes.string,\r\n  description: PropTypes.string,\r\n  button: PropTypes.element\r\n};\r\n\r\nexport default withStyles(styles)(EmptyState);","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\r\n\r\nimport EmptyState from '../EmptyState';\r\n\r\nconst styles = (theme) => ({\r\n  emptyStateIcon: {\r\n    fontSize: theme.spacing(12)\r\n  },\r\n\r\n  button: {\r\n    marginTop: theme.spacing(1)\r\n  },\r\n\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n});\r\n\r\nclass HomeContent extends Component {\r\n  render() {\r\n    // Styling\r\n    const { classes } = this.props;\r\n\r\n    // Properties\r\n    const { signedIn } = this.props;\r\n\r\n    if (signedIn) {\r\n      return (\r\n        <EmptyState\r\n          icon={<HomeIcon className={classes.emptyStateIcon} color=\"action\" />}\r\n          title=\"Home\"\r\n        />\r\n      );\r\n    }\r\n\r\n    return (\r\n      <EmptyState\r\n        title={process.env.REACT_APP_NAME}\r\n        description=\"The three musketeers, all in one pack in the form of a boilerplate app\"\r\n        button={\r\n          <Fab className={classes.button} color=\"secondary\" href=\"https://github.com/Phoqe/react-material-ui-firebase\" rel=\"noopener noreferrer\" target=\"_blank\" variant=\"extended\">\r\n            <GitHubCircleIcon className={classes.buttonIcon} />\r\n            GitHub\r\n          </Fab>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nHomeContent.defaultProps = {\r\n  signedIn: false\r\n};\r\n\r\nHomeContent.propTypes = {\r\n  // Styling\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  // Properties\r\n  signedIn: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(HomeContent);\r\n","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Fab from '@material-ui/core/Fab';\r\n\r\nimport FindIcon from '@material-ui/icons/FindInPage';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\n\r\nimport EmptyState from '../EmptyState';\r\n\r\nconst styles = (theme) => ({\r\n  emptyStateIcon: {\r\n    fontSize: theme.spacing(12)\r\n  },\r\n\r\n  button: {\r\n    marginTop: theme.spacing(1)\r\n  },\r\n\r\n  buttonIcon: {\r\n    marginRight: theme.spacing(1)\r\n  }\r\n});\r\n\r\nclass NotFoundContent extends Component {\r\n  render() {\r\n    // Styling\r\n    const { classes } = this.props;\r\n\r\n    return (\r\n      <EmptyState\r\n        icon={<FindIcon className={classes.emptyStateIcon} color=\"action\" />}\r\n        title=\"Content Not Found\"\r\n        description=\"The requested URL was not found on this server\"\r\n        button={\r\n          <Fab className={classes.button} color=\"secondary\" component={Link} to=\"/\" variant=\"extended\">\r\n            <HomeIcon className={classes.buttonIcon} /> Go Home\r\n          </Fab>\r\n        }\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nNotFoundContent.propTypes = {\r\n  // Styling\r\n  classes: PropTypes.object.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(NotFoundContent);\r\n","import React, { Component } from 'react'\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { BrowserRouter, Switch, Route } from \"react-router-dom\";\r\n\r\nimport HomeContent from '../HomeContent';\r\nimport NotFoundContent from '../NotFoundContent';\r\n\r\nclass Router extends Component {\r\n  render() {\r\n    // Properties\r\n    const { signedIn } = this.props;\r\n\r\n    return (\r\n      <BrowserRouter basename={process.env.REACT_APP_BASENAME}>\r\n        <Switch>\r\n          <Route path=\"/\" exact>\r\n            <HomeContent signedIn={signedIn} />\r\n          </Route>\r\n\r\n          <Route>\r\n            <NotFoundContent />\r\n          </Route>\r\n        </Switch>\r\n      </BrowserRouter>\r\n    )\r\n  }\r\n}\r\n\r\nRouter.defaultProps = {\r\n  signedIn: false\r\n};\r\n\r\nRouter.propTypes = {\r\n  // Properties\r\n  signedIn: PropTypes.bool.isRequired\r\n};\r\n\r\nexport default Router;\r\n","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { createMuiTheme, withStyles, MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport FacebookBoxIcon from 'mdi-material-ui/FacebookBox';\r\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\r\nimport GoogleIcon from 'mdi-material-ui/Google';\r\nimport MicrosoftIcon from 'mdi-material-ui/Microsoft';\r\nimport TwitterIcon from 'mdi-material-ui/Twitter';\r\nimport YahooIcon from 'mdi-material-ui/Yahoo';\r\n\r\nconst styles = (theme) => ({\r\n  grid: {\r\n    marginBottom: theme.spacing(2)\r\n  }\r\n});\r\n\r\nclass AuthProviderList extends Component {\r\n  render() {\r\n    // Styling\r\n    const { classes } = this.props;\r\n\r\n    // Properties\r\n    const { gutterBottom, performingAction } = this.props;\r\n\r\n    // Events\r\n    const { onAuthProviderClick } = this.props;\r\n\r\n    const authProviders = [\r\n      {\r\n        providerId: 'facebook.com',\r\n        theme: createMuiTheme({\r\n          palette: {\r\n            primary: {\r\n              main: '#3c5a99',\r\n              contrastText: '#ffffff'\r\n            }\r\n          }\r\n        }),\r\n        icon: <FacebookBoxIcon />,\r\n        name: 'Facebook'\r\n      },\r\n      {\r\n        providerId: 'github.com',\r\n        theme: createMuiTheme({\r\n          palette: {\r\n            primary: {\r\n              main: '#24292e',\r\n              contrastText: '#ffffff'\r\n            }\r\n          }\r\n        }),\r\n        icon: <GitHubCircleIcon />,\r\n        name: 'GitHub'\r\n      },\r\n      {\r\n        providerId: 'google.com',\r\n        theme: createMuiTheme({\r\n          palette: {\r\n            primary: {\r\n              main: '#4285f4',\r\n              contrastText: '#ffffff'\r\n            }\r\n          }\r\n        }),\r\n        icon: <GoogleIcon />,\r\n        name: 'Google'\r\n      },\r\n      {\r\n        providerId: 'microsoft.com',\r\n        theme: createMuiTheme({\r\n          palette: {\r\n            primary: {\r\n              main: '#f65314',\r\n              contrastText: '#ffffff'\r\n            }\r\n          }\r\n        }),\r\n        icon: <MicrosoftIcon />,\r\n        name: 'Microsoft'\r\n      },\r\n      {\r\n        providerId: 'twitter.com',\r\n        theme: createMuiTheme({\r\n          palette: {\r\n            primary: {\r\n              main: '#1da1f2',\r\n              contrastText: '#ffffff'\r\n            }\r\n          }\r\n        }),\r\n        icon: <TwitterIcon />,\r\n        name: 'Twitter'\r\n      },\r\n      {\r\n        providerId: 'yahoo.com',\r\n        theme: createMuiTheme({\r\n          palette: {\r\n            primary: {\r\n              main: '#410093',\r\n              contrastText: '#ffffff'\r\n            }\r\n          }\r\n        }),\r\n        icon: <YahooIcon />,\r\n        name: 'Yahoo'\r\n      }\r\n    ];\r\n\r\n    if (gutterBottom) {\r\n      return (\r\n        <Grid className={classes.grid} container direction=\"column\" spacing={1}>\r\n          {authProviders.map((authProvider) => {\r\n            return (\r\n              <Grid key={authProvider.providerId} item>\r\n                <MuiThemeProvider theme={authProvider.theme}>\r\n                  <Button\r\n                    color=\"primary\"\r\n                    disabled={performingAction}\r\n                    fullWidth\r\n                    startIcon={authProvider.icon}\r\n                    variant=\"contained\"\r\n                    onClick={() => onAuthProviderClick(authProvider.providerId)}>\r\n                    {authProvider.name}\r\n                  </Button>\r\n                </MuiThemeProvider>\r\n              </Grid>\r\n            );\r\n          })}\r\n        </Grid>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <Grid container direction=\"column\" spacing={1}>\r\n        {authProviders.map((authProvider) => {\r\n          return (\r\n            <Grid key={authProvider.providerId} item>\r\n              <MuiThemeProvider theme={authProvider.theme}>\r\n                <Button\r\n                  color=\"primary\"\r\n                  disabled={performingAction}\r\n                  fullWidth\r\n                  startIcon={authProvider.icon}\r\n                  variant=\"contained\"\r\n                  onClick={() => onAuthProviderClick(authProvider.providerId)}>\r\n                  {authProvider.name}\r\n                </Button>\r\n              </MuiThemeProvider>\r\n            </Grid>\r\n          );\r\n        })}\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nAuthProviderList.defaultProps = {\r\n  gutterBottom: false,\r\n  performingAction: false\r\n};\r\n\r\nAuthProviderList.propTypes = {\r\n  // Styling\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  // Properties\r\n  gutterBottom: PropTypes.bool,\r\n  performingAction: PropTypes.bool,\r\n\r\n  // Events\r\n  onAuthProviderClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(AuthProviderList);\r\n","const constraints = {\r\n  firstName: {\r\n    presence: {\r\n      allowEmpty: false\r\n    },\r\n\r\n    type: 'string'\r\n  },\r\n\r\n  lastName: {\r\n    presence: {\r\n      allowEmpty: false\r\n    },\r\n\r\n    type: 'string'\r\n  },\r\n\r\n  username: {\r\n    length: {\r\n      minimum: 2,\r\n      maximum: 20\r\n    },\r\n\r\n    presence: {\r\n      allowEmpty: false\r\n    },\r\n\r\n    type: 'string'\r\n  },\r\n\r\n  emailAddress: {\r\n    email: {\r\n      message: '^E-mail address is invalid'\r\n    },\r\n\r\n    presence: {\r\n      allowEmpty: false\r\n    },\r\n\r\n    type: 'string'\r\n  },\r\n\r\n  emailAddressConfirmation: {\r\n    email: {\r\n      message: '^E-mail address confirmation is invalid'\r\n    },\r\n\r\n    equality: {\r\n      attribute: 'emailAddress',\r\n      message: '^E-mail address confirmation is not equal to e-mail address'\r\n    },\r\n\r\n    presence: {\r\n      allowEmpty: false\r\n    },\r\n\r\n    type: 'string'\r\n  },\r\n\r\n  password: {\r\n    length: {\r\n      minimum: 6\r\n    },\r\n\r\n    presence: {\r\n      allowEmpty: false\r\n    },\r\n\r\n    type: 'string'\r\n  },\r\n\r\n  passwordConfirmation: {\r\n    equality: 'password',\r\n\r\n    length: {\r\n      minimum: 6\r\n    },\r\n\r\n    presence: {\r\n      allowEmpty: false\r\n    },\r\n\r\n    type: 'string'\r\n  },\r\n};\r\n\r\nexport default constraints;","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport validate from 'validate.js';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport AuthProviderList from '../AuthProviderList';\r\n\r\nimport constraints from '../../constraints';\r\nimport authentication from '../../services/authentication';\r\n\r\nconst styles = (theme) => ({\r\n  dialogContent: {\r\n    overflowY: 'hidden'\r\n  },\r\n\r\n  icon: {\r\n    marginRight: theme.spacing(0.5)\r\n  },\r\n\r\n  divider: {\r\n    margin: 'auto'\r\n  },\r\n\r\n  grid: {\r\n    marginBottom: theme.spacing(2)\r\n  }\r\n});\r\n\r\nconst initialState = {\r\n  performingAction: false,\r\n\r\n  firstName: '',\r\n  lastName: '',\r\n  username: '',\r\n  emailAddress: '',\r\n  emailAddressConfirmation: '',\r\n  password: '',\r\n  passwordConfirmation: '',\r\n\r\n  errors: null\r\n};\r\n\r\nclass SignUpDialog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = initialState;\r\n  }\r\n\r\n  signUp = () => {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      username,\r\n      emailAddress,\r\n      emailAddressConfirmation,\r\n      password,\r\n      passwordConfirmation\r\n    } = this.state;\r\n\r\n    const errors = validate({\r\n      firstName: firstName,\r\n      lastName: lastName,\r\n      username: username,\r\n      emailAddress: emailAddress,\r\n      emailAddressConfirmation: emailAddressConfirmation,\r\n      password: password,\r\n      passwordConfirmation: passwordConfirmation\r\n    }, {\r\n      firstName: constraints.firstName,\r\n      lastName: constraints.lastName,\r\n      username: constraints.username,\r\n      emailAddress: constraints.emailAddress,\r\n      emailAddressConfirmation: constraints.emailAddressConfirmation,\r\n      password: constraints.password,\r\n      passwordConfirmation: constraints.passwordConfirmation\r\n    });\r\n\r\n    if (errors) {\r\n      this.setState({\r\n        errors: errors\r\n      });\r\n    } else {\r\n      this.setState({\r\n        performingAction: true,\r\n\r\n        errors: null\r\n      }, () => {\r\n        authentication.signUp({\r\n          firstName: firstName,\r\n          lastName: lastName,\r\n          username: username,\r\n          emailAddress: emailAddress,\r\n          password: password\r\n        }).then((value) => {\r\n          this.props.dialogProps.onClose();\r\n        }).catch((reason) => {\r\n          const code = reason.code;\r\n          const message = reason.message;\r\n\r\n          switch (code) {\r\n            case 'auth/email-already-in-use':\r\n            case 'auth/invalid-email':\r\n            case 'auth/operation-not-allowed':\r\n            case 'auth/weak-password':\r\n              this.props.openSnackbar(message);\r\n              return;\r\n\r\n            default:\r\n              this.props.openSnackbar(message);\r\n              return;\r\n          }\r\n        }).finally(() => {\r\n          this.setState({\r\n            performingAction: false\r\n          });\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  signInWithAuthProvider = (providerId) => {\r\n    this.setState({\r\n      performingAction: true\r\n    }, () => {\r\n      authentication.signInWithAuthProvider(providerId).then((value) => {\r\n        this.props.dialogProps.onClose(() => {\r\n          const user = value.user;\r\n          const displayName = user.displayName;\r\n          const emailAddress = user.email;\r\n\r\n          this.props.openSnackbar(`Signed in as ${displayName || emailAddress}`);\r\n        });\r\n      }).catch((reason) => {\r\n        const code = reason.code;\r\n        const message = reason.message;\r\n\r\n        switch (code) {\r\n          case 'auth/account-exists-with-different-credential':\r\n          case 'auth/auth-domain-config-required':\r\n          case 'auth/cancelled-popup-request':\r\n          case 'auth/operation-not-allowed':\r\n          case 'auth/operation-not-supported-in-this-environment':\r\n          case 'auth/popup-blocked':\r\n          case 'auth/popup-closed-by-user':\r\n          case 'auth/unauthorized-domain':\r\n            this.props.openSnackbar(message);\r\n            return;\r\n\r\n          default:\r\n            this.props.openSnackbar(message);\r\n            return;\r\n        }\r\n      }).finally(() => {\r\n        this.setState({\r\n          performingAction: false\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  handleKeyPress = (event) => {\r\n    const {\r\n      firstName,\r\n      lastName,\r\n      username,\r\n      emailAddress,\r\n      emailAddressConfirmation,\r\n      password,\r\n      passwordConfirmation\r\n    } = this.state;\r\n\r\n    if (!firstName ||\r\n      !lastName ||\r\n      !username ||\r\n      !emailAddress ||\r\n      !emailAddressConfirmation ||\r\n      !password ||\r\n      !passwordConfirmation) {\r\n      return;\r\n    }\r\n\r\n    const key = event.key;\r\n\r\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\r\n      return;\r\n    }\r\n\r\n    if (key === 'Enter') {\r\n      this.signUp();\r\n    }\r\n  };\r\n\r\n  handleExited = () => {\r\n    this.setState(initialState);\r\n  };\r\n\r\n  handleFirstNameChange = (event) => {\r\n    const firstName = event.target.value;\r\n\r\n    this.setState({\r\n      firstName: firstName\r\n    });\r\n  };\r\n\r\n  handleLastNameChange = (event) => {\r\n    const lastName = event.target.value;\r\n\r\n    this.setState({\r\n      lastName: lastName\r\n    });\r\n  };\r\n\r\n  handleUsernameChange = (event) => {\r\n    const username = event.target.value;\r\n\r\n    this.setState({\r\n      username: username\r\n    });\r\n  };\r\n\r\n  handleEmailAddressChange = (event) => {\r\n    const emailAddress = event.target.value;\r\n\r\n    this.setState({\r\n      emailAddress: emailAddress\r\n    });\r\n  };\r\n\r\n  handleEmailAddressConfirmationChange = (event) => {\r\n    const emailAddressConfirmation = event.target.value;\r\n\r\n    this.setState({\r\n      emailAddressConfirmation: emailAddressConfirmation\r\n    });\r\n  };\r\n\r\n  handlePasswordChange = (event) => {\r\n    const password = event.target.value;\r\n\r\n    this.setState({\r\n      password: password\r\n    });\r\n  };\r\n\r\n  handlePasswordConfirmationChange = (event) => {\r\n    const passwordConfirmation = event.target.value;\r\n\r\n    this.setState({\r\n      passwordConfirmation: passwordConfirmation\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // Styling\r\n    const { classes } = this.props;\r\n\r\n    // Dialog Properties\r\n    const { dialogProps } = this.props;\r\n\r\n    const {\r\n      performingAction,\r\n\r\n      firstName,\r\n      lastName,\r\n      username,\r\n      emailAddress,\r\n      emailAddressConfirmation,\r\n      password,\r\n      passwordConfirmation,\r\n\r\n      errors\r\n    } = this.state;\r\n\r\n    return (\r\n      <Dialog fullWidth maxWidth=\"md\" {...dialogProps} onKeyPress={this.handleKeyPress} onExited={this.handleExited}>\r\n        <DialogTitle>\r\n          Sign up for an account\r\n        </DialogTitle>\r\n\r\n        <Hidden smDown>\r\n          <DialogContent className={classes.dialogContent}>\r\n            <Grid container direction=\"row\">\r\n              <Grid item xs={3}>\r\n                <AuthProviderList\r\n                  performingAction={performingAction}\r\n\r\n                  onAuthProviderClick={this.signInWithAuthProvider}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={1}>\r\n                <Divider className={classes.divider} orientation=\"vertical\" />\r\n              </Grid>\r\n\r\n              <Grid item xs={8}>\r\n                <Grid container spacing={4}>\r\n                  <Grid item xs>\r\n                    <TextField\r\n                      autoComplete=\"given-name\"\r\n                      disabled={performingAction}\r\n                      error={!!(errors && errors.firstName)}\r\n                      fullWidth\r\n                      helperText={(errors && errors.firstName) ? errors.firstName[0] : ''}\r\n                      label=\"First name\"\r\n                      placeholder=\"John\"\r\n                      required\r\n                      type=\"text\"\r\n                      value={firstName}\r\n                      variant=\"outlined\"\r\n\r\n                      onChange={this.handleFirstNameChange}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs>\r\n                    <TextField\r\n                      autoComplete=\"family-name\"\r\n                      disabled={performingAction}\r\n                      error={!!(errors && errors.lastName)}\r\n                      fullWidth\r\n                      helperText={(errors && errors.lastName) ? errors.lastName[0] : ''}\r\n                      label=\"Last name\"\r\n                      placeholder=\"Doe\"\r\n                      required\r\n                      type=\"text\"\r\n                      value={lastName}\r\n                      variant=\"outlined\"\r\n\r\n                      onChange={this.handleLastNameChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={4}>\r\n                  <Grid item xs>\r\n                    <TextField\r\n                      autoComplete=\"username\"\r\n                      disabled={performingAction}\r\n                      error={!!(errors && errors.username)}\r\n                      fullWidth\r\n                      helperText={(errors && errors.username) ? errors.username[0] : ''}\r\n                      label=\"Username\"\r\n                      placeholder=\"John\"\r\n                      required\r\n                      type=\"text\"\r\n                      value={username}\r\n                      variant=\"outlined\"\r\n\r\n                      onChange={this.handleUsernameChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={4}>\r\n                  <Grid item xs>\r\n                    <TextField\r\n                      autoComplete=\"email\"\r\n                      disabled={performingAction}\r\n                      error={!!(errors && errors.emailAddress)}\r\n                      fullWidth\r\n                      helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\r\n                      label=\"E-mail address\"\r\n                      placeholder=\"john@doe.com\"\r\n                      required\r\n                      type=\"email\"\r\n                      value={emailAddress}\r\n                      variant=\"outlined\"\r\n\r\n                      onChange={this.handleEmailAddressChange}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs>\r\n                    <TextField\r\n                      autoComplete=\"email\"\r\n                      disabled={performingAction}\r\n                      error={!!(errors && errors.emailAddressConfirmation)}\r\n                      fullWidth\r\n                      helperText={(errors && errors.emailAddressConfirmation) ? errors.emailAddressConfirmation[0] : ''}\r\n                      label=\"E-mail address confirmation\"\r\n                      placeholder=\"john@doe.com\"\r\n                      required\r\n                      type=\"email\"\r\n                      value={emailAddressConfirmation}\r\n                      variant=\"outlined\"\r\n\r\n                      onChange={this.handleEmailAddressConfirmationChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid container spacing={4}>\r\n                  <Grid item xs>\r\n                    <TextField\r\n                      autoComplete=\"new-password\"\r\n                      disabled={performingAction}\r\n                      error={!!(errors && errors.password)}\r\n                      fullWidth\r\n                      helperText={(errors && errors.password) ? errors.password[0] : ''}\r\n                      label=\"Password\"\r\n                      placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\r\n                      required\r\n                      type=\"password\"\r\n                      value={password}\r\n                      variant=\"outlined\"\r\n\r\n                      onChange={this.handlePasswordChange}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs>\r\n                    <TextField\r\n                      autoComplete=\"password\"\r\n                      disabled={performingAction}\r\n                      error={!!(errors && errors.passwordConfirmation)}\r\n                      fullWidth\r\n                      helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : ''}\r\n                      label=\"Password confirmation\"\r\n                      placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\r\n                      required\r\n                      type=\"password\"\r\n                      value={passwordConfirmation}\r\n                      variant=\"outlined\"\r\n\r\n                      onChange={this.handlePasswordConfirmationChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n        </Hidden>\r\n\r\n        <Hidden mdUp>\r\n          <DialogContent>\r\n            <AuthProviderList\r\n              gutterBottom\r\n              performingAction={performingAction}\r\n\r\n              onAuthProviderClick={this.signInWithAuthProvider}\r\n            />\r\n\r\n            <Grid container direction=\"column\" spacing={2}>\r\n              <Grid item xs>\r\n                <TextField\r\n                  autoComplete=\"given-name\"\r\n                  disabled={performingAction}\r\n                  error={!!(errors && errors.firstName)}\r\n                  fullWidth\r\n                  helperText={(errors && errors.firstName) ? errors.firstName[0] : ''}\r\n                  label=\"First name\"\r\n                  placeholder=\"John\"\r\n                  required\r\n                  type=\"text\"\r\n                  value={firstName}\r\n                  variant=\"outlined\"\r\n\r\n                  onChange={this.handleFirstNameChange}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs>\r\n                <TextField\r\n                  autoComplete=\"family-name\"\r\n                  disabled={performingAction}\r\n                  error={!!(errors && errors.lastName)}\r\n                  fullWidth\r\n                  helperText={(errors && errors.lastName) ? errors.lastName[0] : ''}\r\n                  label=\"Last name\"\r\n                  placeholder=\"Doe\"\r\n                  required\r\n                  type=\"text\"\r\n                  value={lastName}\r\n                  variant=\"outlined\"\r\n\r\n                  onChange={this.handleLastNameChange}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs>\r\n                <TextField\r\n                  autoComplete=\"username\"\r\n                  disabled={performingAction}\r\n                  error={!!(errors && errors.username)}\r\n                  fullWidth\r\n                  helperText={(errors && errors.username) ? errors.username[0] : ''}\r\n                  label=\"Username\"\r\n                  placeholder=\"John\"\r\n                  required\r\n                  type=\"text\"\r\n                  value={username}\r\n                  variant=\"outlined\"\r\n\r\n                  onChange={this.handleUsernameChange}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs>\r\n                <TextField\r\n                  autoComplete=\"email\"\r\n                  disabled={performingAction}\r\n                  error={!!(errors && errors.emailAddress)}\r\n                  fullWidth\r\n                  helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\r\n                  label=\"E-mail address\"\r\n                  placeholder=\"john@doe.com\"\r\n                  required\r\n                  type=\"email\"\r\n                  value={emailAddress}\r\n                  variant=\"outlined\"\r\n\r\n                  onChange={this.handleEmailAddressChange}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs>\r\n                <TextField\r\n                  autoComplete=\"email\"\r\n                  disabled={performingAction}\r\n                  error={!!(errors && errors.emailAddressConfirmation)}\r\n                  fullWidth\r\n                  helperText={(errors && errors.emailAddressConfirmation) ? errors.emailAddressConfirmation[0] : ''}\r\n                  label=\"E-mail address confirmation\"\r\n                  placeholder=\"john@doe.com\"\r\n                  required\r\n                  type=\"email\"\r\n                  value={emailAddressConfirmation}\r\n                  variant=\"outlined\"\r\n\r\n                  onChange={this.handleEmailAddressConfirmationChange}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs>\r\n                <TextField\r\n                  autoComplete=\"new-password\"\r\n                  disabled={performingAction}\r\n                  error={!!(errors && errors.password)}\r\n                  fullWidth\r\n                  helperText={(errors && errors.password) ? errors.password[0] : ''}\r\n                  label=\"Password\"\r\n                  placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\r\n                  required\r\n                  type=\"password\"\r\n                  value={password}\r\n                  variant=\"outlined\"\r\n\r\n                  onChange={this.handlePasswordChange}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs>\r\n                <TextField\r\n                  autoComplete=\"password\"\r\n                  disabled={performingAction}\r\n                  error={!!(errors && errors.passwordConfirmation)}\r\n                  fullWidth\r\n                  helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : ''}\r\n                  label=\"Password confirmation\"\r\n                  placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\r\n                  required\r\n                  type=\"password\"\r\n                  value={passwordConfirmation}\r\n                  variant=\"outlined\"\r\n\r\n                  onChange={this.handlePasswordConfirmationChange}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </DialogContent>\r\n        </Hidden>\r\n\r\n        <DialogActions>\r\n          <Button color=\"primary\" onClick={dialogProps.onClose}>Cancel</Button>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            disabled={\r\n              !firstName ||\r\n              !lastName ||\r\n              !username ||\r\n              !emailAddress ||\r\n              !emailAddressConfirmation ||\r\n              !password ||\r\n              !passwordConfirmation ||\r\n              performingAction\r\n            }\r\n            variant=\"contained\"\r\n\r\n            onClick={this.signUp}>\r\n            Sign up\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nSignUpDialog.propTypes = {\r\n  // Styling\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  // Dialog Properties\r\n  dialogProps: PropTypes.object.isRequired,\r\n\r\n  // Custom Functions\r\n  openSnackbar: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SignUpDialog);\r\n","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport validate from 'validate.js';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Button from '@material-ui/core/Button';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport AuthProviderList from '../AuthProviderList';\r\n\r\nimport constraints from '../../constraints';\r\nimport authentication from '../../services/authentication';\r\n\r\nconst styles = (theme) => ({\r\n  icon: {\r\n    marginRight: theme.spacing(0.5)\r\n  },\r\n\r\n  divider: {\r\n    margin: 'auto'\r\n  },\r\n\r\n  grid: {\r\n    marginBottom: theme.spacing(2)\r\n  }\r\n});\r\n\r\nconst initialState = {\r\n  performingAction: false,\r\n\r\n  emailAddress: '',\r\n  password: '',\r\n\r\n  errors: null\r\n};\r\n\r\nclass SignInDialog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = initialState;\r\n  }\r\n\r\n  resetPassword = () => {\r\n    const { emailAddress } = this.state;\r\n\r\n    const errors = validate({\r\n      emailAddress: emailAddress\r\n    }, {\r\n      emailAddress: constraints.emailAddress\r\n    });\r\n\r\n    if (errors) {\r\n      this.setState({\r\n        errors: errors\r\n      });\r\n    } else {\r\n      this.setState({\r\n        errors: null\r\n      }, () => {\r\n        this.setState({\r\n          performingAction: true\r\n        }, () => {\r\n          authentication.resetPassword(emailAddress).then((value) => {\r\n            this.props.openSnackbar(`Sent password reset e-mail to ${emailAddress}`);\r\n          }).catch((reason) => {\r\n            const code = reason.code;\r\n            const message = reason.message;\r\n\r\n            switch (code) {\r\n              case 'auth/invalid-email':\r\n              case 'auth/missing-android-pkg-name':\r\n              case 'auth/missing-continue-uri':\r\n              case 'auth/missing-ios-bundle-id':\r\n              case 'auth/invalid-continue-uri':\r\n              case 'auth/unauthorized-continue-uri':\r\n              case 'auth/user-not-found':\r\n                this.props.openSnackbar(message);\r\n                return;\r\n\r\n              default:\r\n                this.props.openSnackbar(message);\r\n                return;\r\n            }\r\n          }).finally(() => {\r\n            this.setState({\r\n              performingAction: false\r\n            });\r\n          });\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  signIn = () => {\r\n    const { emailAddress, password } = this.state;\r\n\r\n    const errors = validate({\r\n      emailAddress: emailAddress,\r\n      password: password\r\n    }, {\r\n      emailAddress: constraints.emailAddress,\r\n      password: constraints.password\r\n    });\r\n\r\n    if (errors) {\r\n      this.setState({\r\n        errors: errors\r\n      });\r\n    } else {\r\n      this.setState({\r\n        performingAction: true,\r\n\r\n        errors: null\r\n      }, () => {\r\n        authentication.signIn(emailAddress, password).then((value) => {\r\n          this.props.dialogProps.onClose(() => {\r\n            const user = value.user;\r\n            const displayName = user.displayName;\r\n            const emailAddress = user.email;\r\n\r\n            this.props.openSnackbar(`Signed in as ${displayName || emailAddress}`);\r\n          });\r\n        }).catch((reason) => {\r\n          const code = reason.code;\r\n          const message = reason.message;\r\n\r\n          switch (code) {\r\n            case 'auth/invalid-email':\r\n            case 'auth/user-disabled':\r\n            case 'auth/user-not-found':\r\n            case 'auth/wrong-password':\r\n              this.props.openSnackbar(message);\r\n              return;\r\n\r\n            default:\r\n              this.props.openSnackbar(message);\r\n              return;\r\n          }\r\n        }).finally(() => {\r\n          this.setState({\r\n            performingAction: false\r\n          });\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  signInWithAuthProvider = (providerId) => {\r\n    this.setState({\r\n      performingAction: true\r\n    }, () => {\r\n      authentication.signInWithAuthProvider(providerId).then((value) => {\r\n        this.props.dialogProps.onClose(() => {\r\n          const user = value.user;\r\n          const displayName = user.displayName;\r\n          const emailAddress = user.email;\r\n\r\n          this.props.openSnackbar(`Signed in as ${displayName || emailAddress}`);\r\n        });\r\n      }).catch((reason) => {\r\n        const code = reason.code;\r\n        const message = reason.message;\r\n\r\n        switch (code) {\r\n          case 'auth/account-exists-with-different-credential':\r\n          case 'auth/auth-domain-config-required':\r\n          case 'auth/cancelled-popup-request':\r\n          case 'auth/operation-not-allowed':\r\n          case 'auth/operation-not-supported-in-this-environment':\r\n          case 'auth/popup-blocked':\r\n          case 'auth/popup-closed-by-user':\r\n          case 'auth/unauthorized-domain':\r\n            this.props.openSnackbar(message);\r\n            return;\r\n\r\n          default:\r\n            this.props.openSnackbar(message);\r\n            return;\r\n        }\r\n      }).finally(() => {\r\n        this.setState({\r\n          performingAction: false\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  handleKeyPress = (event) => {\r\n    const { emailAddress, password } = this.state;\r\n\r\n    if (!emailAddress || !password) {\r\n      return;\r\n    }\r\n\r\n    const key = event.key;\r\n\r\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\r\n      return;\r\n    }\r\n\r\n    if (key === 'Enter') {\r\n      this.signIn();\r\n    }\r\n  };\r\n\r\n  handleExited = () => {\r\n    this.setState(initialState);\r\n  };\r\n\r\n  handleEmailAddressChange = (event) => {\r\n    const emailAddress = event.target.value;\r\n\r\n    this.setState({\r\n      emailAddress: emailAddress\r\n    });\r\n  };\r\n\r\n  handlePasswordChange = (event) => {\r\n    const password = event.target.value;\r\n\r\n    this.setState({\r\n      password: password\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // Styling\r\n    const { classes } = this.props;\r\n\r\n    // Dialog Properties\r\n    const { dialogProps } = this.props;\r\n\r\n    const {\r\n      performingAction,\r\n\r\n      emailAddress,\r\n      password,\r\n\r\n      errors\r\n    } = this.state;\r\n\r\n    return (\r\n      <Dialog fullWidth maxWidth=\"sm\" {...dialogProps} onKeyPress={this.handleKeyPress} onExited={this.handleExited}>\r\n        <DialogTitle>\r\n          Sign in to your account\r\n        </DialogTitle>\r\n\r\n        <DialogContent>\r\n          <Hidden xsDown>\r\n            <Grid container direction=\"row\">\r\n              <Grid item xs={4}>\r\n                <AuthProviderList\r\n                  performingAction={performingAction}\r\n\r\n                  onAuthProviderClick={this.signInWithAuthProvider}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={1}>\r\n                <Divider className={classes.divider} orientation=\"vertical\" />\r\n              </Grid>\r\n\r\n              <Grid item xs={7}>\r\n                <Grid container direction=\"column\" spacing={2}>\r\n                  <Grid item xs>\r\n                    <TextField\r\n                      autoComplete=\"email\"\r\n                      disabled={performingAction}\r\n                      error={!!(errors && errors.emailAddress)}\r\n                      fullWidth\r\n                      helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\r\n                      label=\"E-mail address\"\r\n                      placeholder=\"john@doe.com\"\r\n                      required\r\n                      type=\"email\"\r\n                      value={emailAddress}\r\n                      variant=\"outlined\"\r\n\r\n                      onChange={this.handleEmailAddressChange}\r\n                    />\r\n                  </Grid>\r\n\r\n                  <Grid item xs>\r\n                    <TextField\r\n                      autoComplete=\"current-password\"\r\n                      disabled={performingAction}\r\n                      error={!!(errors && errors.password)}\r\n                      fullWidth\r\n                      helperText={(errors && errors.password) ? errors.password[0] : ''}\r\n                      label=\"Password\"\r\n                      placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\r\n                      required\r\n                      type=\"password\"\r\n                      value={password}\r\n                      variant=\"outlined\"\r\n\r\n                      onChange={this.handlePasswordChange}\r\n                    />\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Grid>\r\n          </Hidden>\r\n\r\n          <Hidden smUp>\r\n            <AuthProviderList\r\n              gutterBottom\r\n              performingAction={performingAction}\r\n\r\n              onAuthProviderClick={this.signInWithAuthProvider}\r\n            />\r\n\r\n            <Grid container direction=\"column\" spacing={2}>\r\n              <Grid item xs>\r\n                <TextField\r\n                  autoComplete=\"email\"\r\n                  disabled={performingAction}\r\n                  error={!!(errors && errors.emailAddress)}\r\n                  fullWidth\r\n                  helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : ''}\r\n                  label=\"E-mail address\"\r\n                  placeholder=\"john@doe.com\"\r\n                  required\r\n                  type=\"email\"\r\n                  value={emailAddress}\r\n                  variant=\"outlined\"\r\n\r\n                  onChange={this.handleEmailAddressChange}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs>\r\n                <TextField\r\n                  autoComplete=\"current-password\"\r\n                  disabled={performingAction}\r\n                  error={!!(errors && errors.password)}\r\n                  fullWidth\r\n                  helperText={(errors && errors.password) ? errors.password[0] : ''}\r\n                  label=\"Password\"\r\n                  placeholder=\"&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;&bull;\"\r\n                  required\r\n                  type=\"password\"\r\n                  value={password}\r\n                  variant=\"outlined\"\r\n\r\n                  onChange={this.handlePasswordChange}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Hidden>\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button color=\"primary\" onClick={dialogProps.onClose}>Cancel</Button>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            disabled={!emailAddress || performingAction}\r\n            variant=\"outlined\"\r\n\r\n            onClick={this.resetPassword}>\r\n            Reset password\r\n          </Button>\r\n\r\n          <Button\r\n            color=\"primary\"\r\n            disabled={(!emailAddress || !password) || performingAction}\r\n            variant=\"contained\"\r\n\r\n            onClick={this.signIn}>\r\n            Sign in\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nSignInDialog.propTypes = {\r\n  // Styling\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  // Dialog Properties\r\n  dialogProps: PropTypes.object.isRequired,\r\n\r\n  // Custom Functions\r\n  openSnackbar: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SignInDialog);\r\n","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport validate from 'validate.js';\r\nimport moment from 'moment';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Box from '@material-ui/core/Box';\r\nimport Fade from '@material-ui/core/Fade';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\nimport Badge from '@material-ui/core/Badge';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Fab from '@material-ui/core/Fab';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Divider from '@material-ui/core/Divider';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport PhotoIcon from '@material-ui/icons/Photo';\r\nimport CloudUploadIcon from '@material-ui/icons/CloudUpload';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport PersonOutlineIcon from '@material-ui/icons/PersonOutline';\r\nimport EmailIcon from '@material-ui/icons/Email';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport AccessTimeIcon from '@material-ui/icons/AccessTime';\r\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\r\n\r\nimport constraints from '../../constraints';\r\nimport authentication from '../../services/authentication';\r\n\r\nconst styles = (theme) => ({\r\n  dialogContent: {\r\n    paddingTop: theme.spacing(2)\r\n  },\r\n\r\n  badge: {\r\n    top: theme.spacing(2),\r\n    right: -theme.spacing(2)\r\n  },\r\n\r\n  loadingBadge: {\r\n    top: '50%',\r\n    right: '50%'\r\n  },\r\n\r\n  avatar: {\r\n    marginRight: 'auto',\r\n    marginLeft: 'auto',\r\n\r\n    width: theme.spacing(14),\r\n    height: theme.spacing(14)\r\n  },\r\n\r\n  nameInitials: {\r\n    cursor: 'default'\r\n  },\r\n\r\n  small: {\r\n    width: theme.spacing(4),\r\n    height: theme.spacing(4),\r\n\r\n    minHeight: 'initial'\r\n  }\r\n});\r\n\r\nconst initialState = {\r\n  profileCompletion: 0,\r\n  securityRating: 0,\r\n\r\n  showingField: '',\r\n\r\n  avatar: null,\r\n  avatarUrl: '',\r\n  firstName: '',\r\n  lastName: '',\r\n  username: '',\r\n  emailAddress: '',\r\n\r\n  performingAction: false,\r\n  loadingAvatar: false,\r\n  sentVerificationEmail: false,\r\n\r\n  errors: null\r\n};\r\n\r\nclass AccountTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = initialState;\r\n  }\r\n\r\n  getNameInitials = () => {\r\n    const { user, userData } = this.props;\r\n\r\n    const firstName = userData.firstName;\r\n    const lastName = userData.lastName;\r\n    const username = userData.username;\r\n    const displayName = user.displayName;\r\n\r\n    if (firstName && lastName) {\r\n      return firstName.charAt(0) + lastName.charAt(0);\r\n    } else if (firstName) {\r\n      return firstName.charAt(0)\r\n    } else if (lastName) {\r\n      return lastName.charAt(0);\r\n    } else if (username) {\r\n      return username.charAt(0);\r\n    } else if (displayName) {\r\n      return displayName.charAt(0);\r\n    } else {\r\n      return 'NN';\r\n    }\r\n  };\r\n\r\n  uploadAvatar = () => {\r\n    const { avatar } = this.state;\r\n\r\n    if (!avatar) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      performingAction: true,\r\n      loadingAvatar: true\r\n    }, () => {\r\n      authentication.changeAvatar(avatar).then((value) => {\r\n        this.calculateProfileCompletion(() => {\r\n          this.props.openSnackbar('Changed avatar');\r\n        });\r\n      }).catch((reason) => {\r\n        const code = reason.code;\r\n        const message = reason.message;\r\n\r\n        switch (code) {\r\n          default:\r\n            this.props.openSnackbar(message);\r\n            return;\r\n        }\r\n      }).finally(() => {\r\n        this.setState({\r\n          performingAction: false,\r\n          loadingAvatar: false,\r\n\r\n          avatar: null,\r\n          avatarUrl: ''\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  removeAvatar = () => {\r\n    const { user } = this.props;\r\n    const { avatar, avatarUrl } = this.state;\r\n\r\n    if (!user.photoURL && !avatar && !avatarUrl) {\r\n      return;\r\n    }\r\n\r\n    if ((!user.photoURL && avatar && avatarUrl) || (user.photoURL && avatar && avatarUrl)) {\r\n      URL.revokeObjectURL(avatarUrl);\r\n\r\n      this.setState({\r\n        avatar: null,\r\n        avatarUrl: ''\r\n      }, () => {\r\n        this.props.openSnackbar(`Removed image “${avatar.name}”`, 5);\r\n      });\r\n    } else if (user.photoURL && !avatar && !avatarUrl) {\r\n      this.setState({\r\n        performingAction: true,\r\n        loadingAvatar: true\r\n      }, () => {\r\n        authentication.removeAvatar().then((value) => {\r\n          this.calculateProfileCompletion(() => {\r\n            this.props.openSnackbar('Removed avatar');\r\n          });\r\n        }).catch((reason) => {\r\n          const code = reason.code;\r\n          const message = reason.message;\r\n\r\n          switch (code) {\r\n            default:\r\n              this.props.openSnackbar(message);\r\n              return;\r\n          }\r\n        }).finally(() => {\r\n          this.setState({\r\n            performingAction: false,\r\n            loadingAvatar: false\r\n          });\r\n        });\r\n      });\r\n    }\r\n  };\r\n\r\n  calculateProfileCompletion = (callback) => {\r\n    const { user, userData } = this.props;\r\n\r\n    if (!user || !userData) {\r\n      return;\r\n    }\r\n\r\n    let profileCompletion = 0;\r\n\r\n    const fields = [\r\n      user.photoURL,\r\n      userData.firstName,\r\n      userData.lastName,\r\n      userData.username,\r\n      user.email,\r\n      user.email && user.emailVerified\r\n    ];\r\n\r\n    fields.forEach((field) => {\r\n      if (field) {\r\n        profileCompletion += 100 / fields.length;\r\n      }\r\n    });\r\n\r\n    this.setState({\r\n      profileCompletion: Math.floor(profileCompletion)\r\n    }, () => {\r\n      if (callback && typeof callback === 'function') {\r\n        callback();\r\n      }\r\n    });\r\n  };\r\n\r\n  calculateSecurityRating = (callback) => {\r\n    const { user, userData } = this.props;\r\n\r\n    if (!user || !user.metadata || !userData) {\r\n      return;\r\n    }\r\n\r\n    let creationTime = user.metadata.creationTime;\r\n\r\n    if (!creationTime) {\r\n      return;\r\n    }\r\n\r\n    creationTime = moment(creationTime);\r\n\r\n    let lastPasswordChange = userData.lastPasswordChange;\r\n    let securityRating = 0;\r\n\r\n    if (lastPasswordChange) {\r\n      lastPasswordChange = moment(lastPasswordChange.toDate());\r\n\r\n      if (creationTime.diff(lastPasswordChange, 'days') >= 365.242199) {\r\n        securityRating = 50;\r\n      } else {\r\n        securityRating = 100;\r\n      }\r\n    } else {\r\n      if (moment().diff(creationTime, 'days') >= 365.242199) {\r\n        securityRating = 50;\r\n      } else {\r\n        securityRating = 100;\r\n      }\r\n    }\r\n\r\n    this.setState({\r\n      securityRating: securityRating\r\n    }, () => {\r\n      if (callback && typeof callback === 'function') {\r\n        callback();\r\n      }\r\n    });\r\n  };\r\n\r\n  showField = (fieldId) => {\r\n    if (!fieldId) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      showingField: fieldId\r\n    });\r\n  };\r\n\r\n  hideFields = (callback) => {\r\n    this.setState({\r\n      showingField: '',\r\n\r\n      firstName: '',\r\n      lastName: '',\r\n      username: '',\r\n      emailAddress: '',\r\n\r\n      errors: null\r\n    }, () => {\r\n      if (callback && typeof callback === 'function') {\r\n        callback();\r\n      }\r\n    });\r\n  };\r\n\r\n  changeFirstName = () => {\r\n    const { firstName } = this.state;\r\n\r\n    const errors = validate({\r\n      firstName: firstName\r\n    }, {\r\n      firstName: constraints.firstName\r\n    });\r\n\r\n    if (errors) {\r\n      this.setState({\r\n        errors: errors\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      errors: null\r\n    }, () => {\r\n      const { userData } = this.props;\r\n\r\n      if (firstName === userData.firstName) {\r\n        return;\r\n      }\r\n\r\n      this.setState({\r\n        performingAction: true\r\n      }, () => {\r\n        authentication.changeFirstName(firstName).then(() => {\r\n          this.calculateProfileCompletion(() => {\r\n            this.hideFields(() => {\r\n              this.props.openSnackbar('Changed first name');\r\n            });\r\n          });\r\n        }).catch((reason) => {\r\n          const code = reason.code;\r\n          const message = reason.message;\r\n\r\n          switch (code) {\r\n            default:\r\n              this.props.openSnackbar(message);\r\n              return;\r\n          }\r\n        }).finally(() => {\r\n          this.setState({\r\n            performingAction: false\r\n          });\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  changeLastName = () => {\r\n    const { lastName } = this.state;\r\n\r\n    const errors = validate({\r\n      lastName: lastName\r\n    }, {\r\n      lastName: constraints.lastName\r\n    });\r\n\r\n    if (errors) {\r\n      this.setState({\r\n        errors: errors\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      errors: null\r\n    }, () => {\r\n      const { userData } = this.props;\r\n\r\n      if (lastName === userData.lastName) {\r\n        return;\r\n      }\r\n\r\n      this.setState({\r\n        performingAction: true\r\n      }, () => {\r\n        authentication.changeLastName(lastName).then(() => {\r\n          this.calculateProfileCompletion(() => {\r\n            this.hideFields(() => {\r\n              this.props.openSnackbar('Changed last name');\r\n            });\r\n          });\r\n        }).catch((reason) => {\r\n          const code = reason.code;\r\n          const message = reason.message;\r\n\r\n          switch (code) {\r\n            default:\r\n              this.props.openSnackbar(message);\r\n              return;\r\n          }\r\n        }).finally(() => {\r\n          this.setState({\r\n            performingAction: false\r\n          });\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  changeUsername = () => {\r\n    const { username } = this.state;\r\n\r\n    const errors = validate({\r\n      username: username\r\n    }, {\r\n      username: constraints.username\r\n    });\r\n\r\n    if (errors) {\r\n      this.setState({\r\n        errors: errors\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      errors: null\r\n    }, () => {\r\n      const { userData } = this.props;\r\n\r\n      if (username === userData.username) {\r\n        return;\r\n      }\r\n\r\n      this.setState({\r\n        performingAction: true\r\n      }, () => {\r\n        authentication.changeUsername(username).then(() => {\r\n          this.calculateProfileCompletion(() => {\r\n            this.hideFields(() => {\r\n              this.props.openSnackbar('Changed username');\r\n            });\r\n          });\r\n        }).catch((reason) => {\r\n          const code = reason.code;\r\n          const message = reason.message;\r\n\r\n          switch (code) {\r\n            default:\r\n              this.props.openSnackbar(message);\r\n              return;\r\n          }\r\n        }).finally(() => {\r\n          this.setState({\r\n            performingAction: false\r\n          });\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  changeEmailAddress = () => {\r\n    const { emailAddress } = this.state;\r\n\r\n    const errors = validate({\r\n      emailAddress: emailAddress\r\n    }, {\r\n      emailAddress: constraints.emailAddress\r\n    });\r\n\r\n    if (errors) {\r\n      this.setState({\r\n        errors: errors\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      errors: null\r\n    }, () => {\r\n      const { user } = this.props;\r\n\r\n      if (emailAddress === user.email) {\r\n        return;\r\n      }\r\n\r\n      this.setState({\r\n        performingAction: true\r\n      }, () => {\r\n        authentication.changeEmailAddress(emailAddress).then(() => {\r\n          this.calculateProfileCompletion(() => {\r\n            this.hideFields(() => {\r\n              this.props.openSnackbar('Changed e-mail address');\r\n            });\r\n          });\r\n        }).catch((reason) => {\r\n          const code = reason.code;\r\n          const message = reason.message;\r\n\r\n          switch (code) {\r\n            default:\r\n              this.props.openSnackbar(message);\r\n              return;\r\n          }\r\n        }).finally(() => {\r\n          this.setState({\r\n            performingAction: false\r\n          });\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  verifyEmailAddress = () => {\r\n    this.setState({\r\n      performingAction: true\r\n    }, () => {\r\n      authentication.verifyEmailAddress().then(() => {\r\n        this.setState({\r\n          sentVerificationEmail: true\r\n        }, () => {\r\n          this.props.openSnackbar('Sent verification e-mail');\r\n        });\r\n      }).catch((reason) => {\r\n        const code = reason.code;\r\n        const message = reason.message;\r\n\r\n        switch (code) {\r\n          default:\r\n            this.props.openSnackbar(message);\r\n            return;\r\n        }\r\n      }).finally(() => {\r\n        this.setState({\r\n          performingAction: false\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  deleteAccount = () => {\r\n    this.setState({\r\n      performingAction: true\r\n    }, () => {\r\n      authentication.deleteAccount().then(() => {\r\n        this.props.openSnackbar('Deleted account');\r\n      }).catch((reason) => {\r\n        const code = reason.code;\r\n        const message = reason.message;\r\n\r\n        switch (code) {\r\n          default:\r\n            this.props.openSnackbar(message);\r\n            return;\r\n        }\r\n      }).finally(() => {\r\n        this.setState({\r\n          performingAction: false\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  changeField = (fieldId) => {\r\n    switch (fieldId) {\r\n      case 'first-name':\r\n        this.changeFirstName();\r\n        return;\r\n\r\n      case 'last-name':\r\n        this.changeLastName();\r\n        return;\r\n\r\n      case 'username':\r\n        this.changeUsername();\r\n        return;\r\n\r\n      case 'email-address':\r\n        this.changeEmailAddress();\r\n        return;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  handleKeyDown = (event, fieldId) => {\r\n    if (!event || !fieldId) {\r\n      return;\r\n    }\r\n\r\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\r\n      return;\r\n    }\r\n\r\n    const key = event.key;\r\n\r\n    if (!key) {\r\n      return;\r\n    }\r\n\r\n    if (key === 'Escape') {\r\n      this.hideFields();\r\n    } else if (key === 'Enter') {\r\n      this.changeField(fieldId);\r\n    }\r\n  };\r\n\r\n  handleAvatarChange = (event) => {\r\n    if (!event) {\r\n      return;\r\n    }\r\n\r\n    const files = event.target.files;\r\n\r\n    if (!files) {\r\n      return;\r\n    }\r\n\r\n    const avatar = files[0];\r\n\r\n    if (!avatar) {\r\n      return;\r\n    }\r\n\r\n    const fileTypes = [\r\n      'image/gif',\r\n      'image/jpeg',\r\n      'image/png',\r\n      'image/webp',\r\n      'image/svg+xml'\r\n    ];\r\n\r\n    if (!fileTypes.includes(avatar.type)) {\r\n      return;\r\n    }\r\n\r\n    if (avatar.size > (20 * 1024 * 1024)) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      avatar: avatar,\r\n      avatarUrl: URL.createObjectURL(avatar)\r\n    }, () => {\r\n      this.props.openSnackbar(`Selected image “${avatar.name}”`, 5);\r\n    });\r\n  };\r\n\r\n  handleFirstNameChange = (event) => {\r\n    if (!event) {\r\n      return;\r\n    }\r\n\r\n    const firstName = event.target.value;\r\n\r\n    this.setState({\r\n      firstName: firstName\r\n    });\r\n  };\r\n\r\n  handleLastNameChange = (event) => {\r\n    if (!event) {\r\n      return;\r\n    }\r\n\r\n    const lastName = event.target.value;\r\n\r\n    this.setState({\r\n      lastName: lastName\r\n    });\r\n  };\r\n\r\n  handleUsernameChange = (event) => {\r\n    if (!event) {\r\n      return;\r\n    }\r\n\r\n    const username = event.target.value;\r\n\r\n    this.setState({\r\n      username: username\r\n    });\r\n  };\r\n\r\n  handleEmailAddressChange = (event) => {\r\n    if (!event) {\r\n      return;\r\n    }\r\n\r\n    const emailAddress = event.target.value;\r\n\r\n    this.setState({\r\n      emailAddress: emailAddress\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // Styling\r\n    const { classes } = this.props;\r\n\r\n    // Properties\r\n    const {\r\n      user,\r\n      userData\r\n    } = this.props;\r\n\r\n    // Events\r\n    const {\r\n      onDeleteAccountClick\r\n    } = this.props;\r\n\r\n    const {\r\n      profileCompletion,\r\n      securityRating,\r\n\r\n      showingField,\r\n\r\n      performingAction,\r\n      loadingAvatar,\r\n\r\n      avatar,\r\n      avatarUrl,\r\n      firstName,\r\n      lastName,\r\n      username,\r\n      emailAddress,\r\n\r\n      sentVerificationEmail,\r\n\r\n      errors\r\n    } = this.state;\r\n\r\n    return (\r\n      <DialogContent classes={{ root: classes.dialogContent }}>\r\n        <Box mb={2}>\r\n          <Hidden xsDown>\r\n            <Grid alignItems=\"center\" container>\r\n              <Grid item xs>\r\n                <Box textAlign=\"center\">\r\n                  <Box mb={1.5}>\r\n                    {(avatar && avatarUrl) &&\r\n                      <Badge classes={{ badge: classes.badge }} badgeContent={\r\n                        <Tooltip title=\"Remove\">\r\n                          <Fab classes={{ sizeSmall: classes.small }} color=\"secondary\" disabled={performingAction} size=\"small\" onClick={this.removeAvatar}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                          </Fab>\r\n                        </Tooltip>\r\n                      }>\r\n                        {loadingAvatar &&\r\n                          <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\r\n                            <Fade\r\n                              style={{ transitionDelay: '1s' }}\r\n                              in={loadingAvatar}\r\n                              unmountOnExit>\r\n                              <CircularProgress size={120} thickness={1.8} />\r\n                            </Fade>\r\n                          }>\r\n                            <Avatar className={classes.avatar} alt=\"Avatar\" src={avatarUrl} />\r\n                          </Badge>\r\n                        }\r\n\r\n                        {!loadingAvatar &&\r\n                          <Avatar className={classes.avatar} alt=\"Avatar\" src={avatarUrl} />\r\n                        }\r\n                      </Badge>\r\n                    }\r\n\r\n                    {(!avatar && !avatarUrl) &&\r\n                      <>\r\n                        {user.photoURL &&\r\n                          <Badge classes={{ badge: classes.badge }} badgeContent={\r\n                            <Tooltip title=\"Remove\">\r\n                              <Fab classes={{ sizeSmall: classes.small }} color=\"secondary\" disabled={performingAction} size=\"small\" onClick={this.removeAvatar}>\r\n                                <CloseIcon fontSize=\"small\" />\r\n                              </Fab>\r\n                            </Tooltip>\r\n                          }>\r\n                            {loadingAvatar &&\r\n                              <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\r\n                                <Fade\r\n                                  style={{ transitionDelay: '1s' }}\r\n                                  in={loadingAvatar}\r\n                                  unmountOnExit>\r\n                                  <CircularProgress size={120} thickness={1.8} />\r\n                                </Fade>\r\n                              }>\r\n                                <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\r\n                              </Badge>\r\n                            }\r\n\r\n                            {!loadingAvatar &&\r\n                              <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\r\n                            }\r\n                          </Badge>\r\n                        }\r\n\r\n                        {!user.photoURL &&\r\n                          <>\r\n                            {loadingAvatar &&\r\n                              <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\r\n                                <Fade\r\n                                  style={{ transitionDelay: '1s' }}\r\n                                  in={loadingAvatar}\r\n                                  unmountOnExit>\r\n                                  <CircularProgress size={120} thickness={1.8} />\r\n                                </Fade>\r\n                              }>\r\n                                <Avatar className={classes.avatar} alt=\"Avatar\">\r\n                                  <Typography className={classes.nameInitials} variant=\"h2\">{this.getNameInitials()}</Typography>\r\n                                </Avatar>\r\n                              </Badge>\r\n                            }\r\n\r\n                            {!loadingAvatar &&\r\n                              <Avatar className={classes.avatar} alt=\"Avatar\">\r\n                                <Typography className={classes.nameInitials} variant=\"h2\">{this.getNameInitials()}</Typography>\r\n                              </Avatar>\r\n                            }\r\n                          </>\r\n                        }\r\n                      </>\r\n                    }\r\n                  </Box>\r\n\r\n                  {(avatar && avatarUrl) &&\r\n                    <Button color=\"primary\" disabled={performingAction} startIcon={<CloudUploadIcon />} variant=\"contained\" onClick={this.uploadAvatar}>\r\n                      Upload\r\n                    </Button>\r\n                  }\r\n\r\n                  {(!avatar && !avatarUrl) &&\r\n                    <>\r\n                      <input\r\n                        id=\"avatar-input\"\r\n                        type=\"file\"\r\n                        hidden\r\n                        accept=\"image/*\"\r\n\r\n                        onChange={this.handleAvatarChange}\r\n                      />\r\n\r\n                      <label htmlFor=\"avatar-input\">\r\n                        <Button color=\"primary\" component=\"span\" disabled={performingAction} startIcon={<PhotoIcon />} variant=\"contained\">\r\n                          Choose...\r\n                        </Button>\r\n                      </label>\r\n                    </>\r\n                  }\r\n                </Box>\r\n              </Grid>\r\n\r\n              <Grid item xs>\r\n                <Box textAlign=\"center\">\r\n                  <Typography variant=\"body1\">Profile Completion</Typography>\r\n\r\n                  {profileCompletion === 0 &&\r\n                    <Typography color=\"error\" variant=\"h5\">{profileCompletion}%</Typography>\r\n                  }\r\n\r\n                  {profileCompletion === 100 &&\r\n                    <Typography color=\"primary\" variant=\"h5\">{profileCompletion}%</Typography>\r\n                  }\r\n\r\n                  {(profileCompletion !== 0 && profileCompletion !== 100)  &&\r\n                    <Typography color=\"secondary\" variant=\"h5\">{profileCompletion}%</Typography>\r\n                  }\r\n                </Box>\r\n              </Grid>\r\n\r\n              <Grid item xs>\r\n                <Box textAlign=\"center\">\r\n                  <Typography variant=\"body1\">Security Rating</Typography>\r\n\r\n                  {securityRating === 0 &&\r\n                    <Typography color=\"error\" variant=\"h5\">{securityRating}%</Typography>\r\n                  }\r\n\r\n                  {securityRating === 100 &&\r\n                    <Typography color=\"primary\" variant=\"h5\">{securityRating}%</Typography>\r\n                  }\r\n\r\n                  {(securityRating !== 0 && securityRating !== 100) &&\r\n                    <Typography color=\"secondary\" variant=\"h5\">{securityRating}%</Typography>\r\n                  }\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Hidden>\r\n\r\n          <Hidden smUp>\r\n            <Box textAlign=\"center\" mb={3}>\r\n              <Box mb={1.5}>\r\n                {(avatar && avatarUrl) &&\r\n                  <Badge classes={{ badge: classes.badge }} badgeContent={\r\n                    <Tooltip title=\"Remove\">\r\n                      <Fab classes={{ sizeSmall: classes.small }} color=\"secondary\" disabled={performingAction} size=\"small\" onClick={this.removeAvatar}>\r\n                        <CloseIcon fontSize=\"small\" />\r\n                      </Fab>\r\n                    </Tooltip>\r\n                  }>\r\n                    {loadingAvatar &&\r\n                      <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\r\n                        <Fade\r\n                          style={{ transitionDelay: '1s' }}\r\n                          in={loadingAvatar}\r\n                          unmountOnExit>\r\n                          <CircularProgress size={120} thickness={1.8} />\r\n                        </Fade>\r\n                      }>\r\n                        <Avatar className={classes.avatar} alt=\"Avatar\" src={avatarUrl} />\r\n                      </Badge>\r\n                    }\r\n\r\n                    {!loadingAvatar &&\r\n                      <Avatar className={classes.avatar} alt=\"Avatar\" src={avatarUrl} />\r\n                    }\r\n                  </Badge>\r\n                }\r\n\r\n                {(!avatar && !avatarUrl) &&\r\n                  <>\r\n                    {user.photoURL &&\r\n                      <Badge classes={{ badge: classes.badge }} badgeContent={\r\n                        <Tooltip title=\"Remove\">\r\n                          <Fab classes={{ sizeSmall: classes.small }} color=\"secondary\" disabled={performingAction} size=\"small\" onClick={this.removeAvatar}>\r\n                            <CloseIcon fontSize=\"small\" />\r\n                          </Fab>\r\n                        </Tooltip>\r\n                      }>\r\n                        {loadingAvatar &&\r\n                          <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\r\n                            <CircularProgress size={120} thickness={1.8} />\r\n                          }>\r\n                            <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\r\n                          </Badge>\r\n                        }\r\n\r\n                        {!loadingAvatar &&\r\n                          <Avatar className={classes.avatar} alt=\"Avatar\" src={user.photoURL} />\r\n                        }\r\n                      </Badge>\r\n                    }\r\n\r\n                    {!user.photoURL &&\r\n                      <>\r\n                        {loadingAvatar &&\r\n                          <Badge classes={{ badge: classes.loadingBadge }} badgeContent={\r\n                            <Fade\r\n                              style={{ transitionDelay: '1s' }}\r\n                              in={loadingAvatar}\r\n                              unmountOnExit>\r\n                              <CircularProgress size={120} thickness={1.8} />\r\n                            </Fade>\r\n                          }>\r\n                            <Avatar className={classes.avatar} alt=\"Avatar\">\r\n                              <Typography className={classes.nameInitials} variant=\"h2\">{this.getNameInitials()}</Typography>\r\n                            </Avatar>\r\n                          </Badge>\r\n                        }\r\n\r\n                        {!loadingAvatar &&\r\n                          <Avatar className={classes.avatar} alt=\"Avatar\">\r\n                            <Typography className={classes.nameInitials} variant=\"h2\">{this.getNameInitials()}</Typography>\r\n                          </Avatar>\r\n                        }\r\n                      </>\r\n                    }\r\n                  </>\r\n                }\r\n              </Box>\r\n\r\n              {(avatar && avatarUrl) &&\r\n                <Button color=\"primary\" disabled={performingAction} startIcon={<CloudUploadIcon />} variant=\"contained\" onClick={this.uploadAvatar}>\r\n                  Upload\r\n                </Button>\r\n              }\r\n\r\n              {(!avatar && !avatarUrl) &&\r\n                <>\r\n                  <input\r\n                    id=\"avatar-input\"\r\n                    type=\"file\"\r\n                    hidden\r\n                    accept=\"image/*\"\r\n\r\n                    onChange={this.handleAvatarChange}\r\n                  />\r\n\r\n                  <label htmlFor=\"avatar-input\">\r\n                    <Button color=\"primary\" component=\"span\" disabled={performingAction} startIcon={<PhotoIcon />} variant=\"contained\">\r\n                      Choose...\r\n                    </Button>\r\n                  </label>\r\n                </>\r\n              }\r\n            </Box>\r\n\r\n            <Grid container>\r\n              <Grid item xs>\r\n                <Box textAlign=\"center\">\r\n                  <Typography variant=\"body1\">Profile Completion</Typography>\r\n\r\n                  {profileCompletion === 0 &&\r\n                    <Typography color=\"error\" variant=\"h5\">{profileCompletion}%</Typography>\r\n                  }\r\n\r\n                  {profileCompletion === 100 &&\r\n                    <Typography color=\"primary\" variant=\"h5\">{profileCompletion}%</Typography>\r\n                  }\r\n\r\n                  {(profileCompletion !== 0 && profileCompletion !== 100)  &&\r\n                    <Typography color=\"secondary\" variant=\"h5\">{profileCompletion}%</Typography>\r\n                  }\r\n                </Box>\r\n              </Grid>\r\n\r\n              <Grid item xs>\r\n                <Box textAlign=\"center\">\r\n                  <Typography variant=\"body1\">Security Rating</Typography>\r\n\r\n                  {securityRating === 0 &&\r\n                    <Typography color=\"error\" variant=\"h5\">{securityRating}%</Typography>\r\n                  }\r\n\r\n                  {securityRating === 100 &&\r\n                    <Typography color=\"primary\" variant=\"h5\">{securityRating}%</Typography>\r\n                  }\r\n\r\n                  {(securityRating !== 0 && securityRating !== 100) &&\r\n                    <Typography color=\"secondary\" variant=\"h5\">{securityRating}%</Typography>\r\n                  }\r\n                </Box>\r\n              </Grid>\r\n            </Grid>\r\n          </Hidden>\r\n        </Box>\r\n\r\n        <List disablePadding>\r\n          <ListItem>\r\n            <Hidden xsDown>\r\n              <ListItemIcon>\r\n                <PersonIcon />\r\n              </ListItemIcon>\r\n            </Hidden>\r\n\r\n            {!userData.firstName &&\r\n              <ListItemIcon>\r\n                <Tooltip title=\"No first name\">\r\n                  <WarningIcon color=\"error\" />\r\n                </Tooltip>\r\n              </ListItemIcon>\r\n            }\r\n\r\n            {showingField === 'first-name' &&\r\n              <TextField\r\n                autoComplete=\"given-name\"\r\n                autoFocus\r\n                disabled={performingAction}\r\n                error={!!(errors && errors.firstName)}\r\n                fullWidth\r\n                helperText={(errors && errors.firstName) ? errors.firstName[0] : 'Press Enter to change your first name'}\r\n                label=\"First name\"\r\n                placeholder={userData.firstName}\r\n                required\r\n                type=\"text\"\r\n                value={firstName}\r\n                variant=\"filled\"\r\n\r\n                onBlur={this.hideFields}\r\n                onKeyDown={(event) => this.handleKeyDown(event, 'first-name')}\r\n\r\n                onChange={this.handleFirstNameChange}\r\n              />\r\n            }\r\n\r\n            {showingField !== 'first-name' &&\r\n              <>\r\n                <ListItemText\r\n                  primary=\"First name\"\r\n                  secondary={userData.firstName ? userData.firstName : 'You don’t have a first name'}\r\n                />\r\n\r\n                <ListItemSecondaryAction>\r\n                  {userData.firstName &&\r\n                    <Tooltip title=\"Change\">\r\n                      <div>\r\n                        <IconButton disabled={performingAction} onClick={() => this.showField('first-name')}>\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                      </div>\r\n                    </Tooltip>\r\n                  }\r\n\r\n                  {!userData.firstName &&\r\n                    <Button\r\n                      color=\"primary\"\r\n                      disabled={performingAction}\r\n                      variant=\"contained\"\r\n                      onClick={() => this.showField('first-name')}>\r\n                      Add\r\n                    </Button>\r\n                  }\r\n                </ListItemSecondaryAction>\r\n              </>\r\n            }\r\n          </ListItem>\r\n\r\n          <ListItem>\r\n            <Hidden xsDown>\r\n              <ListItemIcon>\r\n                <PersonIcon />\r\n              </ListItemIcon>\r\n            </Hidden>\r\n\r\n            {!userData.lastName &&\r\n              <ListItemIcon>\r\n                <Tooltip title=\"No last name\">\r\n                  <WarningIcon color=\"error\" />\r\n                </Tooltip>\r\n              </ListItemIcon>\r\n            }\r\n\r\n            {showingField === 'last-name' &&\r\n              <TextField\r\n                autoComplete=\"family-name\"\r\n                autoFocus\r\n                disabled={performingAction}\r\n                error={!!(errors && errors.lastName)}\r\n                fullWidth\r\n                helperText={(errors && errors.lastName) ? errors.lastName[0] : 'Press Enter to change your last name'}\r\n                label=\"Last name\"\r\n                placeholder={userData.lastName}\r\n                required\r\n                type=\"text\"\r\n                value={lastName}\r\n                variant=\"filled\"\r\n\r\n                onBlur={this.hideFields}\r\n                onKeyDown={(event) => this.handleKeyDown(event, 'last-name')}\r\n\r\n                onChange={this.handleLastNameChange}\r\n              />\r\n            }\r\n\r\n            {showingField !== 'last-name' &&\r\n              <>\r\n                <ListItemText\r\n                  primary=\"Last name\"\r\n                  secondary={userData.lastName ? userData.lastName : 'You don’t have a last name'}\r\n                />\r\n\r\n                <ListItemSecondaryAction>\r\n                  {userData.lastName &&\r\n                    <Tooltip title=\"Change\">\r\n                      <div>\r\n                        <IconButton disabled={performingAction} onClick={() => this.showField('last-name')}>\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                      </div>\r\n                    </Tooltip>\r\n                  }\r\n\r\n                  {!userData.lastName &&\r\n                    <Button\r\n                      color=\"primary\"\r\n                      disabled={performingAction}\r\n                      variant=\"contained\"\r\n                      onClick={() => this.showField('last-name')}>\r\n                      Add\r\n                    </Button>\r\n                  }\r\n                </ListItemSecondaryAction>\r\n              </>\r\n            }\r\n          </ListItem>\r\n\r\n          <ListItem>\r\n            <Hidden xsDown>\r\n              <ListItemIcon>\r\n                <PersonOutlineIcon />\r\n              </ListItemIcon>\r\n            </Hidden>\r\n\r\n            {!userData.username &&\r\n              <ListItemIcon>\r\n                <Tooltip title=\"No username\">\r\n                  <WarningIcon color=\"error\" />\r\n                </Tooltip>\r\n              </ListItemIcon>\r\n            }\r\n\r\n            {showingField === 'username' &&\r\n              <TextField\r\n                autoComplete=\"username\"\r\n                autoFocus\r\n                disabled={performingAction}\r\n                error={!!(errors && errors.username)}\r\n                fullWidth\r\n                helperText={(errors && errors.username) ? errors.username[0] : 'Press Enter to change your username'}\r\n                label=\"Username\"\r\n                placeholder={userData.username}\r\n                required\r\n                type=\"text\"\r\n                value={username}\r\n                variant=\"filled\"\r\n\r\n                onBlur={this.hideFields}\r\n                onKeyDown={(event) => this.handleKeyDown(event, 'username')}\r\n\r\n                onChange={this.handleUsernameChange}\r\n              />\r\n            }\r\n\r\n            {showingField !== 'username' &&\r\n              <>\r\n                <ListItemText\r\n                  primary=\"Username\"\r\n                  secondary={userData.username ? userData.username : 'You don’t have a username'}\r\n                />\r\n\r\n                <ListItemSecondaryAction>\r\n                  {userData.username &&\r\n                    <Tooltip title=\"Change\">\r\n                      <div>\r\n                        <IconButton disabled={performingAction} onClick={() => this.showField('username')}>\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                      </div>\r\n                    </Tooltip>\r\n                  }\r\n\r\n                  {!userData.username &&\r\n                    <Button\r\n                      color=\"primary\"\r\n                      disabled={performingAction}\r\n                      variant=\"contained\"\r\n                      onClick={() => this.showField('username')}>\r\n                      Add\r\n                    </Button>\r\n                  }\r\n                </ListItemSecondaryAction>\r\n              </>\r\n            }\r\n          </ListItem>\r\n\r\n          <ListItem>\r\n            <Hidden xsDown>\r\n              <ListItemIcon>\r\n                <EmailIcon />\r\n              </ListItemIcon>\r\n            </Hidden>\r\n\r\n            {user.email &&\r\n              <ListItemIcon>\r\n                <>\r\n                  {user.emailVerified &&\r\n                    <Tooltip title=\"Verified\">\r\n                      <CheckIcon color=\"primary\" />\r\n                    </Tooltip>\r\n                  }\r\n\r\n                  {!user.emailVerified &&\r\n                    <Tooltip title=\"Not verified\">\r\n                      <WarningIcon color=\"error\" />\r\n                    </Tooltip>\r\n                  }\r\n                </>\r\n              </ListItemIcon>\r\n            }\r\n\r\n            {!user.email &&\r\n              <ListItemIcon>\r\n                <Tooltip title=\"No e-mail address\">\r\n                  <WarningIcon color=\"error\" />\r\n                </Tooltip>\r\n              </ListItemIcon>\r\n            }\r\n\r\n            {showingField === 'email-address' &&\r\n              <TextField\r\n                autoComplete=\"email\"\r\n                autoFocus\r\n                disabled={performingAction}\r\n                error={!!(errors && errors.emailAddress)}\r\n                fullWidth\r\n                helperText={(errors && errors.emailAddress) ? errors.emailAddress[0] : 'Press Enter to change your e-mail address'}\r\n                label=\"E-mail address\"\r\n                placeholder={user.email}\r\n                required\r\n                type=\"email\"\r\n                value={emailAddress}\r\n                variant=\"filled\"\r\n\r\n                onBlur={this.hideFields}\r\n                onKeyDown={(event) => this.handleKeyDown(event, 'email-address')}\r\n\r\n                onChange={this.handleEmailAddressChange}\r\n              />\r\n            }\r\n\r\n            {showingField !== 'email-address' &&\r\n              <>\r\n                <ListItemText\r\n                  primary=\"E-mail address\"\r\n                  secondary={user.email ? user.email : 'You don’t have an e-mail address'}\r\n                />\r\n\r\n                {(user.email && !user.emailVerified) &&\r\n                  <Box clone mr={7}>\r\n                    <ListItemSecondaryAction>\r\n                      <Tooltip title=\"Verify\">\r\n                        <div>\r\n                          <IconButton color=\"secondary\" disabled={performingAction || sentVerificationEmail} onClick={this.verifyEmailAddress}>\r\n                            <CheckIcon />\r\n                          </IconButton>\r\n                        </div>\r\n                      </Tooltip>\r\n                    </ListItemSecondaryAction>\r\n                  </Box>\r\n                }\r\n\r\n                <ListItemSecondaryAction>\r\n                  {user.email &&\r\n                    <Tooltip title=\"Change\">\r\n                      <div>\r\n                        <IconButton disabled={performingAction} onClick={() => this.showField('email-address')}>\r\n                          <EditIcon />\r\n                        </IconButton>\r\n                      </div>\r\n                    </Tooltip>\r\n                  }\r\n\r\n                  {!user.email &&\r\n                    <Button\r\n                      color=\"primary\"\r\n                      disabled={performingAction}\r\n                      variant=\"contained\"\r\n                      onClick={() => this.showField('email-address')}>\r\n                      Add\r\n                    </Button>\r\n                  }\r\n                </ListItemSecondaryAction>\r\n              </>\r\n            }\r\n          </ListItem>\r\n\r\n          <ListItem>\r\n            <Hidden xsDown>\r\n              <ListItemIcon>\r\n                <AccessTimeIcon />\r\n              </ListItemIcon>\r\n            </Hidden>\r\n\r\n            <Hidden xsDown>\r\n              <ListItemText\r\n                primary=\"Signed in\"\r\n                secondary={moment(user.metadata.lastSignInTime).format('LLLL')}\r\n              />\r\n            </Hidden>\r\n\r\n            <Hidden smUp>\r\n              <ListItemText\r\n                primary=\"Signed in\"\r\n                secondary={moment(user.metadata.lastSignInTime).format('llll')}\r\n              />\r\n            </Hidden>\r\n          </ListItem>\r\n\r\n          <Box mt={1} mb={1}>\r\n            <Divider light />\r\n          </Box>\r\n\r\n          <ListItem>\r\n            <Hidden xsDown>\r\n              <ListItemIcon>\r\n                <DeleteForeverIcon />\r\n              </ListItemIcon>\r\n            </Hidden>\r\n\r\n            <ListItemText\r\n              primary=\"Delete account\"\r\n              secondary=\"Accounts can’t be recovered\"\r\n            />\r\n\r\n            <ListItemSecondaryAction>\r\n              <Button color=\"secondary\" disabled={performingAction} variant=\"contained\" onClick={onDeleteAccountClick}>Delete</Button>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        </List>\r\n      </DialogContent>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.calculateProfileCompletion();\r\n    this.calculateSecurityRating();\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    const { avatarUrl } = this.state;\r\n\r\n    if (avatarUrl) {\r\n      URL.revokeObjectURL(avatarUrl);\r\n\r\n      this.setState({\r\n        avatarUrl: ''\r\n      });\r\n    }\r\n  }\r\n}\r\n\r\nAccountTab.propTypes = {\r\n  // Styling\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  // Properties\r\n  user: PropTypes.object.isRequired,\r\n  userData: PropTypes.object.isRequired,\r\n\r\n  // Functions\r\n  openSnackbar: PropTypes.func.isRequired,\r\n\r\n  // Events\r\n  onDeleteAccountClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(AccountTab);\r\n","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nimport Box from '@material-ui/core/Box';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport Select from '@material-ui/core/Select';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nimport FiberManualRecord from '@material-ui/icons/FiberManualRecord';\r\nimport InvertColorsIcon from '@material-ui/icons/InvertColors';\r\nimport FormatColorResetIcon from '@material-ui/icons/FormatColorReset';\r\n\r\nimport theming from '../../services/theming';\r\n\r\nclass AppearanceTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      performingAction: false\r\n    };\r\n  }\r\n\r\n  handlePrimaryColorChange = (event) => {\r\n    if (!event) {\r\n      return;\r\n    }\r\n\r\n    const primaryColor = event.target.value;\r\n\r\n    if (!primaryColor) {\r\n      return;\r\n    }\r\n\r\n    const { theme } = this.props;\r\n\r\n    if (!theme) {\r\n      return;\r\n    }\r\n\r\n    if (theme.primaryColor.id === primaryColor) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      performingAction: true\r\n    }, () => {\r\n      theming.changeTheme({\r\n        primaryColor: primaryColor,\r\n        secondaryColor: theme.secondaryColor.id,\r\n        type: theme.type.id\r\n      }).then((value) => {\r\n        this.props.openSnackbar('Changed primary color');\r\n      }).catch((reason) => {\r\n        const code = reason.code;\r\n        const message = reason.message;\r\n\r\n        switch (code) {\r\n          default:\r\n            this.props.openSnackbar(message);\r\n            return;\r\n        }\r\n      }).finally(() => {\r\n        this.setState({\r\n          performingAction: false\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  handleSecondaryColorChange = (event) => {\r\n    if (!event) {\r\n      return;\r\n    }\r\n\r\n    const secondaryColor = event.target.value;\r\n\r\n    if (!secondaryColor) {\r\n      return;\r\n    }\r\n\r\n    const { theme } = this.props;\r\n\r\n    if (!theme) {\r\n      return;\r\n    }\r\n\r\n    if (theme.secondaryColor.id === secondaryColor) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      performingAction: true\r\n    }, () => {\r\n      theming.changeTheme({\r\n        primaryColor: theme.primaryColor.id,\r\n        secondaryColor: secondaryColor,\r\n        type: theme.type.id\r\n      }).then((value) => {\r\n        this.props.openSnackbar('Changed secondary color');\r\n      }).catch((reason) => {\r\n        const code = reason.code;\r\n        const message = reason.message;\r\n\r\n        switch (code) {\r\n          default:\r\n            this.props.openSnackbar(message);\r\n            return;\r\n        }\r\n      }).finally(() => {\r\n        this.setState({\r\n          performingAction: false\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  handleTypeChange = (event) => {\r\n    if (!event) {\r\n      return;\r\n    }\r\n\r\n    const type = event.target.value;\r\n\r\n    if (!type) {\r\n      return;\r\n    }\r\n\r\n    const { theme } = this.props;\r\n\r\n    if (!theme) {\r\n      return;\r\n    }\r\n\r\n    if (theme.type.id === type) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      performingAction: true\r\n    }, () => {\r\n      theming.changeTheme({\r\n        primaryColor: theme.primaryColor.id,\r\n        secondaryColor: theme.secondaryColor.id,\r\n        type: type\r\n      }).then((value) => {\r\n        this.props.openSnackbar('Changed type');\r\n      }).catch((reason) => {\r\n        const code = reason.code;\r\n        const message = reason.message;\r\n\r\n        switch (code) {\r\n          default:\r\n            this.props.openSnackbar(message);\r\n            return;\r\n        }\r\n      }).finally(() => {\r\n        this.setState({\r\n          performingAction: false\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  handleResetClick = () => {\r\n    const { theme } = this.props;\r\n\r\n    if (!theme) {\r\n      return;\r\n    }\r\n\r\n    if (theming.isDefaultTheme(theme)) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      performingAction: true\r\n    }, () => {\r\n      theming.resetTheme().then((value) => {\r\n        this.props.openSnackbar('Reset theme');\r\n      }).catch((reason) => {\r\n        const code = reason.code;\r\n        const message = reason.message;\r\n\r\n        switch (code) {\r\n          default:\r\n            this.props.openSnackbar(message);\r\n            return;\r\n        }\r\n      }).finally(() => {\r\n        this.setState({\r\n          performingAction: false\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // Properties\r\n    const { theme } = this.props;\r\n\r\n    if (!theme) {\r\n      return null;\r\n    }\r\n\r\n    const { performingAction } = this.state;\r\n\r\n    return (\r\n      <DialogContent>\r\n        <List disablePadding>\r\n          <Box mb={1}>\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <FiberManualRecord color=\"primary\" />\r\n              </ListItemIcon>\r\n\r\n              <FormControl disabled={performingAction} fullWidth>\r\n                <InputLabel>Primary color</InputLabel>\r\n\r\n                <Hidden smUp>\r\n                  <Select\r\n                    native\r\n                    value={theme.primaryColor.id}\r\n\r\n                    onChange={this.handlePrimaryColorChange}>\r\n                    {Object.keys(theming.colors).map((color) => {\r\n                      color = theming.colors[color];\r\n\r\n                      return (\r\n                        <option key={color.id} value={color.id}>{color.name}</option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </Hidden>\r\n\r\n                <Hidden xsDown>\r\n                  <Select\r\n                    value={theme.primaryColor.id}\r\n\r\n                    onChange={this.handlePrimaryColorChange}>\r\n                    {Object.keys(theming.colors).map((color) => {\r\n                      color = theming.colors[color];\r\n\r\n                      return (\r\n                        <MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </Hidden>\r\n              </FormControl>\r\n            </ListItem>\r\n          </Box>\r\n\r\n          <Box mb={1}>\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <FiberManualRecord color=\"secondary\" />\r\n              </ListItemIcon>\r\n\r\n              <FormControl disabled={performingAction} fullWidth>\r\n                <InputLabel>Secondary color</InputLabel>\r\n\r\n                <Hidden smUp>\r\n                  <Select\r\n                    native\r\n                    value={theme.secondaryColor.id}\r\n\r\n                    onChange={this.handleSecondaryColorChange}>\r\n                    {Object.keys(theming.colors).map((color) => {\r\n                      color = theming.colors[color];\r\n\r\n                      return (\r\n                        <option key={color.id} value={color.id}>{color.name}</option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </Hidden>\r\n\r\n                <Hidden xsDown>\r\n                  <Select\r\n                    value={theme.secondaryColor.id}\r\n\r\n                    onChange={this.handleSecondaryColorChange}>\r\n                    {Object.keys(theming.colors).map((color) => {\r\n                      color = theming.colors[color];\r\n\r\n                      return (\r\n                        <MenuItem key={color.id} value={color.id}>{color.name}</MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </Hidden>\r\n              </FormControl>\r\n            </ListItem>\r\n          </Box>\r\n\r\n          <Box mb={1}>\r\n            <ListItem>\r\n              <ListItemIcon>\r\n                <InvertColorsIcon />\r\n              </ListItemIcon>\r\n\r\n              <FormControl disabled={performingAction} fullWidth>\r\n                <InputLabel>Type</InputLabel>\r\n\r\n                <Hidden smUp>\r\n                  <Select\r\n                    native\r\n                    value={theme.type.id}\r\n\r\n                    onChange={this.handleTypeChange}>\r\n                    {Object.keys(theming.types).map((type) => {\r\n                      type = theming.types[type];\r\n\r\n                      return (\r\n                        <option key={type.id} value={type.id}>{type.name}</option>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </Hidden>\r\n\r\n                <Hidden xsDown>\r\n                  <Select\r\n                    value={theme.type.id}\r\n\r\n                    onChange={this.handleTypeChange}>\r\n                    {Object.keys(theming.types).map((type) => {\r\n                      type = theming.types[type];\r\n\r\n                      return (\r\n                        <MenuItem key={type.id} value={type.id}>{type.name}</MenuItem>\r\n                      );\r\n                    })}\r\n                  </Select>\r\n                </Hidden>\r\n              </FormControl>\r\n            </ListItem>\r\n          </Box>\r\n\r\n          <Box mt={2} mb={1}>\r\n            <Divider light />\r\n          </Box>\r\n\r\n          <ListItem>\r\n            <Hidden xsDown>\r\n              <ListItemIcon>\r\n                <FormatColorResetIcon />\r\n              </ListItemIcon>\r\n            </Hidden>\r\n\r\n            <ListItemText\r\n              primary=\"Reset theme\"\r\n              secondary=\"Changes will be reset\"\r\n            />\r\n\r\n            <ListItemSecondaryAction>\r\n              <Button\r\n                color=\"secondary\"\r\n                disabled={theming.isDefaultTheme(theme) || performingAction}\r\n                variant=\"contained\"\r\n\r\n                onClick={this.handleResetClick}>\r\n                Reset\r\n              </Button>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        </List>\r\n      </DialogContent>\r\n    )\r\n  }\r\n}\r\n\r\nAppearanceTab.propTypes = {\r\n  // Properties\r\n  theme: PropTypes.object.isRequired,\r\n\r\n  // Functions\r\n  openSnackbar: PropTypes.func.isRequired\r\n};\r\n\r\nexport default AppearanceTab;\r\n","import React, { Component } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\nimport Box from '@material-ui/core/Box';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport LinkOffIcon from '@material-ui/icons/LinkOff';\r\n\r\nimport FacebookBoxIcon from 'mdi-material-ui/FacebookBox';\r\nimport GitHubCircleIcon from 'mdi-material-ui/GithubCircle';\r\nimport GoogleIcon from 'mdi-material-ui/Google';\r\nimport MicrosoftIcon from 'mdi-material-ui/Microsoft';\r\nimport TwitterIcon from 'mdi-material-ui/Twitter';\r\nimport YahooIcon from 'mdi-material-ui/Yahoo';\r\n\r\nimport authentication from '../../services/authentication';\r\n\r\nclass LinksTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      performingAction: false\r\n    };\r\n  }\r\n\r\n\r\n  linkAuthProvider = (authProvider) => {\r\n    this.setState({\r\n      performingAction: true\r\n    }, () => {\r\n      authentication.linkAuthProvider(authProvider.providerId).then((value) => {\r\n        this.props.openSnackbar(`${authProvider.name} linked`, 5);\r\n      }).catch((reason) => {\r\n        const code = reason.code;\r\n        const message = reason.message;\r\n\r\n        switch (code) {\r\n          default:\r\n            this.props.openSnackbar(message);\r\n            return;\r\n        }\r\n      }).finally(() => {\r\n        this.setState({\r\n          performingAction: false\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  unlinkAuthProvider = (authProvider) => {\r\n    this.setState({\r\n      performingAction: true\r\n    }, () => {\r\n      authentication.unlinkAuthProvider(authProvider.providerId).then((value) => {\r\n        this.props.openSnackbar(`${authProvider.name} unlinked`, 4);\r\n      }).catch((reason) => {\r\n        const code = reason.code;\r\n        const message = reason.message;\r\n\r\n        switch (code) {\r\n          default:\r\n            this.props.openSnackbar(message);\r\n            return;\r\n        }\r\n      }).finally(() => {\r\n        this.setState({\r\n          performingAction: false\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // Properties\r\n    const { theme } = this.props;\r\n\r\n    const { performingAction } = this.state;\r\n\r\n    const authProviders = [\r\n      {\r\n        providerId: 'facebook.com',\r\n        color: '#3c5a99',\r\n        icon: <FacebookBoxIcon />,\r\n        name: 'Facebook'\r\n      },\r\n      {\r\n        providerId: 'github.com',\r\n        color: '#24292e',\r\n        icon: <GitHubCircleIcon />,\r\n        name: 'GitHub'\r\n      },\r\n      {\r\n        providerId: 'google.com',\r\n        color: '#4285f4',\r\n        icon: <GoogleIcon />,\r\n        name: 'Google'\r\n      },\r\n      {\r\n        providerId: 'microsoft.com',\r\n        color: '#f65314',\r\n        icon: <MicrosoftIcon />,\r\n        name: 'Microsoft'\r\n      },\r\n      {\r\n        providerId: 'twitter.com',\r\n        color: '#1da1f2',\r\n        icon: <TwitterIcon />,\r\n        name: 'Twitter'\r\n      },\r\n      {\r\n        providerId: 'yahoo.com',\r\n        color: '#410093',\r\n        icon: <YahooIcon />,\r\n        name: 'Yahoo'\r\n      }\r\n    ];\r\n\r\n    return (\r\n      <DialogContent>\r\n        <List disablePadding>\r\n          {authProviders.map((authProvider) => {\r\n            const authProviderData = authentication.authProviderData(authProvider.providerId);\r\n            let identifier = null;\r\n\r\n            if (authProviderData) {\r\n              const displayName = authProviderData.displayName;\r\n              const emailAddress = authProviderData.email;\r\n              const phoneNumber = authProviderData.phoneNumber;\r\n\r\n              identifier = displayName || emailAddress || phoneNumber;\r\n            }\r\n\r\n            return (\r\n              <ListItem key={authProvider.providerId}>\r\n                <ListItemIcon>\r\n                  <Box color={theme.type.id === 'light' ? authProvider.color : null}>\r\n                    {authProvider.icon}\r\n                  </Box>\r\n                </ListItemIcon>\r\n\r\n                {authProviderData &&\r\n                  <ListItemText\r\n                    primary={authProvider.name}\r\n                    secondary={identifier}\r\n                  />\r\n                }\r\n\r\n                {!authProviderData &&\r\n                  <ListItemText\r\n                    primary={authProvider.name}\r\n                  />\r\n                }\r\n\r\n                <ListItemSecondaryAction>\r\n                  {authProviderData &&\r\n                    <Tooltip title=\"Unlink\">\r\n                      <div>\r\n                        <IconButton disabled={performingAction} onClick={() => this.unlinkAuthProvider(authProvider)}>\r\n                          <LinkOffIcon />\r\n                        </IconButton>\r\n                      </div>\r\n                    </Tooltip>\r\n                  }\r\n\r\n                  {!authProviderData &&\r\n                    <Tooltip title=\"Link\">\r\n                      <div>\r\n                        <IconButton disabled={performingAction} onClick={() => this.linkAuthProvider(authProvider)}>\r\n                          <LinkIcon />\r\n                        </IconButton>\r\n                      </div>\r\n                    </Tooltip>\r\n                  }\r\n                </ListItemSecondaryAction>\r\n              </ListItem>\r\n            );\r\n          })}\r\n        </List>\r\n      </DialogContent>\r\n    )\r\n  }\r\n}\r\n\r\nLinksTab.propTypes = {\r\n  // Properties\r\n  theme: PropTypes.object.isRequired,\r\n\r\n  // Functions\r\n  openSnackbar: PropTypes.func.isRequired\r\n};\r\n\r\nexport default LinksTab;\r\n","import React, { Component } from 'react'\r\n\r\nimport PropTypes from 'prop-types'\r\n\r\nimport validate from 'validate.js';\r\nimport moment from 'moment';\r\n\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\n\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\n\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nimport constraints from '../../constraints';\r\nimport authentication from '../../services/authentication';\r\n\r\nconst initialState = {\r\n  showingField: '',\r\n\r\n  password: '',\r\n  passwordConfirmation: '',\r\n\r\n  performingAction: false,\r\n\r\n  errors: null\r\n};\r\n\r\nclass SecurityTab extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = initialState;\r\n  }\r\n\r\n  showField = (fieldId) => {\r\n    if (!fieldId) {\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      showingField: fieldId\r\n    });\r\n  };\r\n\r\n  hideFields = (callback) => {\r\n    this.setState({\r\n      showingField: '',\r\n\r\n      password: '',\r\n      passwordConfirmation: '',\r\n\r\n      errors: null\r\n    }, () => {\r\n      if (callback && typeof callback === 'function') {\r\n        callback();\r\n      }\r\n    });\r\n  };\r\n\r\n  changeField = (fieldId) => {\r\n    switch (fieldId) {\r\n      case 'password':\r\n        const { password } = this.state;\r\n\r\n        const errors = validate({\r\n          password: password\r\n        }, {\r\n          password: constraints.password\r\n        });\r\n\r\n        if (errors) {\r\n          this.setState({\r\n            errors: errors\r\n          });\r\n\r\n          return;\r\n        }\r\n\r\n        this.setState({\r\n          errors: null\r\n        }, () => {\r\n          this.showField('password-confirmation');\r\n        });\r\n        return;\r\n\r\n      case 'password-confirmation':\r\n        this.changePassword();\r\n        return;\r\n\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  changePassword = () => {\r\n    const { password, passwordConfirmation } = this.state;\r\n\r\n    const errors = validate({\r\n      password: password,\r\n      passwordConfirmation: passwordConfirmation\r\n    }, {\r\n      password: constraints.password,\r\n      passwordConfirmation: constraints.passwordConfirmation\r\n    });\r\n\r\n    if (errors) {\r\n      this.setState({\r\n        errors: errors\r\n      });\r\n\r\n      return;\r\n    }\r\n\r\n    this.setState({\r\n      errors: null\r\n    }, () => {\r\n      this.setState({\r\n        performingAction: true\r\n      }, () => {\r\n        authentication.changePassword(password).then(() => {\r\n          this.hideFields(() => {\r\n            this.props.openSnackbar('Changed password');\r\n          });\r\n        }).catch((reason) => {\r\n          const code = reason.code;\r\n          const message = reason.message;\r\n\r\n          switch (code) {\r\n            default:\r\n              this.props.openSnackbar(message);\r\n              return;\r\n          }\r\n        }).finally(() => {\r\n          this.setState({\r\n            performingAction: false\r\n          });\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  handleKeyDown = (event, fieldId) => {\r\n    if (!event || !fieldId) {\r\n      return;\r\n    }\r\n\r\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\r\n      return;\r\n    }\r\n\r\n    const key = event.key;\r\n\r\n    if (!key) {\r\n      return;\r\n    }\r\n\r\n    if (key === 'Escape') {\r\n      this.hideFields();\r\n    } else if (key === 'Enter') {\r\n      this.changeField(fieldId);\r\n    }\r\n  };\r\n\r\n  handlePasswordChange = (event) => {\r\n    if (!event) {\r\n      return;\r\n    }\r\n\r\n    const password = event.target.value;\r\n\r\n    this.setState({\r\n      password: password\r\n    });\r\n  };\r\n\r\n  handlePasswordConfirmationChange = (event) => {\r\n    if (!event) {\r\n      return;\r\n    }\r\n\r\n    const passwordConfirmation = event.target.value;\r\n\r\n    this.setState({\r\n      passwordConfirmation: passwordConfirmation\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // Properties\r\n    const { userData } = this.props;\r\n\r\n    const {\r\n      showingField,\r\n\r\n      password,\r\n      passwordConfirmation,\r\n\r\n      performingAction,\r\n\r\n      errors\r\n    } = this.state;\r\n\r\n    return (\r\n      <DialogContent>\r\n        <List disablePadding>\r\n          <ListItem>\r\n            <Hidden xsDown>\r\n              <ListItemIcon>\r\n                <LockIcon />\r\n              </ListItemIcon>\r\n            </Hidden>\r\n\r\n            {showingField === 'password' &&\r\n              <TextField\r\n                autoComplete=\"new-password\"\r\n                autoFocus\r\n                disabled={performingAction}\r\n                error={!!(errors && errors.password)}\r\n                fullWidth\r\n                helperText={(errors && errors.password) ? errors.password[0] : 'Press Enter to change your password'}\r\n                label=\"Password\"\r\n                required\r\n                type=\"password\"\r\n                value={password}\r\n                variant=\"filled\"\r\n\r\n                onBlur={this.hideFields}\r\n                onKeyDown={(event) => this.handleKeyDown(event, 'password')}\r\n\r\n                onChange={this.handlePasswordChange}\r\n              />\r\n            }\r\n\r\n            {showingField === 'password-confirmation' &&\r\n              <TextField\r\n                autoComplete=\"new-password\"\r\n                autoFocus\r\n                disabled={performingAction}\r\n                error={!!(errors && errors.passwordConfirmation)}\r\n                fullWidth\r\n                helperText={(errors && errors.passwordConfirmation) ? errors.passwordConfirmation[0] : 'Press Enter to change your password'}\r\n                label=\"Password confirmation\"\r\n                required\r\n                type=\"password\"\r\n                value={passwordConfirmation}\r\n                variant=\"filled\"\r\n\r\n                onBlur={this.hideFields}\r\n                onKeyDown={(event) => this.handleKeyDown(event, 'password-confirmation')}\r\n\r\n                onChange={this.handlePasswordConfirmationChange}\r\n              />\r\n            }\r\n\r\n            {(showingField !== 'password' && showingField !== 'password-confirmation') &&\r\n              <>\r\n                <Hidden xsDown>\r\n                  <ListItemText\r\n                    primary=\"Password\"\r\n                    secondary={userData.lastPasswordChange ? `Last changed ${moment(userData.lastPasswordChange.toDate()).format('LL')}` : 'Never changed'}\r\n                  />\r\n                </Hidden>\r\n\r\n                <Hidden smUp>\r\n                  <ListItemText\r\n                    primary=\"Password\"\r\n                    secondary={userData.lastPasswordChange ? `Last changed ${moment(userData.lastPasswordChange.toDate()).format('ll')}` : 'Never changed'}\r\n                  />\r\n                </Hidden>\r\n\r\n                <ListItemSecondaryAction>\r\n                  <Tooltip title=\"Change\">\r\n                    <div>\r\n                      <IconButton disabled={performingAction} onClick={() => this.showField('password')}>\r\n                        <EditIcon />\r\n                      </IconButton>\r\n                    </div>\r\n                  </Tooltip>\r\n                </ListItemSecondaryAction>\r\n              </>\r\n            }\r\n          </ListItem>\r\n        </List>\r\n      </DialogContent>\r\n    )\r\n  }\r\n}\r\n\r\nSecurityTab.propTypes = {\r\n  // Properties\r\n  userData: PropTypes.object.isRequired,\r\n\r\n  // Functions\r\n  openSnackbar: PropTypes.func.isRequired\r\n};\r\n\r\nexport default SecurityTab;\r\n","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\n\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport IconButton from '@material-ui/core/IconButton';\r\n\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\n\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport PaletteIcon from '@material-ui/icons/Palette';\r\nimport LinkIcon from '@material-ui/icons/Link';\r\nimport SecurityIcon from '@material-ui/icons/Security';\r\n\r\nimport SwipeableViews from 'react-swipeable-views';\r\n\r\nimport AccountTab from '../AccountTab';\r\nimport AppearanceTab from '../AppearanceTab';\r\nimport LinksTab from '../LinksTab';\r\nimport SecurityTab from '../SecurityTab';\r\n\r\nconst styles = (theme) => ({\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1)\r\n  },\r\n\r\n  tabs: {\r\n    display: 'initial'\r\n  }\r\n});\r\n\r\nconst tabs = [\r\n  {\r\n    key: 'account',\r\n    icon: <AccountCircleIcon />,\r\n    label: 'Account'\r\n  },\r\n\r\n  {\r\n    key: 'appearance',\r\n    icon: <PaletteIcon />,\r\n    label: 'Appearance'\r\n  },\r\n\r\n  {\r\n    key: 'links',\r\n    icon: <LinkIcon />,\r\n    label: 'Links'\r\n  },\r\n\r\n  {\r\n    key: 'security',\r\n    icon: <SecurityIcon />,\r\n    label: 'Security'\r\n  }\r\n];\r\n\r\nclass SettingsDialog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      selectedTab: 0\r\n    };\r\n  }\r\n\r\n  handleTabChange = (event, value) => {\r\n    this.setState({\r\n      selectedTab: value\r\n    });\r\n  };\r\n\r\n  handleIndexChange = (index) => {\r\n    this.setState({\r\n      selectedTab: index\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // Styling\r\n    const { classes } = this.props;\r\n\r\n    // Dialog Properties\r\n    const { dialogProps } = this.props;\r\n\r\n    // Custom Properties\r\n    const {\r\n      user,\r\n      userData,\r\n      theme\r\n    } = this.props;\r\n\r\n    // Custom Functions\r\n    const {\r\n      openSnackbar\r\n    } = this.props;\r\n\r\n    // Custom Functions\r\n    const {\r\n      onDeleteAccountClick\r\n    } = this.props;\r\n\r\n    const { selectedTab } = this.state;\r\n\r\n    return (\r\n      <Dialog {...dialogProps}>\r\n        <DialogTitle disableTypography>\r\n          <Typography variant=\"h6\">\r\n            Settings\r\n          </Typography>\r\n\r\n          <Tooltip title=\"Close\">\r\n            <IconButton className={classes.closeButton} onClick={dialogProps.onClose}>\r\n              <CloseIcon />\r\n            </IconButton>\r\n          </Tooltip>\r\n        </DialogTitle>\r\n\r\n        <Hidden xsDown>\r\n          <Tabs\r\n            classes={{ root: classes.tabs }}\r\n            style={{ overflow: 'initial', minHeight: 'initial' }}\r\n\r\n            indicatorColor=\"primary\"\r\n            textColor=\"primary\"\r\n            value={selectedTab}\r\n            variant=\"fullWidth\"\r\n            onChange={this.handleTabChange}>\r\n            {tabs.map((tab) => {\r\n              return (\r\n                <Tab key={tab.key} icon={tab.icon} label={tab.label} />\r\n              );\r\n            })}\r\n          </Tabs>\r\n        </Hidden>\r\n\r\n        <Hidden smUp>\r\n          <Tabs\r\n            classes={{ root: classes.tabs }}\r\n            style={{ overflow: 'initial', minHeight: 'initial' }}\r\n\r\n            indicatorColor=\"primary\"\r\n            scrollButtons=\"off\"\r\n            textColor=\"primary\"\r\n            value={selectedTab}\r\n            variant=\"scrollable\"\r\n            onChange={this.handleTabChange}>\r\n            {tabs.map((tab) => {\r\n              return (\r\n                <Tab key={tab.key} icon={tab.icon} label={tab.label} />\r\n              );\r\n            })}\r\n          </Tabs>\r\n        </Hidden>\r\n\r\n        <SwipeableViews index={selectedTab} onChangeIndex={this.handleIndexChange}>\r\n          <AccountTab\r\n            user={user}\r\n            userData={userData}\r\n\r\n            openSnackbar={openSnackbar}\r\n\r\n            onDeleteAccountClick={onDeleteAccountClick}\r\n          />\r\n\r\n          <AppearanceTab\r\n            theme={theme}\r\n\r\n            openSnackbar={openSnackbar}\r\n          />\r\n\r\n          <LinksTab\r\n            theme={theme}\r\n\r\n            openSnackbar={openSnackbar}\r\n          />\r\n\r\n          <SecurityTab\r\n            user={user}\r\n            userData={userData}\r\n\r\n            openSnackbar={openSnackbar}\r\n          />\r\n        </SwipeableViews>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nSettingsDialog.propTypes = {\r\n  // Styling\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  // Dialog Properties\r\n  dialogProps: PropTypes.object.isRequired,\r\n\r\n  // Custom Properties\r\n  user: PropTypes.object.isRequired,\r\n  userData: PropTypes.object.isRequired,\r\n  theme: PropTypes.object.isRequired,\r\n\r\n  // Custom Functions\r\n  openSnackbar: PropTypes.func.isRequired,\r\n\r\n  // Custom Events\r\n  onDeleteAccountClick: PropTypes.func.isRequired\r\n};\r\n\r\nexport default withStyles(styles)(SettingsDialog);\r\n","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n\r\nimport Hidden from '@material-ui/core/Hidden';\r\nimport Box from '@material-ui/core/Box';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst initialState = {\r\n  username: ''\r\n};\r\n\r\nclass DeleteAccountDialog extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = initialState;\r\n  }\r\n\r\n  handleKeyPress = (event) => {\r\n    const { username } = this.state;\r\n\r\n    if (!username) {\r\n      return;\r\n    }\r\n\r\n    const { userData } = this.props;\r\n\r\n    if (!userData) {\r\n      return;\r\n    }\r\n\r\n    if (username !== userData.username) {\r\n      return;\r\n    }\r\n\r\n    const key = event.key;\r\n\r\n    if (event.altKey || event.ctrlKey || event.metaKey || event.shiftKey) {\r\n      return;\r\n    }\r\n\r\n    if (key === 'Enter') {\r\n      this.props.deleteAccount();\r\n    }\r\n  };\r\n\r\n  handleExited = () => {\r\n    this.setState(initialState);\r\n  };\r\n\r\n  handleUsernameChange = (event) => {\r\n    const username = event.target.value;\r\n\r\n    this.setState({\r\n      username: username\r\n    });\r\n  };\r\n\r\n  render() {\r\n    // Dialog Properties\r\n    const { dialogProps } = this.props;\r\n\r\n    // Custom Properties\r\n    const { performingAction, userData } = this.props;\r\n\r\n    // Custom Functions\r\n    const { deleteAccount } = this.props;\r\n\r\n    const { username } = this.state;\r\n\r\n    return (\r\n      <Dialog {...dialogProps} onKeyPress={this.handleKeyPress} onExited={this.handleExited}>\r\n        <DialogTitle>\r\n          Delete account?\r\n        </DialogTitle>\r\n\r\n        <DialogContent>\r\n          <Box mb={2}>\r\n            <DialogContentText>\r\n              Deleted accounts can’t be recovered.\r\n              All data associated with your account will be deleted.\r\n            </DialogContentText>\r\n\r\n            <DialogContentText>\r\n              Type your username and <Hidden xsDown>click</Hidden><Hidden smUp>tap</Hidden> Delete to delete your account.\r\n              This action is irreversible.\r\n            </DialogContentText>\r\n          </Box>\r\n\r\n          <TextField\r\n            autoComplete=\"username\"\r\n            autoFocus\r\n            color=\"secondary\"\r\n            disabled={performingAction}\r\n            fullWidth\r\n            label=\"Username\"\r\n            placeholder={userData.username}\r\n            required\r\n            type=\"text\"\r\n            value={username}\r\n            variant=\"outlined\"\r\n\r\n            onChange={this.handleUsernameChange}\r\n          />\r\n        </DialogContent>\r\n\r\n        <DialogActions>\r\n          <Button color=\"secondary\" disabled={performingAction} onClick={dialogProps.onClose}>Cancel</Button>\r\n          <Button color=\"secondary\" disabled={performingAction || (username !== userData.username)} variant=\"contained\" onClick={deleteAccount}>Delete</Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nDeleteAccountDialog.propTypes = {\r\n  // Dialog Properties\r\n  dialogProps: PropTypes.object.isRequired,\r\n\r\n  // Custom Properties\r\n  performingAction: PropTypes.bool.isRequired,\r\n  userData: PropTypes.object.isRequired,\r\n\r\n  // Custom Functions\r\n  deleteAccount: PropTypes.func.isRequired\r\n};\r\n\r\nexport default DeleteAccountDialog;\r\n","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\n\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport DialogContent from '@material-ui/core/DialogContent';\r\nimport DialogContentText from '@material-ui/core/DialogContentText';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\n\r\nconst styles = (theme) => ({\r\n  noTitlePadding: {\r\n    paddingTop: theme.spacing(3)\r\n  }\r\n});\r\n\r\nclass AlertDialog extends Component {\r\n  render() {\r\n    // Styling\r\n    const { classes } = this.props;\r\n\r\n    // Dialog Properties\r\n    const { dialogProps } = this.props;\r\n\r\n    // Custom Properties\r\n    const {\r\n      title,\r\n      contentText,\r\n      dismissiveAction,\r\n      confirmingAction,\r\n      acknowledgementAction\r\n    } = this.props;\r\n\r\n    if ((dismissiveAction || confirmingAction) && acknowledgementAction) {\r\n      console.error(\r\n        'Dialogs should contain a maximum of two actions. ' +\r\n        'If a single action is provided, it must be an acknowledgement action. ' +\r\n        'If two actions are provided, one must be a confirming action, and the other a dismissing action. ' +\r\n        'Providing a third action such as “Learn more” is not recommended as it navigates the user away from the dialog, leaving the dialog task unfinished. ' +\r\n        'https://material.io/design/components/dialogs.html#actions'\r\n      );\r\n\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <Dialog {...dialogProps}>\r\n        {title &&\r\n          <DialogTitle>{title}</DialogTitle>\r\n        }\r\n\r\n        <DialogContent className={title ? null : classes.noTitlePadding}>\r\n          <DialogContentText>\r\n            {contentText}\r\n          </DialogContentText>\r\n        </DialogContent>\r\n\r\n        {(dismissiveAction || confirmingAction || acknowledgementAction) &&\r\n          <DialogActions>\r\n            {dismissiveAction}\r\n            {confirmingAction}\r\n            {acknowledgementAction}\r\n          </DialogActions>\r\n        }\r\n      </Dialog>\r\n    );\r\n  }\r\n}\r\n\r\nAlertDialog.propTypes = {\r\n  // Styling\r\n  classes: PropTypes.object.isRequired,\r\n\r\n  // Dialog Properties\r\n  dialogProps: PropTypes.object.isRequired,\r\n\r\n  // Custom Properties\r\n  title: PropTypes.string,\r\n  contentText: PropTypes.string.isRequired,\r\n  dismissiveAction: PropTypes.element,\r\n  confirmingAction: PropTypes.element,\r\n  acknowledgementAction: PropTypes.element,\r\n};\r\n\r\nexport default withStyles(styles)(AlertDialog);\r\n","import React, { Component } from 'react';\r\n\r\nimport PropTypes from 'prop-types';\r\n\r\nimport Hidden from '@material-ui/core/Hidden';\r\n\r\nimport SignUpDialog from '../SignUpDialog';\r\nimport SignInDialog from '../SignInDialog';\r\nimport SettingsDialog from '../SettingsDialog';\r\nimport DeleteAccountDialog from '../DeleteAccountDialog';\r\nimport AlertDialog from '../AlertDialog';\r\n\r\nclass DialogHost extends Component {\r\n  render() {\r\n    // Properties\r\n    const {\r\n      signedIn,\r\n      dialogs\r\n    } = this.props;\r\n\r\n    const signUpDialog = dialogs.signUpDialog;\r\n    const signInDialog = dialogs.signInDialog;\r\n    const settingsDialog = dialogs.settingsDialog;\r\n    const deleteAccountDialog = dialogs.deleteAccountDialog;\r\n    const signOutDialog = dialogs.signOutDialog;\r\n\r\n    return (\r\n      <>\r\n        <Hidden xsDown>\r\n          {signedIn &&\r\n            <>\r\n              <DeleteAccountDialog\r\n                dialogProps={deleteAccountDialog.dialogProps}\r\n\r\n                {...deleteAccountDialog.props}\r\n              />\r\n            </>\r\n          }\r\n\r\n          {!signedIn &&\r\n            <>\r\n              <SignUpDialog\r\n                dialogProps={signUpDialog.dialogProps}\r\n\r\n                {...signUpDialog.props}\r\n              />\r\n\r\n              <SignInDialog\r\n                dialogProps={signInDialog.dialogProps}\r\n\r\n                {...signInDialog.props}\r\n              />\r\n            </>\r\n          }\r\n        </Hidden>\r\n\r\n        <Hidden smDown>\r\n          {signedIn &&\r\n            <>\r\n              <SettingsDialog\r\n                dialogProps={settingsDialog.dialogProps}\r\n\r\n                {...settingsDialog.props}\r\n              />\r\n            </>\r\n          }\r\n        </Hidden>\r\n\r\n        <Hidden smUp>\r\n          {signedIn &&\r\n            <>\r\n              <DeleteAccountDialog\r\n                dialogProps={{\r\n                  fullScreen: true,\r\n\r\n                  ...deleteAccountDialog.dialogProps\r\n                }}\r\n\r\n                {...deleteAccountDialog.props}\r\n              />\r\n            </>\r\n          }\r\n\r\n          {!signedIn &&\r\n            <>\r\n              <SignUpDialog\r\n                dialogProps={{\r\n                  fullScreen: true,\r\n\r\n                  ...signUpDialog.dialogProps\r\n                }}\r\n\r\n                {...signUpDialog.props}\r\n              />\r\n\r\n              <SignInDialog\r\n                dialogProps={{\r\n                  fullScreen: true,\r\n\r\n                  ...signInDialog.dialogProps\r\n                }}\r\n\r\n                {...signInDialog.props}\r\n              />\r\n            </>\r\n          }\r\n        </Hidden>\r\n\r\n        <Hidden mdUp>\r\n          {signedIn &&\r\n            <>\r\n              <SettingsDialog\r\n                dialogProps={{\r\n                  fullScreen: true,\r\n\r\n                  ...settingsDialog.dialogProps\r\n                }}\r\n\r\n                {...settingsDialog.props}\r\n              />\r\n            </>\r\n          }\r\n        </Hidden>\r\n\r\n        {signedIn &&\r\n          <>\r\n            <AlertDialog\r\n              dialogProps={signOutDialog.dialogProps}\r\n\r\n              {...signOutDialog.props}\r\n            />\r\n          </>\r\n        }\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nDialogHost.defaultProps = {\r\n  signedIn: false\r\n};\r\n\r\nDialogHost.propTypes = {\r\n  // Properties\r\n  signedIn: PropTypes.bool.isRequired,\r\n  dialogs: PropTypes.object.isRequired\r\n};\r\n\r\nexport default DialogHost;\r\n","import React, { Component } from 'react';\r\n\r\nimport readingTime from 'reading-time';\r\n\r\nimport { MuiThemeProvider } from '@material-ui/core/styles';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Button from '@material-ui/core/Button';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport { auth, firestore } from '../../firebase';\r\nimport authentication from '../../services/authentication';\r\nimport theming from '../../services/theming';\r\n\r\nimport LaunchScreen from '../LaunchScreen';\r\n\r\nimport Bar from '../Bar';\r\n\r\nimport Router from '../Router';\r\nimport DialogHost from '../DialogHost';\r\n\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      user: null,\r\n      userData: null,\r\n      theme: theming.defaultTheme,\r\n\r\n      signedIn: false,\r\n      ready: false,\r\n      performingAction: false,\r\n\r\n      signUpDialog: {\r\n        open: false\r\n      },\r\n\r\n      signInDialog: {\r\n        open: false\r\n      },\r\n\r\n      settingsDialog: {\r\n        open: false\r\n      },\r\n\r\n      deleteAccountDialog: {\r\n        open: false\r\n      },\r\n\r\n      signOutDialog: {\r\n        open: false\r\n      },\r\n\r\n      snackbar: {\r\n        autoHideDuration: 0,\r\n        message: '',\r\n        open: false\r\n      }\r\n    };\r\n  }\r\n\r\n  openDialog = (dialogId, callback) => {\r\n    const dialog = this.state[dialogId];\r\n\r\n    if (!dialog || dialog.open === undefined || null) {\r\n      return;\r\n    }\r\n\r\n    dialog.open = true;\r\n\r\n    this.setState({ dialog }, callback);\r\n  };\r\n\r\n  closeDialog = (dialogId, callback) => {\r\n    const dialog = this.state[dialogId];\r\n\r\n    if (!dialog || dialog.open === undefined || null) {\r\n      return;\r\n    }\r\n\r\n    dialog.open = false;\r\n\r\n    this.setState({ dialog }, callback);\r\n  };\r\n\r\n  deleteAccount = () => {\r\n    this.setState({\r\n      performingAction: true\r\n    }, () => {\r\n      authentication.deleteAccount().then(() => {\r\n        this.closeDialog('deleteAccountDialog', () => {\r\n          this.openSnackbar('Deleted account');\r\n        });\r\n      }).catch((reason) => {\r\n        const code = reason.code;\r\n        const message = reason.message;\r\n\r\n        switch (code) {\r\n          default:\r\n            this.openSnackbar(message);\r\n            return;\r\n        }\r\n      }).finally(() => {\r\n        this.setState({\r\n          performingAction: false\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  signOut = () => {\r\n    this.setState({\r\n      performingAction: true\r\n    }, () => {\r\n      authentication.signOut().then(() => {\r\n        this.closeDialog('signOutDialog', () => {\r\n          this.openSnackbar('Signed out');\r\n        });\r\n      }).catch((reason) => {\r\n        const code = reason.code;\r\n        const message = reason.message;\r\n\r\n        switch (code) {\r\n          default:\r\n            this.openSnackbar(message);\r\n            return;\r\n        }\r\n      }).finally(() => {\r\n        this.setState({\r\n          performingAction: false\r\n        });\r\n      });\r\n    });\r\n  };\r\n\r\n  openSnackbar = (message, autoHideDuration = 2, callback) => {\r\n    this.setState({\r\n      snackbar: {\r\n        autoHideDuration: readingTime(message).time * autoHideDuration,\r\n        message,\r\n        open: true\r\n      }\r\n    }, () => {\r\n      if (callback && typeof callback === 'function') {\r\n        callback();\r\n      }\r\n    });\r\n  };\r\n\r\n  closeSnackbar = (clearMessage = false) => {\r\n    const { snackbar } = this.state;\r\n\r\n    this.setState({\r\n      snackbar: {\r\n        message: clearMessage ? '' : snackbar.message,\r\n        open: false\r\n      }\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      user,\r\n      userData,\r\n      theme,\r\n      signedIn,\r\n      ready,\r\n      performingAction,\r\n    } = this.state;\r\n\r\n    const {\r\n      signUpDialog,\r\n      signInDialog,\r\n      settingsDialog,\r\n      deleteAccountDialog,\r\n      signOutDialog\r\n    } = this.state;\r\n\r\n    const { snackbar } = this.state;\r\n\r\n    return (\r\n      <MuiThemeProvider theme={theme}>\r\n        <CssBaseline />\r\n\r\n        {!ready &&\r\n          <LaunchScreen />\r\n        }\r\n\r\n        {ready &&\r\n          <>\r\n            <Bar\r\n              signedIn={signedIn}\r\n              performingAction={performingAction}\r\n\r\n              user={user}\r\n              userData={userData}\r\n\r\n              onSignUpClick={() => this.openDialog('signUpDialog')}\r\n              onSignInClick={() => this.openDialog('signInDialog')}\r\n\r\n              onSettingsClick={() => this.openDialog('settingsDialog')}\r\n              onSignOutClick={() => this.openDialog('signOutDialog')}\r\n            />\r\n\r\n            <Router signedIn={signedIn} />\r\n\r\n            <DialogHost\r\n              signedIn={signedIn}\r\n              dialogs={\r\n                {\r\n                  signUpDialog: {\r\n                    dialogProps: {\r\n                      open: signUpDialog.open,\r\n\r\n                      onClose: (callback) => {\r\n                        this.closeDialog('signUpDialog');\r\n\r\n                        if (callback && typeof callback === 'function') {\r\n                          callback();\r\n                        }\r\n                      }\r\n                    },\r\n\r\n                    props: {\r\n                      performingAction: performingAction,\r\n\r\n                      openSnackbar: this.openSnackbar\r\n                    }\r\n                  },\r\n\r\n                  signInDialog: {\r\n                    dialogProps: {\r\n                      open: signInDialog.open,\r\n\r\n                      onClose: (callback) => {\r\n                        this.closeDialog('signInDialog');\r\n\r\n                        if (callback && typeof callback === 'function') {\r\n                          callback();\r\n                        }\r\n                      }\r\n                    },\r\n\r\n                    props: {\r\n                      performingAction: performingAction,\r\n\r\n                      openSnackbar: this.openSnackbar\r\n                    }\r\n                  },\r\n\r\n                  settingsDialog: {\r\n                    dialogProps: {\r\n                      open: settingsDialog.open,\r\n\r\n                      onClose: () => this.closeDialog('settingsDialog')\r\n                    },\r\n\r\n                    props: {\r\n                      user: user,\r\n                      userData: userData,\r\n                      theme: theme,\r\n\r\n                      openSnackbar: this.openSnackbar,\r\n\r\n                      onDeleteAccountClick: () => this.openDialog('deleteAccountDialog')\r\n                    }\r\n                  },\r\n\r\n                  deleteAccountDialog: {\r\n                    dialogProps: {\r\n                      open: deleteAccountDialog.open,\r\n\r\n                      onClose: () => this.closeDialog('deleteAccountDialog')\r\n                    },\r\n\r\n                    props: {\r\n                      performingAction: performingAction,\r\n                      userData: userData,\r\n\r\n                      deleteAccount: this.deleteAccount\r\n                    }\r\n                  },\r\n\r\n                  signOutDialog: {\r\n                    dialogProps: {\r\n                      open: signOutDialog.open,\r\n\r\n                      onClose: () => this.closeDialog('signOutDialog')\r\n                    },\r\n\r\n                    props: {\r\n                      title: 'Sign out?',\r\n                      contentText: 'While signed out you are unable to manage your profile and conduct other activities that require you to be signed in.',\r\n                      dismissiveAction: <Button color=\"primary\" onClick={() => this.closeDialog('signOutDialog')}>Cancel</Button>,\r\n                      confirmingAction: <Button color=\"primary\" disabled={performingAction} variant=\"contained\" onClick={this.signOut}>Sign Out</Button>\r\n                    }\r\n                  }\r\n                }\r\n              }\r\n            />\r\n\r\n            <Snackbar\r\n              autoHideDuration={snackbar.autoHideDuration}\r\n              message={snackbar.message}\r\n              open={snackbar.open}\r\n              onClose={this.closeSnackbar}\r\n            />\r\n          </>\r\n        }\r\n      </MuiThemeProvider>\r\n    );\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.mounted = true;\r\n\r\n    this.removeAuthStateChangedObserver = auth.onAuthStateChanged((user) => {\r\n      if (!user) {\r\n        if (this.removeReferenceListener) {\r\n          this.removeReferenceListener();\r\n        }\r\n\r\n        if (this.mounted) {\r\n          this.setState({\r\n            user: null,\r\n            userData: null,\r\n            theme: theming.defaultTheme,\r\n\r\n            signedIn: false,\r\n            ready: true\r\n          });\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      const uid = user.uid;\r\n\r\n      if (!uid) {\r\n        if (this.removeReferenceListener) {\r\n          this.removeReferenceListener();\r\n        }\r\n\r\n        if (this.mounted) {\r\n          this.setState({\r\n            user: null,\r\n            userData: null,\r\n            theme: theming.defaultTheme,\r\n\r\n            signedIn: false,\r\n            ready: true\r\n          });\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      const reference = firestore.collection('users').doc(uid);\r\n\r\n      if (!reference) {\r\n        if (this.removeReferenceListener) {\r\n          this.removeReferenceListener();\r\n        }\r\n\r\n        if (this.mounted) {\r\n          this.setState({\r\n            user: null,\r\n            userData: null,\r\n            theme: theming.defaultTheme,\r\n\r\n            signedIn: false,\r\n            ready: true\r\n          });\r\n        }\r\n\r\n        return;\r\n      }\r\n\r\n      this.removeReferenceListener = reference.onSnapshot((snapshot) => {\r\n        if (!snapshot.exists) {\r\n          if (this.removeReferenceListener) {\r\n            this.removeReferenceListener();\r\n          }\r\n\r\n          if (this.mounted) {\r\n            this.setState({\r\n              user: null,\r\n              userData: null,\r\n              theme: theming.defaultTheme,\r\n\r\n              signedIn: false,\r\n              ready: true\r\n            });\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        const data = snapshot.data();\r\n\r\n        if (!data) {\r\n          if (this.removeReferenceListener) {\r\n            this.removeReferenceListener();\r\n          }\r\n\r\n          if (this.mounted) {\r\n            this.setState({\r\n              user: null,\r\n              userData: null,\r\n              theme: theming.defaultTheme,\r\n\r\n              signedIn: false,\r\n              ready: true\r\n            });\r\n          }\r\n\r\n          return;\r\n        }\r\n\r\n        if (data.theme) {\r\n          this.setState({\r\n            theme: theming.createTheme(data.theme)\r\n          });\r\n        } else {\r\n          this.setState({\r\n            theme: theming.defaultTheme\r\n          });\r\n        }\r\n\r\n        if (this.mounted) {\r\n          this.setState({\r\n            user: user,\r\n            userData: data,\r\n\r\n            signedIn: true,\r\n            ready: true\r\n          });\r\n        }\r\n      }, (error) => {\r\n        if (this.removeReferenceListener) {\r\n          this.removeReferenceListener();\r\n        }\r\n\r\n        if (this.mounted) {\r\n          this.setState({\r\n            user: null,\r\n            userData: null,\r\n            theme: theming.defaultTheme,\r\n\r\n            signedIn: false,\r\n            ready: true\r\n          }, () => {\r\n            const code = error.code;\r\n            const message = error.message;\r\n\r\n            switch (code) {\r\n              default:\r\n                this.openSnackbar(message);\r\n                return;\r\n            }\r\n          });\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.removeAuthStateChangedObserver) {\r\n      this.removeAuthStateChangedObserver();\r\n    }\r\n\r\n    if (this.removeReferenceListener) {\r\n      this.removeReferenceListener();\r\n    }\r\n\r\n    this.mounted = false;\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport 'typeface-roboto';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n"],"sourceRoot":""}