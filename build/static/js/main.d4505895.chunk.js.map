{"version":3,"sources":["pages/profilepage.js","pages/noticepage.js","pages/favoritepage.js","pages/uploadpage.js","login.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","body","padding","ProfilePage","props","React","useState","signedIn","setSignedIn","useEffect","firebase","auth","onAuthStateChanged","user","console","log","onClick","signOut","name","NoticePage","FavoritePage","UploadPage","Login","email","setEmail","password","setPassword","signedInStatus","setSignedInStatus","signContext","setSignContext","displayName","emailVerified","photoURL","isAnonymous","uid","providerData","JSON","stringify","type","placeholder","onChange","evt","target","value","currentUser","length","alert","signInWithEmailAndPassword","catch","error","errorCode","code","errorMessage","message","createUserWithEmailAndPassword","sendEmailVerification","then","id","require","config","deferredPrompt","API_KEY","process","window","addEventListener","e","prompt","userChoice","choiceResult","outcome","footer","position","left","bottom","width","display","justifyContent","bottomMenu","imageContainer","flexDirection","flexWrap","marginBottom","foodImg","backgroundColor","height","margin","borderRadius","ImageContainer","classes","className","data","title","Feed","undefined","images","setImages","setRecipes","someFetcher","recpiesRef","db","collection","removeImg","listId","a","get","snapshot","images_array","recipe_docs","forEach","doc","push","key","removeFunction","err","App","setValue","redirect","setRedirect","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","firestore","initFirebase","handleChange","event","newValue","button_value","profile_or_login","to","mainContainer","exact","path","component","BottomNavigation","BottomNavigationAction","label","icon","isLocalhost","Boolean","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","ReactDOM","render","document","getElementById","URL","href","origin","fetch","response","contentType","headers","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.d4505895.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\r\nimport { BrowserRouter as Link } from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    padding: 15\r\n  }\r\n});\r\n// () =>\r\nfunction ProfilePage(props) {\r\n\r\n  const [signedIn, setSignedIn] = React.useState(false);\n\n  // start auth listener\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(user => {\n        let signed_in_bool = (user) ? true : false;\n        setSignedIn(signed_in_bool);\n    });\n  }, []);\r\n\r\n  console.log(\"signedIn: \" + signedIn)\r\n\r\n  const classes = useStyles();\r\n\r\n  // console.log(props)\r\n\r\n  return (\r\n\r\n    <div>\r\n    <h1>Hey you</h1>\r\n\r\n    {signedIn === false && <p> Hey you're not signed in. Things won't work here (redirect back) </p>  }\r\n\r\n    <button onClick={ () => firebase.auth().signOut() } name=\"signout\"> Logga ut </button>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default ProfilePage;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    padding: 15\r\n  }\r\n});\r\n\r\nfunction NoticePage(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  // console.log(props)\r\n\r\n  return (\r\n\r\n    <div>\r\n    <h1>Dina notiser</h1>\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default NoticePage;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    padding: 15\r\n  }\r\n});\r\n\r\nfunction FavoritePage(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  // console.log(props)\r\n\r\n  return (\r\n\r\n    <div>\r\n    <h1>Dina listor</h1>\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default FavoritePage;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    padding: 15\r\n  }\r\n});\r\n\r\nfunction UploadPage(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  // console.log(props)\r\n\r\n  return (\r\n\r\n    <div>\r\n    <h1>Upload</h1>\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default UploadPage;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\n\r\nfunction Login(props) {\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [signedInStatus, setSignedInStatus] = useState(\"Ej inloggad\");\r\n  const [signContext, setSignContext ] = useState(\"Logga in\");\r\n\r\n  // init app only once\r\n  useEffect(() => {\r\n    initApp();\r\n  }, []);\r\n\r\n  /**\r\n   * Handles the sign in button press.\r\n   */\r\n  function toggleSignIn() {\r\n\r\n    console.log(\"toggleSignIn\")\r\n\r\n    // sign out if signed in\r\n    if (firebase.auth().currentUser) {\r\n      firebase.auth().signOut();\r\n    } else {\r\n\r\n      if (email.length < 4) {\r\n        alert('Ogiltig mailadress, måste innehålla mer än 4 tecken.');\r\n        return;\r\n      }\r\n      if (password.length < 4) {\r\n        alert('Ogiltigt lösenord, måste innehålla mer än 4 tecken.');\r\n        return;\r\n      }\r\n      // Sign in with email and pass.\r\n      // [START authwithemail]\r\n      firebase.auth().signInWithEmailAndPassword(email, password).catch(function(error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // [START_EXCLUDE]\r\n        if (errorCode === 'auth/wrong-password') {\r\n          alert('fel lösenord.');\r\n        } else {\r\n          alert(errorMessage);\r\n        }\r\n        console.log(error);\r\n\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * Handles the sign up button press.\r\n   */\r\n  function handleSignUp() {\r\n\r\n    console.log(\"handleSignUp\")\r\n\r\n    if (email.length < 4) {\r\n      alert('Ogiltig mailadress, måste innehålla mer än 4 tecken');\r\n      return;\r\n    }\r\n    if (password.length < 4) {\r\n      alert('Ogiltigt lösenord, måste innehålla mer än 4 tecken');\r\n      return;\r\n    }\r\n    // Sign in with email and pass.\r\n    firebase.auth().createUserWithEmailAndPassword(email, password).catch(function(error) {\r\n      // Handle Errors here.\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n\r\n      if (errorCode == 'auth/weak-password') {\r\n        alert('Lösenordet är för svagt.');\r\n      } else {\r\n        alert(errorMessage);\r\n      }\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  function sendEmailVerification() {\r\n\r\n      firebase.auth().currentUser.sendEmailVerification().then(function() {\r\n        // Email Verification sent!\r\n        alert('Email Verification Sent!');\r\n\r\n      });\r\n  }\r\n\r\n  /**\r\n   * initApp handles setting up UI event listeners and registering Firebase auth listeners:\r\n   *  - firebase.auth().onAuthStateChanged: This listener is called when the user is signed in or\r\n   *    out, and that is where we update the UI.\r\n   */\r\n  function initApp() {\r\n\r\n    console.log(\"initApp\")\r\n\r\n    // Listening for auth state changes.\r\n    firebase.auth().onAuthStateChanged(function(user) {\r\n\r\n      if (user) {\r\n        // User is signed in.\r\n        var displayName = user.displayName;\r\n        var email = user.email;\r\n        var emailVerified = user.emailVerified;\r\n        var photoURL = user.photoURL;\r\n        var isAnonymous = user.isAnonymous;\r\n        var uid = user.uid;\r\n        var providerData = user.providerData;\r\n\r\n        console.log('user json: ')\r\n        console.log(JSON.stringify(user, null, '  '))\r\n\r\n        setSignedInStatus('Inloggad');\r\n        setSignContext('Logga ut');\r\n\r\n      } else {\r\n        // User is signed out.\r\n        setSignedInStatus('Ej inloggad');\r\n        setSignContext('Logga in');\r\n      }\r\n\r\n    });\r\n    // [END authstatelistener]\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n    <p>Ange email and lösenord för att logga in eller skapa ett konto</p>\r\n\r\n         <input type=\"text\" name=\"email\" placeholder=\"Email\" onChange={evt => setEmail(evt.target.value)}/>\r\n         &nbsp;&nbsp;&nbsp;\r\n         <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={evt => setPassword(evt.target.value)}/>\r\n\r\n         <br/><br/>\r\n         <button onClick={toggleSignIn} name=\"signin\"> {signContext} </button>\r\n         &nbsp;&nbsp;&nbsp;\r\n         <button onClick={handleSignUp} name=\"signup\">Skapa konto</button>\r\n         &nbsp;&nbsp;&nbsp;\r\n         <button onClick={sendEmailVerification} name=\"verify\">Verifiera konto</button>\r\n\r\n         <span id=\"quickstart-sign-in-status\"> &nbsp; {signedInStatus} </span>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\n/*\r\n\r\n<!--\r\n<button id=\"quickstart-verify-email\" onClick={handleChange} name=\"verify-email\">Send Email Verification</button>\r\n&nbsp;&nbsp;&nbsp;\r\n<button id=\"quickstart-password-reset\" onClick={handleChange} name=\"verify-email\">Send Password Reset Email</button> --> */\r\n\r\nexport default Login;\r\n","import React, {useState, useEffect} from 'react';\nimport { BrowserRouter as Router, Route, Link, Switch, Redirect } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nimport ProfilePage from './pages/profilepage';\nimport NoticePage from './pages/noticepage';\nimport FavoritePage from './pages/favoritepage';\nimport UploadPage from './pages/uploadpage';\nimport Login from './login';\n// import Feed from './pages/feedpage';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport RestoreIcon from '@material-ui/icons/Restore';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport PublishIcon from '@material-ui/icons/PublishRounded';\nimport NotificationsActiveRoundedIcon from '@material-ui/icons/NotificationsActiveRounded';\nimport LoyaltyRoundedIcon from '@material-ui/icons/LoyaltyRounded';\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\n\nrequire('dotenv').config();\n//\nconst API_KEY = process.env.REACT_APP_FIREBASE_API_KEY;\n\nlet deferredPrompt;\n\nwindow.addEventListener('beforeinstallprompt', (e) => {\n  // Stash the event so it can be triggered later.\n  deferredPrompt = e;\n\n  console.log(\"beforeinstallprompt\")\n\n  // alert(\"Heello\")\n\n  deferredPrompt.prompt();\n  // Update UI notify the user they can add to home screen\n  // showInstallPromotion();\n  deferredPrompt.userChoice\n    .then((choiceResult) => {\n      if (choiceResult.outcome === 'accepted') {\n        console.log('User accepted the A2HS prompt');\n      } else {\n        console.log('User dismissed the A2HS prompt');\n      }\n      deferredPrompt = null;\n  });\n\n});\n\nconst useStyles = makeStyles({\n  body: {\n    padding: 15\n  },\n  footer: {\n    position: 'fixed',\n    left: 0,\n    bottom: 0,\n    width: 100 + '%',\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  bottomMenu: {\n    width: 500,\n  },\n  imageContainer: {\n    display: 'flex',\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    justifyContent: 'center',\n    marginBottom: 50,\n\n  },\n  foodImg: {\n    backgroundColor: 'pink',\n    height: 100,\n    width: 100,\n    margin: 5,\n    borderRadius: 20\n  },\n\n});\n\nfunction ImageContainer(props) {\n\n  const classes = useStyles();\n\n  console.log(props)\n  // <button onClick={() => props.removeFunction(props.listId) }>del</button>\n\n  return (\n\n    <div>\n\n      <div className={classes.foodImg}>\n\n      </div>\n      {props.data.title}\n    </div>\n\n  );\n\n}\n\n\nfunction Feed() {\n\n  const [images, setImages] = useState(undefined);\n  const [recipes, setRecipes] = useState(undefined);\n  const [docs, setDocs] = useState(undefined);\n\n  useEffect(() => {\n    someFetcher();\n  }, []);\n\n  const classes = useStyles();\n  let recpiesRef = db.collection('recipes');\n\n  const removeImg = (listId) => {\n\n    console.log(\"remove \" + listId +  \" from parent component \")\n\n  }\n\n  const someFetcher = async () => {\n\n    recpiesRef.get()\n      .then(snapshot => {\n\n        let images_array = [];\n        let recipe_docs = [];\n\n        snapshot.forEach(doc => {\n          images_array.push(<ImageContainer key={doc.id} listId={doc.id} data={doc.data()} removeFunction={removeImg}/>);\n          recipe_docs.push(doc.data());\n          //docs_array.push(doc)\n        })\n\n        setImages(images_array);\n        setRecipes(recipe_docs);\n\n      })\n      .catch(err => {\n        console.log('Error getting documents', err);\n    });\n\n  }\n\n  // <button onClick={() => setCount(count + 1)}>Click me</button>\n\n  return (\n    <div>\n\n      <h1>Nya recept!</h1>\n\n      <div className={classes.imageContainer}>{images}</div>\n\n    </div>\n  );\n\n}\n\nlet db = undefined;\nfunction initFirebase() {\n\n  console.log(\"run initFirebase\")\n\n  const firebaseConfig = {\n    apiKey: API_KEY, // \"AIzaSyAq0vTBf0o5MckjHcCOJiJ_DRK8v_UZY88\",\n    authDomain: \"campuskost-firebase.firebaseapp.com\",\n    databaseURL: \"https://campuskost-firebase.firebaseio.com\",\n    projectId: \"campuskost-firebase\",\n    storageBucket: \"campuskost-firebase.appspot.com\",\n    messagingSenderId: \"477692438735\",\n    appId: \"1:477692438735:web:2e6dce163d7f7ce8baafba\",\n    measurementId: \"G-MDB52ZHJER\"\n  };\n\n  firebase.initializeApp(firebaseConfig);\n  const db = firebase.firestore();\n\n  return db;\n}\n\n\nfunction App() {\n\n  const [signedIn, setSignedIn] = React.useState(false);\n  const [value, setValue] = React.useState('');\n  const [redirect, setRedirect] = React.useState(false);\n\n  // let history = useHistory();\n\n  // start auth listener\n  useEffect(() => {\n    firebase.auth().onAuthStateChanged(user => {\n            if (user)  {\n              // console.log(\"user signed in\")\n              setSignedIn(true);\n            }\n            else {\n              // console.log(\"user NOT signed in\")\n              setSignedIn(false);\n            }\n          });\n  }, []);\n\n  if(db === undefined)\n  {\n    db = initFirebase();\n  }\n\n  const classes = useStyles();\n\n  const handleChange = (event, newValue) => {\n    // console.log(event.target.value)\n    // setValue(newValue);\n    setRedirect(true);\n    // history.push('/' + newValue );\n    let button_value = event.target.value;\n\n    if(button_value != undefined)\n      setValue(button_value);\n    else\n      setValue(newValue);\n\n  };\n\n  /*\n  const handleChange2 = (e) => {\n\n    console.log(e.target.value)\n\n\n  }; */\n\n  console.log(\"signedIn: \" + signedIn)\n\n  let profile_or_login = (signedIn === true) ? \"profile\" : \"login\";\n\n  console.log(\"profile_or_login: \" + profile_or_login)\n  console.log(\"value: \" + value)\n\n  return (\n    <div className={classes.body}>\n\n      <Router>\n\n      {redirect ? <Redirect to={\"/\" + value} /> : null }\n\n      <div className={classes.mainContainer}>\n\n      <button value={profile_or_login} onClick={(e) => handleChange(e)}>{profile_or_login}</button>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <Feed/>\n          </Route>\n\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/profile\" component={ProfilePage} />\n          <Route path=\"/upload\" component={UploadPage} />\n          <Route path=\"/notices\" component={NoticePage} />\n          <Route path=\"/saved\" component={FavoritePage} />\n        </Switch>\n\n      </div>\n      <div className={classes.footer}>\n        <BottomNavigation value={value} onChange={handleChange} className={classes.bottomMenu}>\n          <BottomNavigationAction label=\"Flöde\" value=\"\" icon={<HomeRoundedIcon />} />\n          <BottomNavigationAction label=\"Ladda up\" value=\"upload\" icon={<PublishIcon />} />\n          <BottomNavigationAction label=\"Notiser\" value=\"notices\" icon={<NotificationsActiveRoundedIcon />} />\n          <BottomNavigationAction label=\"Sparat\" value=\"saved\" icon={<LoyaltyRoundedIcon />} />\n        </BottomNavigation>\n      </div>\n\n      </Router>\n    </div>\n  );\n}\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}