{"version":3,"sources":["store.js","pages/feedpage.js","pages/profilepage.js","pages/noticepage.js","pages/favoritepage.js","pages/uploadpage.js","pages/recipepage.js","pages/login.js","App.js","serviceWorker.js","index.js"],"names":["combineReducers","testReducers","state","num","action","type","step","uploadReducer","title","userReducer","signedIn","ImageContainer","props","classes","useStyles","to","data","className","foodImg","makeStyles","imageContainer","display","flexDirection","flexWrap","justifyContent","marginBottom","backgroundColor","height","width","margin","borderRadius","FeedPage","useState","images_array","i","push","key","listId","user","default_content","images","undefined","useEffect","db","collection","body","padding","ProfilePage","React","useSelector","console","log","onClick","firebase","auth","signOut","name","NoticePage","FavoritePage","UploadPage","dispatch","useDispatch","placeholder","onChange","evt","target","value","RecipePage","match","params","recipe","Login","email","setEmail","password","setPassword","signedInStatus","setSignedInStatus","signContext","setSignContext","onAuthStateChanged","displayName","emailVerified","photoURL","isAnonymous","uid","providerData","currentUser","length","alert","signInWithEmailAndPassword","catch","error","errorCode","code","errorMessage","message","createUserWithEmailAndPassword","sendEmailVerification","then","id","require","config","deferredPrompt","API_KEY","process","window","addEventListener","e","prompt","userChoice","choiceResult","outcome","ProfileBtn","text","btn","profileBtn","handleChange","jsx_content","footer","position","left","bottom","headerrow","color","bottomMenu","App","setValue","redirect","setRedirect","state_user","firebaseConfig","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","initializeApp","firestore","initFirebase","event","newValue","button_value","mainContainer","exact","path","component","BottomNavigation","BottomNavigationAction","label","icon","isLocalhost","Boolean","location","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","store","createStore","reducer","rootElement","document","getElementById","ReactDOM","render","URL","href","origin","fetch","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.5e1312d0.chunk.js","sourcesContent":["import { combineReducers } from 'redux';\r\n\r\nfunction testreducer(state = { num: 0 }, action) {\r\n  switch (action.type) {\r\n    case \"INCREMENT\":\r\n      return {\r\n        ...state,\r\n        num: state.num + action.step\r\n      };\r\n    case \"DECREMENT\":\r\n      return {\r\n        ...state,\r\n        num: state.num - action.step\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction uploadReducer(state = { title: \"title\" }, action) {\r\n  switch (action.type) {\r\n    case \"SETTITLE\":\r\n      return {\r\n        ...state,\r\n        title: action.title\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nfunction userReducer(state = { signedIn: false }, action) {\r\n  switch (action.type) {\r\n    case \"SIGNIN\":\r\n      return {\r\n        ...state,\r\n        signedIn: true\r\n      };\r\n    case \"SIGNOUT\":\r\n      return {\r\n        ...state,\r\n        signedIn: false\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n\r\n// export default reducer;\r\n\r\nexport default combineReducers({\r\n  testReducers: testreducer,\r\n  uploadReducer: uploadReducer,\r\n  userReducer: userReducer\r\n});\r\n","import React, {useState, useEffect} from 'react';\r\nimport { BrowserRouter as Link} from \"react-router-dom\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nfunction FeedPage(props) {\r\n\r\n  const [images, setImages] = useState(default_content());\r\n  const [recipes, setRecipes] = useState(undefined);\r\n  const [docs, setDocs] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    // someFetcher();\r\n  }, []);\r\n\r\n  const classes = useStyles();\r\n  let recpiesRef = props.db.collection('recipes');\r\n\r\n  function default_content() {\r\n    let images_array = [];\r\n    for(let i = 0; i < 3; i++)\r\n      images_array.push(<ImageContainer key={i} listId={i} data={{title: \"Pannkaka\", user: \"Sara\"}}/>);\r\n    return images_array;\r\n  }\r\n\r\n  const someFetcher = async () => {\r\n\r\n    recpiesRef.get()\r\n      .then(snapshot => {\r\n\r\n        let images_array = [];\r\n        let recipe_docs = [];\r\n\r\n        snapshot.forEach(doc => {\r\n          images_array.push(<ImageContainer key={doc.id} listId={doc.id} data={doc.data()}/>);\r\n          recipe_docs.push(doc.data());\r\n        })\r\n\r\n        setImages(images_array);\r\n        setRecipes(recipe_docs);\r\n\r\n      })\r\n      .catch(err => {\r\n        console.log('Error getting documents', err);\r\n    });\r\n\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>Nya recept!</h1>\r\n      <div className={classes.imageContainer}>{images}</div>\r\n    </div>\r\n  );\r\n\r\n}\r\n\r\nfunction ImageContainer(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Link to={\"/recipe/\" + props.data.title } >\r\n      <div>\r\n      <div className={classes.foodImg}></div>\r\n      {props.data.title}\r\n      </div>\r\n    </Link>\r\n  );\r\n}\r\n\r\nconst useStyles = makeStyles({\r\n  imageContainer: {\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    flexWrap: 'wrap',\r\n    justifyContent: 'center',\r\n    marginBottom: 50,\r\n\r\n  },\r\n  foodImg: {\r\n    backgroundColor: 'pink',\r\n    height: 100,\r\n    width: 100,\r\n    margin: 5,\r\n    borderRadius: 20\r\n  },\r\n});\r\n\r\nexport default FeedPage;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { BrowserRouter as Link, Redirect} from \"react-router-dom\";\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\n\r\nconst useMountEffect = (fun) => useEffect(fun, []);\r\n\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    padding: 15\r\n  }\r\n});\r\n// () =>\r\nfunction ProfilePage(props) {\r\n\r\n  const [signedIn, setSignedIn] = React.useState(false);\n  const [redirect, setRedirect] = React.useState(false);\n\n  const classes = useStyles();\n  const state = useSelector(state => state.userReducer); // subscribe to the redux store\n  console.log(state)\n\r\n  function handleSignOut() {\r\n\r\n    firebase.auth().signOut();\r\n    setRedirect(true);\r\n\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n\r\n      {!state.signedIn ? <Redirect to={\"/\"} /> : null }\r\n\r\n      <h1>Hey you</h1>\r\n      {state.signedIn === false && <p> Hey you're not signed in. Things won't work here (redirect back) </p>  }\r\n      <button onClick={ () => firebase.auth().signOut() } name=\"signout\"> Logga ut </button>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default ProfilePage;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    padding: 15\r\n  }\r\n});\r\n\r\nfunction NoticePage(props) {\r\n\r\n  const classes = useStyles();\r\n  // console.log(props)\r\n\r\n  return (\r\n\r\n    <div>\r\n    <h1>Dina notiser</h1>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\n\r\nexport default NoticePage;\r\n","import React, {useState, useEffect} from 'react';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    padding: 15\r\n  }\r\n});\r\n\r\nfunction FavoritePage(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  // console.log(props)\r\n\r\n  return (\r\n\r\n    <div>\r\n    <h1>Dina listor</h1>\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default FavoritePage;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n// import { useIncrementdispatch } from '../actions/RecipeActions';\r\n\r\nfunction UploadPage(props) {\r\n\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch(); // be able to dispatch\r\n  //const state = useSelector(state => state.testReducers); // subscribe to the redux store // testReducers\r\n  const state = useSelector(state => state.uploadReducer);\r\n  console.log(state)\r\n\r\n  const titleDisp = (evt) => {\r\n    dispatch({\r\n      type: \"SETTITLE\",\r\n      title: evt.target.value\r\n    })\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n      <h1>Upload</h1>\r\n\r\n      <input type=\"text\" name=\"rtitle\" placeholder=\"Recept\" onChange={titleDisp}/>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\n// material ui design\r\nconst useStyles = makeStyles({\r\n  body: {\r\n    padding: 15\r\n  }\r\n});\r\n\r\nexport default UploadPage;\r\n\r\n/*\r\n\r\n<button\r\nonClick={() => dispatch({\r\n  type: \"INCREMENT\",\r\n  step: 1\r\n})}\r\n>*/\r\n","import React, {useState, useEffect} from 'react';\r\n// import { recipeFetch } from '../actions/RecipeActions';\r\n\r\nfunction RecipePage(props) {\r\n\r\n  // console.log(props)\r\n\r\n  return (\r\n\r\n    <div>\r\n    <h1>Recept: {props.match.params.recipe}</h1>\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default RecipePage;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport firebase from 'firebase/app';\r\nimport 'firebase/auth';\r\nimport 'firebase/firestore';\r\n\r\n\r\nfunction Login(props) {\r\n\r\n  const [email, setEmail] = useState(\"\");\r\n  const [password, setPassword] = useState(\"\");\r\n  const [signedInStatus, setSignedInStatus] = useState(\"Ej inloggad\");\r\n  const [signContext, setSignContext ] = useState(\"Logga in\");\r\n\r\n  const dispatch = useDispatch(); // be able to dispatch\r\n  // const state = useSelector(state => state.userReducer); // subscribe to the redux store\r\n  // console.log(state)\r\n\r\n\r\n  // init app only once\r\n  useEffect(() => {\r\n    initApp();\r\n  }, []);\r\n\r\n  /**\r\n   * Handles the sign in button press.\r\n   */\r\n  function toggleSignIn() {\r\n\r\n    console.log(\"toggleSignIn\")\r\n\r\n    // sign out if signed in\r\n    if (firebase.auth().currentUser) {\r\n      firebase.auth().signOut();\r\n    } else {\r\n\r\n      if (email.length < 4) {\r\n        alert('Ogiltig mailadress, måste innehålla mer än 4 tecken.');\r\n        return;\r\n      }\r\n      if (password.length < 4) {\r\n        alert('Ogiltigt lösenord, måste innehålla mer än 4 tecken.');\r\n        return;\r\n      }\r\n      // Sign in with email and pass.\r\n      // [START authwithemail]\r\n      firebase.auth().signInWithEmailAndPassword(email, password).catch(function(error) {\r\n        // Handle Errors here.\r\n        var errorCode = error.code;\r\n        var errorMessage = error.message;\r\n        // [START_EXCLUDE]\r\n        if (errorCode === 'auth/wrong-password') {\r\n          alert('fel lösenord.');\r\n        } else {\r\n          alert(errorMessage);\r\n        }\r\n        console.log(error);\r\n\r\n      });\r\n    }\r\n  }\r\n  /**\r\n   * Handles the sign up button press.\r\n   */\r\n  function handleSignUp() {\r\n\r\n    console.log(\"handleSignUp\")\r\n\r\n    if (email.length < 4) {\r\n      alert('Ogiltig mailadress, måste innehålla mer än 4 tecken');\r\n      return;\r\n    }\r\n    if (password.length < 4) {\r\n      alert('Ogiltigt lösenord, måste innehålla mer än 4 tecken');\r\n      return;\r\n    }\r\n    // Sign in with email and pass.\r\n    firebase.auth().createUserWithEmailAndPassword(email, password).catch(function(error) {\r\n      // Handle Errors here.\r\n      var errorCode = error.code;\r\n      var errorMessage = error.message;\r\n\r\n      if (errorCode == 'auth/weak-password') {\r\n        alert('Lösenordet är för svagt.');\r\n      } else {\r\n        alert(errorMessage);\r\n      }\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  function sendEmailVerification() {\r\n\r\n      firebase.auth().currentUser.sendEmailVerification().then(function() {\r\n        // Email Verification sent!\r\n        alert('Email Verification Sent!');\r\n\r\n      });\r\n  }\r\n\r\n  /**\r\n   * initApp handles setting up UI event listeners and registering Firebase auth listeners:\r\n   *  - firebase.auth().onAuthStateChanged: This listener is called when the user is signed in or\r\n   *    out, and that is where we update the UI.\r\n   */\r\n  function initApp() {\r\n\r\n    console.log(\"initApp\")\r\n\r\n    // Listening for auth state changes.\r\n    firebase.auth().onAuthStateChanged(function(user) {\r\n\r\n      if (user) {\r\n        // User is signed in.\r\n        var displayName = user.displayName;\r\n        var email = user.email;\r\n        var emailVerified = user.emailVerified;\r\n        var photoURL = user.photoURL;\r\n        var isAnonymous = user.isAnonymous;\r\n        var uid = user.uid;\r\n        var providerData = user.providerData;\r\n\r\n        // console.log('user json: ')\r\n        //console.log(JSON.stringify(user, null, '  '))\r\n\r\n        setSignedInStatus('Inloggad');\r\n        setSignContext('Logga ut');\r\n\r\n        dispatch({\r\n          type: \"SIGNIN\",\r\n          signedIn: \"\"\r\n        })\r\n\r\n\r\n      } else {\r\n        // User is signed out.\r\n        setSignedInStatus('Ej inloggad');\r\n        setSignContext('Logga in');\r\n\r\n        dispatch({\r\n          type: \"SIGNOUT\",\r\n          signedIn: \"\"\r\n        })\r\n      }\r\n\r\n    });\r\n    // [END authstatelistener]\r\n  }\r\n\r\n  return (\r\n\r\n    <div>\r\n    <p>Ange email and lösenord för att logga in eller skapa ett konto</p>\r\n\r\n         <input type=\"text\" name=\"email\" placeholder=\"Email\" onChange={evt => setEmail(evt.target.value)}/>\r\n         &nbsp;&nbsp;&nbsp;\r\n         <input type=\"password\" name=\"password\" placeholder=\"Password\" onChange={evt => setPassword(evt.target.value)}/>\r\n\r\n         <br/><br/>\r\n         <button onClick={toggleSignIn} name=\"signin\"> {signContext} </button>\r\n         &nbsp;&nbsp;&nbsp;\r\n         <button onClick={handleSignUp} name=\"signup\">Skapa konto</button>\r\n         &nbsp;&nbsp;&nbsp;\r\n         <button onClick={sendEmailVerification} name=\"verify\">Verifiera konto</button>\r\n\r\n         <span id=\"quickstart-sign-in-status\"> &nbsp; {signedInStatus} </span>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\n/*\r\n\r\n<!--\r\n<button id=\"quickstart-verify-email\" onClick={handleChange} name=\"verify-email\">Send Email Verification</button>\r\n&nbsp;&nbsp;&nbsp;\r\n<button id=\"quickstart-password-reset\" onClick={handleChange} name=\"verify-email\">Send Password Reset Email</button> --> */\r\n\r\nexport default Login;\r\n","import React, {useState, useEffect} from 'react';\nimport { useSelector } from \"react-redux\";\nimport { useDispatch } from \"react-redux\";\nimport { BrowserRouter as Router, Route, Link, Switch, Redirect } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport { incrementdispatch } from './actions/RecipeActions';\nimport './App.css';\n\nimport firebase from 'firebase/app';\nimport 'firebase/auth';\nimport 'firebase/firestore';\n\nimport FeedPage from './pages/feedpage';\nimport ProfilePage from './pages/profilepage';\nimport NoticePage from './pages/noticepage';\nimport FavoritePage from './pages/favoritepage';\nimport UploadPage from './pages/uploadpage';\nimport RecipePage from './pages/recipepage';\nimport Login from './pages/login';\n// import Feed from './pages/feedpage';\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport Icon from '@material-ui/core/Icon';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\n\nimport PublishIcon from '@material-ui/icons/PublishRounded';\nimport NotificationsActiveRoundedIcon from '@material-ui/icons/NotificationsActiveRounded';\nimport LoyaltyRoundedIcon from '@material-ui/icons/LoyaltyRounded';\nimport HomeRoundedIcon from '@material-ui/icons/HomeRounded';\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\n\nrequire('dotenv').config();\n//\nconst API_KEY = process.env.REACT_APP_FIREBASE_API_KEY;\n\n// for PWA - needed?\nlet deferredPrompt;\nwindow.addEventListener('beforeinstallprompt', (e) => {\n  // Stash the event so it can be triggered later.\n  deferredPrompt = e;\n  deferredPrompt.prompt();\n\n  // Update UI notify the user they can add to home screen\n  deferredPrompt.userChoice\n    .then((choiceResult) => {\n      if (choiceResult.outcome === 'accepted') {\n        console.log('User accepted the A2HS prompt');\n      } else {\n        console.log('User dismissed the A2HS prompt');\n      }\n      deferredPrompt = null;\n  });\n\n});\n\nlet db = undefined;\nfunction initFirebase() {\n\n  console.log(\"run initFirebase\")\n\n  const firebaseConfig = {\n    apiKey: API_KEY, // \"AIzaSyAq0vTBf0o5MckjHcCOJiJ_DRK8v_UZY88\",\n    authDomain: \"campuskost-firebase.firebaseapp.com\",\n    databaseURL: \"https://campuskost-firebase.firebaseio.com\",\n    projectId: \"campuskost-firebase\",\n    storageBucket: \"campuskost-firebase.appspot.com\",\n    messagingSenderId: \"477692438735\",\n    appId: \"1:477692438735:web:2e6dce163d7f7ce8baafba\",\n    measurementId: \"G-MDB52ZHJER\"\n  };\n\n  firebase.initializeApp(firebaseConfig);\n  const db = firebase.firestore();\n\n  return db;\n}\n\nfunction ProfileBtn (props) {\n\n  const classes = useStyles();\n\n  console.log(props)\n\n  let text = (props.signedIn === true) ? \"profile\" : \"login\";\n  let btn = (\n    <div className={classes.profileBtn}>\n      <button value={text} onClick={(e) => props.handleChange(e)}>{text}</button>\n    </div> );\n\n  let jsx_content = props.signedIn ? <Link to={\"/profile\"}><AccountCircleIcon/></Link> : btn;\n\n  return (<div>{jsx_content} </div>);\n\n}\n\nfunction App() {\n\n  // const [signedIn, setSignedIn] = React.useState(false);\n  const [value, setValue] = React.useState('');\n  const [redirect, setRedirect] = React.useState(false);\n\n  const classes = useStyles();\n  const dispatch = useDispatch(); // be able to dispatch\n  const state_user = useSelector(state => state.userReducer); // subscribe to the redux store\n  console.log(state_user)\n\n  // start auth listener\n  useEffect(() => {\n\n    firebase.auth().onAuthStateChanged(user => {\n      dispatch({ type: user ? \"SIGNIN\" : \"SIGNOUT\" })\n    });\n\n  }, []);\n\n  if(db === undefined) // init firebase once\n    db = initFirebase();\n\n  const handleChange = (event, newValue) => {\n\n    setRedirect(true);\n    let button_value = event.target.value;\n    if(button_value != undefined)\n      setValue(button_value);\n    else\n      setValue(newValue);\n\n  };\n\n\n  return (\n    <div className={classes.body}>\n\n      <Router>\n\n      {redirect ? <Redirect to={\"/\" + value} /> : null }\n\n      <div className={classes.mainContainer}>\n\n        <div className={classes.headerrow}>\n        <ProfileBtn signedIn={state_user.signedIn} handleChange={handleChange}/>\n        </div>\n\n        <Switch>\n          <Route exact path=\"/\">\n            <FeedPage db={db}/>\n          </Route>\n\n          <Route path=\"/login\" component={Login} />\n          <Route path=\"/profile\" component={ProfilePage} />\n          <Route path=\"/upload\" component={UploadPage} />\n          <Route path=\"/notices\" component={NoticePage} />\n          <Route path=\"/saved\" component={FavoritePage} />\n          <Route path=\"/recipe/:recipe\" component={RecipePage} />\n\n        </Switch>\n\n      </div>\n      <div className={classes.footer}>\n        <BottomNavigation value={value} onChange={handleChange} className={classes.bottomMenu}>\n          <BottomNavigationAction label=\"Flöde\" value=\"\" icon={<HomeRoundedIcon />} />\n          <BottomNavigationAction label=\"Ladda up\" value=\"upload\" icon={<PublishIcon />} />\n          <BottomNavigationAction label=\"Notiser\" value=\"notices\" icon={<NotificationsActiveRoundedIcon />} />\n          <BottomNavigationAction label=\"Sparat\" value=\"saved\" icon={<LoyaltyRoundedIcon />} />\n        </BottomNavigation>\n      </div>\n\n      </Router>\n    </div>\n  );\n}\n\nconst useStyles = makeStyles({\n  body: {\n    padding: 15\n  },\n  footer: {\n    position: 'fixed',\n    left: 0,\n    bottom: 0,\n    width: 100 + '%',\n    display: 'flex',\n    justifyContent: 'center'\n  },\n  headerrow: {\n    display: 'flex',\n    justifyContent: 'flex-end'\n  },\n  profileBtn: {\n    color: 'green'\n  },\n  bottomMenu: {\n    width: 500,\n  }\n\n});\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport { createStore } from \"redux\";\nimport reducer from \"./store.js\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst store = createStore(reducer);\n\nconst rootElement = document.getElementById('root');\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  rootElement\n);\n\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n// serviceWorker.unregister();\nserviceWorker.register();\n"],"sourceRoot":""}